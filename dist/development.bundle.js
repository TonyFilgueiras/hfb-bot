/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@abraham/reflection/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@abraham/reflection/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decorate\": () => (/* binding */ decorate),\n/* harmony export */   \"metadata\": () => (/* binding */ metadata),\n/* harmony export */   \"getMetadata\": () => (/* binding */ getMetadata),\n/* harmony export */   \"getOwnMetadata\": () => (/* binding */ getOwnMetadata),\n/* harmony export */   \"hasOwnMetadata\": () => (/* binding */ hasOwnMetadata),\n/* harmony export */   \"hasMetadata\": () => (/* binding */ hasMetadata),\n/* harmony export */   \"defineMetadata\": () => (/* binding */ defineMetadata),\n/* harmony export */   \"Reflection\": () => (/* binding */ Reflection)\n/* harmony export */ });\nconst Metadata = new WeakMap();\nfunction decorateProperty(decorators, target, propertyKey, descriptor) {\n    decorators.reverse().forEach((decorator) => {\n        descriptor = decorator(target, propertyKey, descriptor) || descriptor;\n    });\n    return descriptor;\n}\nfunction decorateConstructor(decorators, target) {\n    decorators.reverse().forEach((decorator) => {\n        const decorated = decorator(target);\n        if (decorated) {\n            target = decorated;\n        }\n    });\n    return target;\n}\nfunction decorate(decorators, target, propertyKey, attributes) {\n    if (!Array.isArray(decorators) || decorators.length === 0) {\n        throw new TypeError();\n    }\n    if (propertyKey !== undefined) {\n        return decorateProperty(decorators, target, propertyKey, attributes);\n    }\n    if (typeof target === 'function') {\n        return decorateConstructor(decorators, target);\n    }\n    return;\n}\nfunction getMetadataMap(target, propertyKey) {\n    return Metadata.get(target) && Metadata.get(target).get(propertyKey);\n}\nfunction ordinaryGetOwnMetadata(metadataKey, target, propertyKey) {\n    if (target === undefined) {\n        throw new TypeError();\n    }\n    const metadataMap = getMetadataMap(target, propertyKey);\n    return metadataMap && metadataMap.get(metadataKey);\n}\nfunction createMetadataMap(target, propertyKey) {\n    const targetMetadata = Metadata.get(target) ||\n        new Map();\n    Metadata.set(target, targetMetadata);\n    const metadataMap = targetMetadata.get(propertyKey) || new Map();\n    targetMetadata.set(propertyKey, metadataMap);\n    return metadataMap;\n}\nfunction ordinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey) {\n    if (propertyKey && !['string', 'symbol'].includes(typeof propertyKey)) {\n        throw new TypeError();\n    }\n    (getMetadataMap(target, propertyKey) ||\n        createMetadataMap(target, propertyKey)).set(metadataKey, metadataValue);\n}\nfunction ordinaryGetMetadata(metadataKey, target, propertyKey) {\n    return ordinaryGetOwnMetadata(metadataKey, target, propertyKey)\n        ? ordinaryGetOwnMetadata(metadataKey, target, propertyKey)\n        : Object.getPrototypeOf(target)\n            ? ordinaryGetMetadata(metadataKey, Object.getPrototypeOf(target), propertyKey)\n            : undefined;\n}\nfunction metadata(metadataKey, metadataValue) {\n    return function decorator(target, propertyKey) {\n        ordinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    };\n}\nfunction getMetadata(metadataKey, target, propertyKey) {\n    return ordinaryGetMetadata(metadataKey, target, propertyKey);\n}\nfunction getOwnMetadata(metadataKey, target, propertyKey) {\n    return ordinaryGetOwnMetadata(metadataKey, target, propertyKey);\n}\nfunction hasOwnMetadata(metadataKey, target, propertyKey) {\n    return !!ordinaryGetOwnMetadata(metadataKey, target, propertyKey);\n}\nfunction hasMetadata(metadataKey, target, propertyKey) {\n    return !!ordinaryGetMetadata(metadataKey, target, propertyKey);\n}\nfunction defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n    ordinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n}\nconst Reflection = {\n    decorate,\n    defineMetadata,\n    getMetadata,\n    getOwnMetadata,\n    hasMetadata,\n    hasOwnMetadata,\n    metadata,\n};\nObject.assign(Reflect, Reflection);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bfl-bot/./node_modules/@abraham/reflection/dist/index.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://bfl-bot/./node_modules/events/events.js?");

/***/ }),

/***/ "./src/Bot.ts":
/*!********************!*\
  !*** ./src/Bot.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ./core/Room */ \"./src/core/Room.ts\"));\r\nconst AFK_1 = __webpack_require__(/*! ./modules/administration/AFK */ \"./src/modules/administration/AFK.ts\");\r\nconst Game_1 = __importDefault(__webpack_require__(/*! ./modules/Game */ \"./src/modules/Game.ts\"));\r\nconst Register_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Register */ \"./src/modules/administration/Register.ts\"));\r\nconst Help_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Help */ \"./src/modules/administration/Help.ts\"));\r\nconst BetterChat_1 = __webpack_require__(/*! ./modules/administration/BetterChat */ \"./src/modules/administration/BetterChat.ts\");\r\nconst Admin_1 = __webpack_require__(/*! ./modules/administration/Admin */ \"./src/modules/administration/Admin.ts\");\r\nconst Version_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Version */ \"./src/modules/administration/Version.ts\"));\r\nconst Discord_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Discord */ \"./src/modules/administration/Discord.ts\"));\r\nconst AntiFake_1 = __importDefault(__webpack_require__(/*! ./modules/administration/AntiFake */ \"./src/modules/administration/AntiFake.ts\"));\r\nconst Log_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Log */ \"./src/modules/administration/Log.ts\"));\r\nconst Tutorial_1 = __importDefault(__webpack_require__(/*! ./modules/administration/Tutorial */ \"./src/modules/administration/Tutorial.ts\"));\r\nconst restrictNonRegisteredPlayers = !!window[\"CustomSettings\"]?.nivel;\r\nconst prod = {\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.MODE === \"production\" ? true : false;\r\nconst room = new Room_1.default({\r\n    public: prod,\r\n    noPlayer: true,\r\n    maxPlayers: 25,\r\n    roomName: `🏈 𝗕𝗙𝗟 • Futebol Americano ${restrictNonRegisteredPlayers ? \"ᴺᴵⱽᴱᴸ\" : \" \"}🏈`\r\n});\r\nroom.setPlayerChat(false);\r\nif (prod) {\r\n    room.module(AntiFake_1.default);\r\n}\r\nif ({\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.ENABLE_LOG == \"true\") {\r\n    room.module(Log_1.default);\r\n}\r\nroom.module(Register_1.default);\r\nroom.module(Game_1.default);\r\nroom.module(AFK_1.AFK);\r\nroom.module(Help_1.default);\r\nroom.module(BetterChat_1.BetterChat);\r\nroom.module(Admin_1.Admin);\r\nroom.module(Version_1.default);\r\nroom.module(Discord_1.default);\r\nroom.module(Tutorial_1.default);\r\nconsole.log(\"%chttps://github.com/bfleague/bfl-bot\", \"font-size: 16px;\");\r\nwindow[\"room\"] = room;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/Bot.ts?");

/***/ }),

/***/ "./src/Database.ts":
/*!*************************!*\
  !*** ./src/Database.ts ***!
  \*************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ResponseType = void 0;\r\nconst Global = __importStar(__webpack_require__(/*! ./Global */ \"./src/Global.ts\"));\r\nvar ResponseType;\r\n(function (ResponseType) {\r\n    ResponseType[\"Success\"] = \"success\";\r\n    ResponseType[\"Error\"] = \"error\";\r\n    ResponseType[\"InternalError\"] = \"internal_error\";\r\n})(ResponseType = exports.ResponseType || (exports.ResponseType = {}));\r\nclass Database {\r\n    url = `http://localhost:${{\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.DATABASE_PORT ?? Global.DEFAULT_PORTS.DATABASE}/db`;\r\n    static ResponseType = {\r\n        Success: \"success\",\r\n        Error: \"error\",\r\n        InternalError: \"internal_error\"\r\n    };\r\n    send(method, params) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(this.url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: '*/*',\r\n                    Origin: 'http://www.haxball.com',\r\n                    Host: this.url,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    method: method,\r\n                    params: params\r\n                })\r\n            })\r\n                .then(function (response) {\r\n                return response.json();\r\n            })\r\n                .then(function (responseObject) {\r\n                if (responseObject)\r\n                    resolve(responseObject);\r\n                resolve({ type: ResponseType.InternalError });\r\n            })\r\n                .catch((err) => {\r\n                console.error(err);\r\n                resolve({ type: ResponseType.InternalError });\r\n            });\r\n        });\r\n    }\r\n    async registerPlayer(name, discord, password) {\r\n        return await this.send(\"registerPlayer\", [name, discord, password]);\r\n    }\r\n    async getPlayer(query) {\r\n        return await this.send(\"getPlayer\", [query]);\r\n    }\r\n    async updateAuth(name, auth) {\r\n        return await this.send(\"updatePlayerAuth\", [name, auth]);\r\n    }\r\n    async ping() {\r\n        return await this.send(\"ping\", []);\r\n    }\r\n}\r\nexports[\"default\"] = Database;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/Database.ts?");

/***/ }),

/***/ "./src/Global.ts":
/*!***********************!*\
  !*** ./src/Global.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Color = exports.BallDamping = exports.statsVersion = exports.adminAccountRole = exports.bypassRegisterRole = exports.notRegistered = exports.loggedRole = exports.discord = exports.version = exports.TICKS_PER_SECOND = exports.DEFAULT_PORTS = void 0;\r\nvar DEFAULT_PORTS;\r\n(function (DEFAULT_PORTS) {\r\n    DEFAULT_PORTS[DEFAULT_PORTS[\"RECS\"] = 4000] = \"RECS\";\r\n    DEFAULT_PORTS[DEFAULT_PORTS[\"DATABASE\"] = 3000] = \"DATABASE\";\r\n})(DEFAULT_PORTS = exports.DEFAULT_PORTS || (exports.DEFAULT_PORTS = {}));\r\n;\r\nexports.TICKS_PER_SECOND = 60;\r\nexports.version = \"07/12/2022\";\r\nexports.discord = \"discord.gg/6E6bZymqTt\";\r\nexports.loggedRole = \"loggedIn\";\r\nexports.notRegistered = \"notRegistered\";\r\nexports.bypassRegisterRole = \"bypassRegisterRole\";\r\nexports.adminAccountRole = \"adminAccount\";\r\nexports.statsVersion = \"1\";\r\nvar BallDamping;\r\n(function (BallDamping) {\r\n    BallDamping[BallDamping[\"Default\"] = 0.99] = \"Default\";\r\n    BallDamping[BallDamping[\"High\"] = 1.002] = \"High\";\r\n    BallDamping[BallDamping[\"Highest\"] = 1.006] = \"Highest\";\r\n})(BallDamping = exports.BallDamping || (exports.BallDamping = {}));\r\nvar Color;\r\n(function (Color) {\r\n    Color[Color[\"AliceBlue\"] = 15792383] = \"AliceBlue\";\r\n    Color[Color[\"AntiqueWhite\"] = 16444375] = \"AntiqueWhite\";\r\n    Color[Color[\"Aqua\"] = 65535] = \"Aqua\";\r\n    Color[Color[\"AquaMarine\"] = 8388564] = \"AquaMarine\";\r\n    Color[Color[\"Azure\"] = 15794175] = \"Azure\";\r\n    Color[Color[\"Beige\"] = 16119260] = \"Beige\";\r\n    Color[Color[\"Bisque\"] = 16770244] = \"Bisque\";\r\n    Color[Color[\"Black\"] = 0] = \"Black\";\r\n    Color[Color[\"BlancheDalmond\"] = 16772045] = \"BlancheDalmond\";\r\n    Color[Color[\"Blue\"] = 255] = \"Blue\";\r\n    Color[Color[\"BlueViolet\"] = 9055202] = \"BlueViolet\";\r\n    Color[Color[\"Brown\"] = 10824234] = \"Brown\";\r\n    Color[Color[\"Burlywood\"] = 14596231] = \"Burlywood\";\r\n    Color[Color[\"CadetBlue\"] = 6266528] = \"CadetBlue\";\r\n    Color[Color[\"Chartreuse\"] = 8388352] = \"Chartreuse\";\r\n    Color[Color[\"Chocolate\"] = 13789470] = \"Chocolate\";\r\n    Color[Color[\"Coral\"] = 16744272] = \"Coral\";\r\n    Color[Color[\"CornflowerBlue\"] = 6591981] = \"CornflowerBlue\";\r\n    Color[Color[\"Cornsilk\"] = 16775388] = \"Cornsilk\";\r\n    Color[Color[\"Crimson\"] = 14423100] = \"Crimson\";\r\n    Color[Color[\"Cyan\"] = 65535] = \"Cyan\";\r\n    Color[Color[\"DarkBlue\"] = 139] = \"DarkBlue\";\r\n    Color[Color[\"DarkCyan\"] = 35723] = \"DarkCyan\";\r\n    Color[Color[\"DarkGoldenRod\"] = 12092939] = \"DarkGoldenRod\";\r\n    Color[Color[\"DarkGray\"] = 11119017] = \"DarkGray\";\r\n    Color[Color[\"DarkGreen\"] = 25600] = \"DarkGreen\";\r\n    Color[Color[\"DarkKhaki\"] = 12433259] = \"DarkKhaki\";\r\n    Color[Color[\"DarkMagenta\"] = 9109643] = \"DarkMagenta\";\r\n    Color[Color[\"DarkOliveGreen\"] = 5597999] = \"DarkOliveGreen\";\r\n    Color[Color[\"DarkOrange\"] = 16747520] = \"DarkOrange\";\r\n    Color[Color[\"DarkOrchid\"] = 10040012] = \"DarkOrchid\";\r\n    Color[Color[\"DarkRed\"] = 9109504] = \"DarkRed\";\r\n    Color[Color[\"DarkSalmon\"] = 15308410] = \"DarkSalmon\";\r\n    Color[Color[\"DarkseaGreen\"] = 9419919] = \"DarkseaGreen\";\r\n    Color[Color[\"DarkSlateBlue\"] = 4734347] = \"DarkSlateBlue\";\r\n    Color[Color[\"DarkSlateGray\"] = 3100495] = \"DarkSlateGray\";\r\n    Color[Color[\"DarkTurquoise\"] = 52945] = \"DarkTurquoise\";\r\n    Color[Color[\"DarkViolet\"] = 9699539] = \"DarkViolet\";\r\n    Color[Color[\"DeepPink\"] = 16716947] = \"DeepPink\";\r\n    Color[Color[\"DeepSkyBlue\"] = 49151] = \"DeepSkyBlue\";\r\n    Color[Color[\"DimGray\"] = 6908265] = \"DimGray\";\r\n    Color[Color[\"DodgerBlue\"] = 2003199] = \"DodgerBlue\";\r\n    Color[Color[\"Firebrick\"] = 11674146] = \"Firebrick\";\r\n    Color[Color[\"FloralWhite\"] = 16775920] = \"FloralWhite\";\r\n    Color[Color[\"ForestGreen\"] = 2263842] = \"ForestGreen\";\r\n    Color[Color[\"Fuchsia\"] = 16711935] = \"Fuchsia\";\r\n    Color[Color[\"Gainsboro\"] = 14474460] = \"Gainsboro\";\r\n    Color[Color[\"GhostWhite\"] = 16316671] = \"GhostWhite\";\r\n    Color[Color[\"Gold\"] = 16766720] = \"Gold\";\r\n    Color[Color[\"GoldenRod\"] = 14329120] = \"GoldenRod\";\r\n    Color[Color[\"Gray\"] = 8421504] = \"Gray\";\r\n    Color[Color[\"Green\"] = 32768] = \"Green\";\r\n    Color[Color[\"GreenYellow\"] = 11403055] = \"GreenYellow\";\r\n    Color[Color[\"Honeydew\"] = 15794160] = \"Honeydew\";\r\n    Color[Color[\"HotPink\"] = 16738740] = \"HotPink\";\r\n    Color[Color[\"IndianRed\"] = 13458524] = \"IndianRed\";\r\n    Color[Color[\"Indigo\"] = 4915330] = \"Indigo\";\r\n    Color[Color[\"Ivory\"] = 16777200] = \"Ivory\";\r\n    Color[Color[\"Khaki\"] = 15787660] = \"Khaki\";\r\n    Color[Color[\"Lavender\"] = 15132410] = \"Lavender\";\r\n    Color[Color[\"Lavenderblush\"] = 16773365] = \"Lavenderblush\";\r\n    Color[Color[\"LawnGreen\"] = 8190976] = \"LawnGreen\";\r\n    Color[Color[\"LemonChiffon\"] = 16775885] = \"LemonChiffon\";\r\n    Color[Color[\"LightBlue\"] = 11393254] = \"LightBlue\";\r\n    Color[Color[\"Lightcoral\"] = 15761536] = \"Lightcoral\";\r\n    Color[Color[\"LightCyan\"] = 14745599] = \"LightCyan\";\r\n    Color[Color[\"LightGoldenRodYellow\"] = 16448210] = \"LightGoldenRodYellow\";\r\n    Color[Color[\"LightGrey\"] = 13882323] = \"LightGrey\";\r\n    Color[Color[\"LightGreen\"] = 9498256] = \"LightGreen\";\r\n    Color[Color[\"LightPink\"] = 16758465] = \"LightPink\";\r\n    Color[Color[\"LightSalmon\"] = 16752762] = \"LightSalmon\";\r\n    Color[Color[\"LightSeaGreen\"] = 2142890] = \"LightSeaGreen\";\r\n    Color[Color[\"LightSkyBlue\"] = 8900346] = \"LightSkyBlue\";\r\n    Color[Color[\"LightSlateGray\"] = 7833753] = \"LightSlateGray\";\r\n    Color[Color[\"LightSteelBlue\"] = 11584734] = \"LightSteelBlue\";\r\n    Color[Color[\"LightYellow\"] = 16777184] = \"LightYellow\";\r\n    Color[Color[\"Lime\"] = 65280] = \"Lime\";\r\n    Color[Color[\"LimeGreen\"] = 3329330] = \"LimeGreen\";\r\n    Color[Color[\"Linen\"] = 16445670] = \"Linen\";\r\n    Color[Color[\"Magenta\"] = 16711935] = \"Magenta\";\r\n    Color[Color[\"Maroon\"] = 8388608] = \"Maroon\";\r\n    Color[Color[\"MediumAquamarine\"] = 6737322] = \"MediumAquamarine\";\r\n    Color[Color[\"MediumBlue\"] = 205] = \"MediumBlue\";\r\n    Color[Color[\"Mediumorchid\"] = 12211667] = \"Mediumorchid\";\r\n    Color[Color[\"MediumPurple\"] = 9662680] = \"MediumPurple\";\r\n    Color[Color[\"MediumSeaGreen\"] = 3978097] = \"MediumSeaGreen\";\r\n    Color[Color[\"MediumSlateBlue\"] = 8087790] = \"MediumSlateBlue\";\r\n    Color[Color[\"MediumspringGreen\"] = 64154] = \"MediumspringGreen\";\r\n    Color[Color[\"MediumTurquoise\"] = 4772300] = \"MediumTurquoise\";\r\n    Color[Color[\"MediumVioletRed\"] = 13047173] = \"MediumVioletRed\";\r\n    Color[Color[\"MidnightBlue\"] = 1644912] = \"MidnightBlue\";\r\n    Color[Color[\"MintCream\"] = 16121850] = \"MintCream\";\r\n    Color[Color[\"MistyRose\"] = 16770273] = \"MistyRose\";\r\n    Color[Color[\"Moccasin\"] = 16770229] = \"Moccasin\";\r\n    Color[Color[\"NavajoWhite\"] = 16768685] = \"NavajoWhite\";\r\n    Color[Color[\"Navy\"] = 128] = \"Navy\";\r\n    Color[Color[\"OldLace\"] = 16643558] = \"OldLace\";\r\n    Color[Color[\"Olive\"] = 8421376] = \"Olive\";\r\n    Color[Color[\"OliveDrab\"] = 7048739] = \"OliveDrab\";\r\n    Color[Color[\"Orange\"] = 16753920] = \"Orange\";\r\n    Color[Color[\"OrangeRed\"] = 16729344] = \"OrangeRed\";\r\n    Color[Color[\"Orchid\"] = 14315734] = \"Orchid\";\r\n    Color[Color[\"PaleGoldenRod\"] = 15657130] = \"PaleGoldenRod\";\r\n    Color[Color[\"PaleGreen\"] = 10025880] = \"PaleGreen\";\r\n    Color[Color[\"PaleTurquoise\"] = 11529966] = \"PaleTurquoise\";\r\n    Color[Color[\"PaleVioletRed\"] = 14184595] = \"PaleVioletRed\";\r\n    Color[Color[\"PapayaWhip\"] = 16773077] = \"PapayaWhip\";\r\n    Color[Color[\"Peachpuff\"] = 16767673] = \"Peachpuff\";\r\n    Color[Color[\"Peru\"] = 13468991] = \"Peru\";\r\n    Color[Color[\"Pink\"] = 16761035] = \"Pink\";\r\n    Color[Color[\"Plum\"] = 14524637] = \"Plum\";\r\n    Color[Color[\"PowderBlue\"] = 11591910] = \"PowderBlue\";\r\n    Color[Color[\"Purple\"] = 8388736] = \"Purple\";\r\n    Color[Color[\"RebeccaPurple\"] = 6697881] = \"RebeccaPurple\";\r\n    Color[Color[\"Red\"] = 16711680] = \"Red\";\r\n    Color[Color[\"RosyBrown\"] = 12357519] = \"RosyBrown\";\r\n    Color[Color[\"RoyalBlue\"] = 4286945] = \"RoyalBlue\";\r\n    Color[Color[\"SaddleBrown\"] = 9127187] = \"SaddleBrown\";\r\n    Color[Color[\"Salmon\"] = 16416882] = \"Salmon\";\r\n    Color[Color[\"SandyBrown\"] = 16032864] = \"SandyBrown\";\r\n    Color[Color[\"SeaGreen\"] = 3050327] = \"SeaGreen\";\r\n    Color[Color[\"Seashell\"] = 16774638] = \"Seashell\";\r\n    Color[Color[\"Sienna\"] = 10506797] = \"Sienna\";\r\n    Color[Color[\"Silver\"] = 12632256] = \"Silver\";\r\n    Color[Color[\"SkyBlue\"] = 8900331] = \"SkyBlue\";\r\n    Color[Color[\"SlateBlue\"] = 6970061] = \"SlateBlue\";\r\n    Color[Color[\"SlateGray\"] = 7372944] = \"SlateGray\";\r\n    Color[Color[\"Snow\"] = 16775930] = \"Snow\";\r\n    Color[Color[\"SpringGreen\"] = 65407] = \"SpringGreen\";\r\n    Color[Color[\"SteelBlue\"] = 4620980] = \"SteelBlue\";\r\n    Color[Color[\"Tan\"] = 13808780] = \"Tan\";\r\n    Color[Color[\"Teal\"] = 32896] = \"Teal\";\r\n    Color[Color[\"Thistle\"] = 14204888] = \"Thistle\";\r\n    Color[Color[\"Tomato\"] = 16737095] = \"Tomato\";\r\n    Color[Color[\"Turquoise\"] = 4251856] = \"Turquoise\";\r\n    Color[Color[\"Violet\"] = 15631086] = \"Violet\";\r\n    Color[Color[\"Wheat\"] = 16113331] = \"Wheat\";\r\n    Color[Color[\"White\"] = 16777215] = \"White\";\r\n    Color[Color[\"WhiteSmoke\"] = 16119285] = \"WhiteSmoke\";\r\n    Color[Color[\"Yellow\"] = 16776960] = \"Yellow\";\r\n    Color[Color[\"YellowGreen\"] = 10145074] = \"YellowGreen\";\r\n    Color[Color[\"Haxball\"] = 9360043] = \"Haxball\";\r\n})(Color = exports.Color || (exports.Color = {}));\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/Global.ts?");

/***/ }),

/***/ "./src/core/AbstractDisc.ts":
/*!**********************************!*\
  !*** ./src/core/AbstractDisc.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass AbstractDisc {\r\n    _room;\r\n    constructor(_room) {\r\n        this._room = _room;\r\n    }\r\n    distanceTo(disc) {\r\n        if (!disc)\r\n            return null;\r\n        let discX, discY, discRadius;\r\n        if (disc instanceof AbstractDisc) {\r\n            discX = disc.getX();\r\n            discY = disc.getY();\r\n            discRadius = disc.getRadius();\r\n        }\r\n        else {\r\n            discX = disc.x;\r\n            discY = disc.y;\r\n            discRadius = disc.radius;\r\n        }\r\n        if (isNaN(parseInt(this.getX() + \"\")) || isNaN(parseInt(this.getY() + \"\")))\r\n            return null;\r\n        if (isNaN(parseInt(discX + \"\")) || isNaN(parseInt(discY + \"\")))\r\n            return null;\r\n        if (isNaN(parseInt(this.getRadius() + \"\")) || isNaN(parseInt(discX + \"\")))\r\n            return null;\r\n        const x1 = this.getX();\r\n        const y1 = this.getY();\r\n        const r1 = this.getRadius();\r\n        const x2 = discX;\r\n        const y2 = discY;\r\n        const r2 = discRadius;\r\n        const dx = x1 - x2;\r\n        const dy = y1 - y2;\r\n        const c = Math.sqrt(dx * dx + dy * dy);\r\n        return Math.max(0, c - r1 - r2);\r\n    }\r\n    isCollidingWith(disc) {\r\n        const distance = this.distanceTo(disc);\r\n        return distance ? distance <= 0 : false;\r\n    }\r\n    getPosition() {\r\n        return { x: this.getDiscObject()?.x, y: this.getDiscObject()?.y };\r\n    }\r\n    setPosition(pos) {\r\n        this.setDiscObject(pos);\r\n    }\r\n    getX() {\r\n        return this.getDiscObject()?.x;\r\n    }\r\n    setX(value) {\r\n        this.setDiscObject({ x: value });\r\n    }\r\n    getY() {\r\n        return this.getDiscObject()?.y;\r\n    }\r\n    setY(value) {\r\n        this.setDiscObject({ y: value });\r\n    }\r\n    getVelocity() {\r\n        return Math.sqrt(this.getVelocityX() * this.getVelocityX() + this.getVelocityY() * this.getVelocityY());\r\n    }\r\n    getVelocityX() {\r\n        return this.getDiscObject()?.xspeed;\r\n    }\r\n    setVelocityX(value) {\r\n        this.setDiscObject({ xspeed: value });\r\n    }\r\n    getVelocityY() {\r\n        return this.getDiscObject()?.yspeed;\r\n    }\r\n    setVelocityY(value) {\r\n        this.setDiscObject({ yspeed: value });\r\n    }\r\n    getGravityX() {\r\n        return this.getDiscObject()?.xgravity;\r\n    }\r\n    setGravityX(value) {\r\n        this.setDiscObject({ xgravity: value });\r\n    }\r\n    getGravityY() {\r\n        return this.getDiscObject()?.ygravity;\r\n    }\r\n    setGravityY(value) {\r\n        this.setDiscObject({ ygravity: value });\r\n    }\r\n    getRadius() {\r\n        return this.getDiscObject()?.radius;\r\n    }\r\n    setRadius(value) {\r\n        this.setDiscObject({ radius: value });\r\n    }\r\n    getbCoeff() {\r\n        return this.getDiscObject()?.bCoeff;\r\n    }\r\n    setbCoeff(value) {\r\n        this.setDiscObject({ bCoeff: value });\r\n    }\r\n    getInvMass() {\r\n        return this.getDiscObject()?.invMass;\r\n    }\r\n    setInvMass(value) {\r\n        this.setDiscObject({ invMass: value });\r\n    }\r\n    getDamping() {\r\n        return this.getDiscObject()?.damping;\r\n    }\r\n    setDamping(value) {\r\n        this.setDiscObject({ damping: value });\r\n    }\r\n    getcMask() {\r\n        return this.getDiscObject()?.cMask;\r\n    }\r\n    setcMask(value) {\r\n        this.setDiscObject({ cMask: value });\r\n    }\r\n    getcGroup() {\r\n        return this.getDiscObject()?.cGroup;\r\n    }\r\n    setcGroup(value) {\r\n        this.setDiscObject({ cGroup: value });\r\n    }\r\n}\r\nexports[\"default\"] = AbstractDisc;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/AbstractDisc.ts?");

/***/ }),

/***/ "./src/core/Command.ts":
/*!*****************************!*\
  !*** ./src/core/Command.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getCommandArgumentsFromString = exports.getCommandNameFromString = void 0;\r\n__webpack_require__(/*! @abraham/reflection */ \"./node_modules/@abraham/reflection/dist/index.js\");\r\nfunction desconstructMessage(message, prefix) {\r\n    return message.slice(prefix.length).trim().split(/ +/);\r\n}\r\nfunction getCommandNameFromString(str, prefix) {\r\n    return desconstructMessage(str, prefix)[0].toLowerCase();\r\n}\r\nexports.getCommandNameFromString = getCommandNameFromString;\r\nfunction getCommandArgumentsFromString(str, prefix) {\r\n    return desconstructMessage(str, prefix).slice(1);\r\n}\r\nexports.getCommandArgumentsFromString = getCommandArgumentsFromString;\r\nfunction Command(options) {\r\n    return (target, key, descriptor) => {\r\n        const commands = Reflect.getMetadata('module:commands', target);\r\n        const command = options;\r\n        command.func = descriptor.value;\r\n        if (commands) {\r\n            commands.push(command);\r\n        }\r\n        else {\r\n            Reflect.defineMetadata('module:commands', [command], target);\r\n        }\r\n    };\r\n}\r\nexports[\"default\"] = Command;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Command.ts?");

/***/ }),

/***/ "./src/core/Disc.ts":
/*!**************************!*\
  !*** ./src/core/Disc.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst AbstractDisc_1 = __importDefault(__webpack_require__(/*! ./AbstractDisc */ \"./src/core/AbstractDisc.ts\"));\r\nconst Settings_1 = __importDefault(__webpack_require__(/*! ./Settings */ \"./src/core/Settings.ts\"));\r\nclass Disc extends AbstractDisc_1.default {\r\n    index;\r\n    settings = new Settings_1.default();\r\n    constructor(room, discIndex) {\r\n        super(room);\r\n        this.index = discIndex;\r\n    }\r\n    getDiscObject() {\r\n        return this._room.getNative().getDiscProperties(this.index);\r\n    }\r\n    setDiscObject(properties) {\r\n        this._room.getNative().setDiscProperties(this.index, properties);\r\n    }\r\n    getColor() {\r\n        return this.getDiscObject().color;\r\n    }\r\n    setColor(value) {\r\n        this.setDiscObject({ color: value });\r\n    }\r\n}\r\nexports[\"default\"] = Disc;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Disc.ts?");

/***/ }),

/***/ "./src/core/Global.ts":
/*!****************************!*\
  !*** ./src/core/Global.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Team = void 0;\r\nvar Team;\r\n(function (Team) {\r\n    Team[Team[\"Spectators\"] = 0] = \"Spectators\";\r\n    Team[Team[\"Red\"] = 1] = \"Red\";\r\n    Team[Team[\"Blue\"] = 2] = \"Blue\";\r\n})(Team = exports.Team || (exports.Team = {}));\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Global.ts?");

/***/ }),

/***/ "./src/core/List.ts":
/*!**************************!*\
  !*** ./src/core/List.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass List {\r\n    list = [];\r\n    [Symbol.iterator]() {\r\n        let i = 0;\r\n        const arr = this.getList();\r\n        return {\r\n            next: () => ({ value: arr[i++], done: i > arr.length })\r\n        };\r\n    }\r\n    get size() {\r\n        return this.getList().length;\r\n    }\r\n    getList() {\r\n        return this.list;\r\n    }\r\n    find(callback) {\r\n        for (const item of this) {\r\n            if (callback(item))\r\n                return item;\r\n        }\r\n    }\r\n    forEach(callback) {\r\n        for (const item of this) {\r\n            callback(item);\r\n        }\r\n    }\r\n    filter(callback) {\r\n        const filteredArray = [];\r\n        for (const item of this) {\r\n            if (callback(item))\r\n                filteredArray.push(item);\r\n        }\r\n        return filteredArray;\r\n    }\r\n    getValues() {\r\n        return this.getList();\r\n    }\r\n}\r\nexports[\"default\"] = List;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/List.ts?");

/***/ }),

/***/ "./src/core/Module.ts":
/*!****************************!*\
  !*** ./src/core/Module.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Module = void 0;\r\n__webpack_require__(/*! @abraham/reflection */ \"./node_modules/@abraham/reflection/dist/index.js\");\r\nclass Module {\r\n    constructor() {\r\n        Reflect.defineMetadata('module:isModule', true, this);\r\n    }\r\n}\r\nexports.Module = Module;\r\nexports[\"default\"] = Module;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Module.ts?");

/***/ }),

/***/ "./src/core/Player.ts":
/*!****************************!*\
  !*** ./src/core/Player.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst AbstractDisc_1 = __importDefault(__webpack_require__(/*! ./AbstractDisc */ \"./src/core/AbstractDisc.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ./Global */ \"./src/core/Global.ts\");\r\nconst Room_1 = __webpack_require__(/*! ./Room */ \"./src/core/Room.ts\");\r\nconst Settings_1 = __importDefault(__webpack_require__(/*! ./Settings */ \"./src/core/Settings.ts\"));\r\nfunction arraysEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (a == null || b == null)\r\n        return false;\r\n    if (a.length !== b.length)\r\n        return false;\r\n    for (var i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nclass Player extends AbstractDisc_1.default {\r\n    _isConfirmed;\r\n    _kickLimitDistance = 4;\r\n    positionInList = [-1, -1];\r\n    playerLeaveObj = null;\r\n    lastPos = { x: null, y: null };\r\n    confirmLevels = [];\r\n    name;\r\n    id;\r\n    auth;\r\n    conn;\r\n    ip;\r\n    settings = new Settings_1.default();\r\n    canReadChat = true;\r\n    canUseCommands = true;\r\n    roles = [];\r\n    constructor(room, playerObject, _isConfirmed = true) {\r\n        super(room);\r\n        this._isConfirmed = _isConfirmed;\r\n        this.name = playerObject.name;\r\n        this.id = playerObject.id;\r\n        this.auth = playerObject.auth;\r\n        this.conn = playerObject.conn;\r\n        this.ip = this._decodeConn(this.conn);\r\n    }\r\n    getDiscObject() {\r\n        return this._room.getNative().getPlayerDiscProperties(this.id);\r\n    }\r\n    setDiscObject(properties) {\r\n        this._room.getNative().setPlayerDiscProperties(this.id, properties);\r\n    }\r\n    _decodeConn(str) {\r\n        return decodeURIComponent(str.replace(/(..)/g, '%$1'));\r\n    }\r\n    updatePlayerPositionInList() {\r\n        const specs = this._room.getPlayers().filter(p => p.getTeam() === Global_1.Team.Spectators);\r\n        this.positionInList[1] = this.positionInList[0];\r\n        this.positionInList[0] = specs.findIndex(p => p.id === this.id);\r\n    }\r\n    getPositionInList() {\r\n        return {\r\n            now: this.positionInList[0],\r\n            before: this.positionInList[1]\r\n        };\r\n    }\r\n    setAvatar(avatar) {\r\n        this._room.setAvatar(this.id, avatar);\r\n    }\r\n    clearAvatar() {\r\n        this._room.setAvatar(this.id, null);\r\n    }\r\n    kick(reason) {\r\n        this._room.kick(this.id, reason);\r\n    }\r\n    ban(reason) {\r\n        this._room.ban(this.id, reason);\r\n    }\r\n    canKick(disc) {\r\n        const distance = disc.distanceTo(this);\r\n        return distance ? distance < this._kickLimitDistance : false;\r\n    }\r\n    getPlayerObject() {\r\n        return this.playerLeaveObj ?? this._room.getNative().getPlayer(this.id);\r\n    }\r\n    getMention() {\r\n        return `@${this.name.replace(/ /g, \"_\")}`;\r\n    }\r\n    reply(message) {\r\n        message.targetID = this.id ?? -1;\r\n        this._room.send(message);\r\n    }\r\n    getTeam() {\r\n        return this.getPlayerObject()?.team;\r\n    }\r\n    setTeam(team) {\r\n        this._room.setTeam(this.id, team);\r\n    }\r\n    isAdmin() {\r\n        return this.getPlayerObject()?.admin;\r\n    }\r\n    setAdmin(value) {\r\n        this._room.setAdmin(this.id, value);\r\n    }\r\n    getPosition() {\r\n        return this.getPlayerObject()?.position;\r\n    }\r\n    setPosition(pos) {\r\n        this.setDiscObject({ x: pos.x, y: pos.y });\r\n    }\r\n    getLastPosition() {\r\n        return this.lastPos;\r\n    }\r\n    updateLastPosition() {\r\n        this.lastPos = this.getPosition();\r\n    }\r\n    addConfirmLevel(name) {\r\n        this.confirmLevels.push(name);\r\n        if (arraysEqual(this._room.getConfirmLevels(), this.confirmLevels)) {\r\n            this._isConfirmed = true;\r\n            this._room.emit(Room_1.EventNames.onPlayerJoin, this);\r\n        }\r\n    }\r\n    isConfirmed() {\r\n        return this._isConfirmed;\r\n    }\r\n    disable(playerObj) {\r\n        this.playerLeaveObj = playerObj;\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = Player;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Player.ts?");

/***/ }),

/***/ "./src/core/PlayerList.ts":
/*!********************************!*\
  !*** ./src/core/PlayerList.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Global_1 = __webpack_require__(/*! ./Global */ \"./src/core/Global.ts\");\r\nconst List_1 = __importDefault(__webpack_require__(/*! ./List */ \"./src/core/List.ts\"));\r\nclass PlayerList extends List_1.default {\r\n    constructor(players) {\r\n        super();\r\n        if (players)\r\n            this.list = players;\r\n    }\r\n    static isPlayerObject(playerObject) {\r\n        if (playerObject == null)\r\n            return false;\r\n        if (playerObject[\"name\"] == null)\r\n            return false;\r\n        if (playerObject[\"team\"] == null)\r\n            return false;\r\n        if (playerObject[\"id\"] == null)\r\n            return false;\r\n        if (playerObject[\"admin\"] == null)\r\n            return false;\r\n        return true;\r\n    }\r\n    first() {\r\n        return this.list[0];\r\n    }\r\n    teams() {\r\n        return this.filter(p => p.getTeam() !== Global_1.Team.Spectators);\r\n    }\r\n    spectators() {\r\n        return this.filter(p => p.getTeam() === Global_1.Team.Spectators);\r\n    }\r\n    red() {\r\n        return this.filter(p => p.getTeam() === Global_1.Team.Red);\r\n    }\r\n    blue() {\r\n        return this.filter(p => p.getTeam() === Global_1.Team.Blue);\r\n    }\r\n    get(id) {\r\n        return this.list.find(obj => obj.id === id) ?? null;\r\n    }\r\n    add(player) {\r\n        this.list.push(player);\r\n    }\r\n    remove(id) {\r\n        this.list = this.filter(obj => obj.id !== id);\r\n    }\r\n    clear() {\r\n        this.list = [];\r\n    }\r\n    clone() {\r\n        return new PlayerList(this.list);\r\n    }\r\n}\r\nexports[\"default\"] = PlayerList;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/PlayerList.ts?");

/***/ }),

/***/ "./src/core/Room.ts":
/*!**************************!*\
  !*** ./src/core/Room.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventNames = void 0;\r\n__webpack_require__(/*! @abraham/reflection */ \"./node_modules/@abraham/reflection/dist/index.js\");\r\nconst events_1 = __importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\r\nconst Command_1 = __webpack_require__(/*! ./Command */ \"./src/core/Command.ts\");\r\nconst Disc_1 = __importDefault(__webpack_require__(/*! ./Disc */ \"./src/core/Disc.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ./Global */ \"./src/core/Global.ts\");\r\nconst Player_1 = __importDefault(__webpack_require__(/*! ./Player */ \"./src/core/Player.ts\"));\r\nconst PlayerList_1 = __importDefault(__webpack_require__(/*! ./PlayerList */ \"./src/core/PlayerList.ts\"));\r\nvar EventNames;\r\n(function (EventNames) {\r\n    EventNames[\"onPlayerJoin\"] = \"playerJoin\";\r\n    EventNames[\"onPlayerLeave\"] = \"playerLeave\";\r\n    EventNames[\"onTeamVictory\"] = \"teamVictory\";\r\n    EventNames[\"onPlayerChat\"] = \"playerChat\";\r\n    EventNames[\"onPlayerBallKick\"] = \"playerBallKick\";\r\n    EventNames[\"onTeamGoal\"] = \"teamGoal\";\r\n    EventNames[\"onGameStart\"] = \"gameStart\";\r\n    EventNames[\"onGameStop\"] = \"gameStop\";\r\n    EventNames[\"onPlayerAdminChange\"] = \"playerAdminChange\";\r\n    EventNames[\"onPlayerTeamChange\"] = \"playerTeamChanged\";\r\n    EventNames[\"onPlayerKicked\"] = \"playerKicked\";\r\n    EventNames[\"onGameTick\"] = \"gameTick\";\r\n    EventNames[\"onGamePause\"] = \"gamePause\";\r\n    EventNames[\"onGameUnpause\"] = \"gameUnpause\";\r\n    EventNames[\"onPositionsReset\"] = \"positionsReset\";\r\n    EventNames[\"onPlayerActivity\"] = \"playerActivity\";\r\n    EventNames[\"onStadiumChange\"] = \"stadiumChange\";\r\n    EventNames[\"onRoomLink\"] = \"roomLink\";\r\n    EventNames[\"onKickRateLimitSet\"] = \"kickRateLimitSet\";\r\n})(EventNames = exports.EventNames || (exports.EventNames = {}));\r\nclass Room extends events_1.default {\r\n    _room;\r\n    _password;\r\n    _paused = false;\r\n    _running = false;\r\n    _players = new PlayerList_1.default();\r\n    _deletedPlayers = new PlayerList_1.default();\r\n    _discs = [];\r\n    _commands = [];\r\n    _ballCollisions = [];\r\n    _playerChat = true;\r\n    _playerConfirmLevels = [];\r\n    prefix = \"!\";\r\n    CollisionFlags;\r\n    constructor(config) {\r\n        super();\r\n        if (config.noPlayer == null)\r\n            config.noPlayer = true;\r\n        this._room = window.HBInit(config);\r\n        this.CollisionFlags = this._room.CollisionFlags;\r\n        this.load();\r\n        this.setMaxListeners(0);\r\n    }\r\n    _specialEvents = {\r\n        [EventNames.onGameStart]: (byPlayer) => {\r\n            this._discs = [];\r\n            this._running = true;\r\n            this.emit(\"gameStartTicking\");\r\n            for (let i = 0; i < this._room.getDiscCount() - this.getPlayers().teams().length; i++) {\r\n                this._discs.push(new Disc_1.default(this, i));\r\n            }\r\n        },\r\n        [EventNames.onGameStop]: (byPlayer) => {\r\n            this._paused = false;\r\n            this._running = false;\r\n            this._discs = [];\r\n            this._ballCollisions = [];\r\n        },\r\n        [EventNames.onGamePause]: (byPlayer) => {\r\n            this._paused = true;\r\n            this._running = false;\r\n        },\r\n        [EventNames.onGameUnpause]: (byPlayer) => {\r\n            this._paused = false;\r\n        },\r\n        [EventNames.onPlayerJoin]: (player) => {\r\n            const isConfirmationRequired = this._playerConfirmLevels.length !== 0;\r\n            const p = new Player_1.default(this, player, !isConfirmationRequired);\r\n            this._players.add(p);\r\n            for (const player of this._players) {\r\n                player.updatePlayerPositionInList();\r\n            }\r\n            if (isConfirmationRequired) {\r\n                this.emit(\"playerNeedsConfirmation\", p);\r\n            }\r\n            return p;\r\n        },\r\n        [EventNames.onPlayerLeave]: (player) => {\r\n            const p = this._players.get(player.id);\r\n            if (p)\r\n                this._deletedPlayers.add(p);\r\n            this._players.remove(player.id);\r\n            for (const player of this._players) {\r\n                player.updatePlayerPositionInList();\r\n            }\r\n        },\r\n        [EventNames.onPlayerChat]: (playerObj, message) => {\r\n            const commandName = (0, Command_1.getCommandNameFromString)(message, this.prefix);\r\n            const player = this._players.get(playerObj.id);\r\n            const command = this._commands.find(cmd => {\r\n                if (cmd.name === commandName || cmd.aliases?.includes(commandName))\r\n                    return true;\r\n                return false;\r\n            });\r\n            if (message[0] === this.prefix && command && player.canUseCommands) {\r\n                const roles = command.roles;\r\n                if (roles == null || roles.length == 0 || roles.filter(r => (player.roles ?? []).includes(r)).length > 0) {\r\n                    const args = (0, Command_1.getCommandArgumentsFromString)(message, this.prefix);\r\n                    const runCommand = () => {\r\n                        return command.func({\r\n                            caller: player,\r\n                            time: new Date(Date.now()),\r\n                            message: message,\r\n                            args: args\r\n                        }, this);\r\n                    };\r\n                    return runCommand;\r\n                }\r\n            }\r\n        },\r\n        [EventNames.onGameTick]: () => {\r\n            if (!this._running) {\r\n                this.emit(\"gameStartTicking\");\r\n                this._running = true;\r\n            }\r\n            const players = [];\r\n            for (const player of this.getPlayers().teams()) {\r\n                if (player?.distanceTo(this.getBall()) < 2)\r\n                    players.push(player);\r\n            }\r\n            const now = new Date(Date.now());\r\n            if (players.length === 0)\r\n                return;\r\n            if (players.length > 1) {\r\n                this._ballCollisions[1] = { player: players[1], time: now };\r\n            }\r\n            else if (this._ballCollisions[0]?.player && players[0].id !== this._ballCollisions[0].player.id) {\r\n                this._ballCollisions[1] = { player: this._ballCollisions[0].player, time: this._ballCollisions[0].time };\r\n                this.emit('newPlayerTouchBall', players[0], this._ballCollisions[1]);\r\n            }\r\n            else if (this._ballCollisions[0]?.player == null) {\r\n                this.emit('newPlayerTouchBall', players[0]);\r\n            }\r\n            this._ballCollisions[0] = { player: players[0], time: now };\r\n            for (const player of this.getPlayers().teams())\r\n                player.updateLastPosition();\r\n        },\r\n        [EventNames.onPlayerTeamChange]: (changedPlayer, byPlayer) => {\r\n            for (const player of this._players) {\r\n                player.updatePlayerPositionInList();\r\n            }\r\n        }\r\n    };\r\n    load() {\r\n        for (const [key, val] of Object.entries(EventNames)) {\r\n            this._room[key] = (...args) => {\r\n                const specialEvent = this._specialEvents[val];\r\n                let run;\r\n                const players = this._players.clone();\r\n                if (specialEvent) {\r\n                    if (val === EventNames.onPlayerChat) {\r\n                        run = specialEvent(...args);\r\n                    }\r\n                    else {\r\n                        specialEvent(...args);\r\n                    }\r\n                }\r\n                if (val === EventNames.onPlayerJoin && this._playerConfirmLevels.length > 0)\r\n                    return;\r\n                args = args.map((a) => {\r\n                    if (PlayerList_1.default.isPlayerObject(a)) {\r\n                        if (val === EventNames.onPlayerLeave) {\r\n                            return players.get(a.id).disable(a);\r\n                        }\r\n                        else if (val === EventNames.onPlayerKicked) {\r\n                            const p = players.get(a.id) ?? this._deletedPlayers.get(a.id) ?? a;\r\n                            this._deletedPlayers.remove(a.id);\r\n                            return p;\r\n                        }\r\n                        else {\r\n                            a = players.get(a.id);\r\n                        }\r\n                    }\r\n                    return a;\r\n                });\r\n                if (run) {\r\n                    const sendMessage = run();\r\n                    if (sendMessage) {\r\n                        this.emit(val, ...args, true);\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                    if (!this._playerChat)\r\n                        return false;\r\n                }\r\n                else {\r\n                    if (val === EventNames.onPlayerChat) {\r\n                        this.emit(val, ...args, false);\r\n                        if (!this._playerChat)\r\n                            return false;\r\n                    }\r\n                    else {\r\n                        this.emit(val, ...args);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n    getNative() {\r\n        return this._room;\r\n    }\r\n    removeCommand(commandName) {\r\n        this._commands = this._commands.filter(command => Reflect.getMetadata('command:name', command) === commandName);\r\n    }\r\n    module(Module, ...moduleOptions) {\r\n        const module = new Module(this, ...moduleOptions);\r\n        const commands = (Reflect.getMetadata('module:commands', module) || []);\r\n        commands.forEach(command => {\r\n            command.func = command.func.bind(module);\r\n            this._commands.push(command);\r\n        });\r\n        return module;\r\n    }\r\n    start() {\r\n        this._room.startGame();\r\n    }\r\n    stop() {\r\n        this._room.stopGame();\r\n    }\r\n    pause() {\r\n        this._room.pauseGame(true);\r\n    }\r\n    unpause() {\r\n        this._room.pauseGame(false);\r\n    }\r\n    isGamePaused() {\r\n        return this._paused;\r\n    }\r\n    isGameTicking() {\r\n        return this._running;\r\n    }\r\n    getScores() {\r\n        return this._room.getScores();\r\n    }\r\n    isGameInProgress() {\r\n        return this.getScores() != null;\r\n    }\r\n    setScoreLimit(limit) {\r\n        this._room.setScoreLimit(limit);\r\n    }\r\n    setTimeLimit(limit) {\r\n        this._room.setTimeLimit(limit);\r\n    }\r\n    setKickRateLimit(min, rate, burst) {\r\n        this._room.setKickRateLimit(min, rate, burst);\r\n    }\r\n    getDisc(index) {\r\n        return this._discs.find(d => d.index === index);\r\n    }\r\n    getDiscs() {\r\n        return this._discs;\r\n    }\r\n    getBall() {\r\n        return this._discs[0];\r\n    }\r\n    getDiscCount() {\r\n        return this._room.getDiscCount();\r\n    }\r\n    getPlayers() {\r\n        return this._players;\r\n    }\r\n    getPlayer(id) {\r\n        return this._players.get(id);\r\n    }\r\n    setAvatar(id, avatar) {\r\n        this._room.setPlayerAvatar(id, avatar);\r\n    }\r\n    setAdmin(id, admin) {\r\n        this._room.setPlayerAdmin(id, admin);\r\n    }\r\n    setTeam(id, team) {\r\n        this._room.setPlayerTeam(id, team);\r\n    }\r\n    kick(id, reason) {\r\n        this._room.kickPlayer(id, reason, false);\r\n    }\r\n    ban(id, reason) {\r\n        this._room.kickPlayer(id, reason, true);\r\n    }\r\n    setPlayerChat(enable) {\r\n        this._playerChat = enable;\r\n    }\r\n    addConfirmLevel(name) {\r\n        this._playerConfirmLevels.push(name);\r\n    }\r\n    removeConfirmLevel(name) {\r\n        this._playerConfirmLevels = this._playerConfirmLevels.filter(c => c !== name);\r\n    }\r\n    getConfirmLevels() {\r\n        return this._playerConfirmLevels;\r\n    }\r\n    clearConfirmLevels() {\r\n        this._playerConfirmLevels = [];\r\n    }\r\n    clearBan(id) {\r\n        this._room.clearBan(id);\r\n    }\r\n    clearBans() {\r\n        this._room.clearBans();\r\n    }\r\n    setStadium(stadium) {\r\n        if (typeof stadium === \"object\")\r\n            this._room.setCustomStadium(JSON.stringify(stadium));\r\n        if (typeof stadium === \"string\")\r\n            this._room.setDefaultStadium(stadium);\r\n    }\r\n    lockTeams() {\r\n        this._room.setTeamsLock(true);\r\n    }\r\n    unlockTeams() {\r\n        this._room.setTeamsLock(false);\r\n    }\r\n    getPassword() {\r\n        return this._password;\r\n    }\r\n    setPassword(password) {\r\n        this._password = password;\r\n        this._room.setPassword(password);\r\n    }\r\n    clearPassword() {\r\n        this._password = undefined;\r\n        this._room.setPassword(null);\r\n    }\r\n    enableCaptcha() {\r\n        this._room.setRequireRecaptcha(true);\r\n    }\r\n    disableCaptcha() {\r\n        this._room.setRequireRecaptcha(false);\r\n    }\r\n    setTeamColors(team, teamColors) {\r\n        if (team === \"all\") {\r\n            this._room.setTeamColors(Global_1.Team.Red, teamColors.angle, teamColors.textColor, teamColors.colors);\r\n            this._room.setTeamColors(Global_1.Team.Blue, teamColors.angle, teamColors.textColor, teamColors.colors);\r\n        }\r\n        else {\r\n            this._room.setTeamColors(team, teamColors.angle, teamColors.textColor, teamColors.colors);\r\n        }\r\n    }\r\n    send(options) {\r\n        if (options.targetID && this.getPlayer(options.targetID)?.canReadChat) {\r\n            this._room.sendAnnouncement(options.message, options.targetID, options.color, options.style, options.sound);\r\n            return;\r\n        }\r\n        for (const player of this.getPlayers()) {\r\n            if (!player.isConfirmed())\r\n                continue;\r\n            this._room.sendAnnouncement(options.message, player.id, options.color, options.style, options.sound);\r\n        }\r\n    }\r\n    startRecording() {\r\n        this._room.startRecording();\r\n    }\r\n    stopRecording() {\r\n        return this._room.stopRecording();\r\n    }\r\n    reorderPlayers(ids, moveToTop) {\r\n        this._room.reorderPlayers(ids, moveToTop);\r\n    }\r\n}\r\nexports[\"default\"] = Room;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Room.ts?");

/***/ }),

/***/ "./src/core/Settings.ts":
/*!******************************!*\
  !*** ./src/core/Settings.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass Settings {\r\n    [Symbol.iterator]() {\r\n        let i = 0;\r\n        const arr = Object.values(this);\r\n        return {\r\n            next: () => ({\r\n                value: arr[i++],\r\n                done: i > arr.length\r\n            })\r\n        };\r\n    }\r\n}\r\nexports[\"default\"] = Settings;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/core/Settings.ts?");

/***/ }),

/***/ "./src/modules/CustomAvatarManager.ts":
/*!********************************************!*\
  !*** ./src/modules/CustomAvatarManager.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CustomAvatarManager = void 0;\r\nclass CustomAvatarManager {\r\n    room;\r\n    list = new Map();\r\n    constructor(room) {\r\n        this.room = room;\r\n    }\r\n    setPlayerDefaultAvatar(player) {\r\n        player.setAvatar(player.name.replace(/[^\\w\\s]/gi, '').slice(0, 2));\r\n    }\r\n    clearAll() {\r\n        this.list.forEach((_, id) => {\r\n            this.clearPlayerAvatar(id);\r\n        });\r\n    }\r\n    getPlayer(player) {\r\n        return this.list.get(player.id);\r\n    }\r\n    clearPlayerAvatar(playerId) {\r\n        this.list.delete(playerId);\r\n        const player = this.room.getPlayer(playerId);\r\n        if (player)\r\n            this.setPlayerDefaultAvatar(player);\r\n    }\r\n    setPlayerAvatar(player, avatar, time) {\r\n        this.list.set(player.id, { time: time ? Date.now() + time : 0, avatar });\r\n        player.setAvatar(avatar);\r\n    }\r\n    run() {\r\n        this.list.forEach(({ time }, id) => {\r\n            if (!time)\r\n                return;\r\n            if (time < Date.now()) {\r\n                this.clearPlayerAvatar(id);\r\n                this.list.delete(id);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.CustomAvatarManager = CustomAvatarManager;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/CustomAvatarManager.ts?");

/***/ }),

/***/ "./src/modules/CustomTeams.ts":
/*!************************************!*\
  !*** ./src/modules/CustomTeams.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../core/Command */ \"./src/core/Command.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../core/Module */ \"./src/core/Module.ts\"));\r\nconst teams_json_1 = __importDefault(__webpack_require__(/*! ../teams.json */ \"./src/teams.json\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../Global */ \"./src/Global.ts\"));\r\nconst Translate_1 = __importDefault(__webpack_require__(/*! ../utils/Translate */ \"./src/utils/Translate.ts\"));\r\nclass CustomTeams extends Module_1.default {\r\n    teamList;\r\n    teams;\r\n    maintainTeam;\r\n    constructor(room) {\r\n        super();\r\n        this.teamList = Object.entries(teams_json_1.default).map(([name, uniform]) => {\r\n            const uniformColor = uniform.color.replace(\"/colors red \", \"\").split(\" \");\r\n            const toColor = (str) => Number(\"0x\" + str);\r\n            return {\r\n                name,\r\n                category: uniform.category,\r\n                angle: Number(uniformColor[0]),\r\n                textColor: toColor(uniformColor[1]),\r\n                colors: [uniformColor[2], uniformColor[3], uniformColor[4]].map(c => toColor(c))\r\n            };\r\n        });\r\n        this.setNextGameTeams();\r\n        room.on(\"gameStart\", () => {\r\n            this.setNextGameTeams();\r\n            this.setUniforms(room);\r\n            room.send({ message: `​🏈​ ${this.teams.red.name} x ${this.teams.blue.name}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        });\r\n    }\r\n    setNextGameTeams() {\r\n        const maintainTeam = this.maintainTeam ? (this.maintainTeam === Global_1.Team.Red ? this.teams.red : this.teams.blue) : null;\r\n        const randomTeamSelection = this.getRandomTeams(2, maintainTeam?.category);\r\n        this.teams = {\r\n            red: this.maintainTeam === Global_1.Team.Red ? maintainTeam : randomTeamSelection[0],\r\n            blue: this.maintainTeam === Global_1.Team.Blue ? maintainTeam : randomTeamSelection[1]\r\n        };\r\n        this.maintainTeam = null;\r\n    }\r\n    getRandomTeams(count, categoryFilter) {\r\n        return this.teamList.filter(t => t.category !== categoryFilter)\r\n            .sort(() => Math.random() - Math.random()).reduce((acc, current) => {\r\n            if (!acc.some(obj => obj.label === current.category))\r\n                acc.push(current);\r\n            return acc;\r\n        }, [])\r\n            .slice(0, count);\r\n    }\r\n    setUniforms(room) {\r\n        room.setTeamColors(Global_1.Team.Red, this.teams.red);\r\n        room.setTeamColors(Global_1.Team.Blue, this.teams.blue);\r\n    }\r\n    swapTeams(room) {\r\n        const red = JSON.parse(JSON.stringify(this.teams.red));\r\n        const blue = JSON.parse(JSON.stringify(this.teams.blue));\r\n        this.teams.red = blue;\r\n        this.teams.blue = red;\r\n        if (this.maintainTeam)\r\n            this.maintainTeam = this.maintainTeam === Global_1.Team.Red ? Global_1.Team.Blue : Global_1.Team.Red;\r\n        this.setUniforms(room);\r\n    }\r\n    getTeams() {\r\n        return this.teams;\r\n    }\r\n    setTeam(teamID, customTeam) {\r\n        if (teamID === Global_1.Team.Red) {\r\n            this.teams.red = customTeam;\r\n        }\r\n        else if (teamID === Global_1.Team.Blue) {\r\n            this.teams.blue = customTeam;\r\n        }\r\n    }\r\n    setTeamToMaintainUniform(team) {\r\n        this.maintainTeam = team;\r\n    }\r\n    setteamCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"NOT_ADMIN\"), sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"GAME_NOT_IN_PROGRESS\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const teamStr = $.args[0];\r\n        const customTeamStr = $.args[1];\r\n        let team;\r\n        let customTeam = this.teamList.find(team => team.name.toLowerCase().replace(/[^\\S ]+/, \"\").toLowerCase().replace(/[^\\S ]+/, \"\") === customTeamStr?.toLowerCase()?.replace(/[^\\S ]+/, \"\"));\r\n        if (customTeamStr === \"rand\" || customTeamStr === \"random\") {\r\n            customTeam = this.getRandomTeams(1)[0];\r\n        }\r\n        if (teamStr === \"red\") {\r\n            team = Global_1.Team.Red;\r\n        }\r\n        else if (teamStr === \"blue\") {\r\n            team = Global_1.Team.Blue;\r\n        }\r\n        else {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"INVALID_TEAM\", room.prefix), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!customTeam) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"TEAM_NOT_FOUND\", room.prefix), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: (0, Translate_1.default)(\"CHANGED_TEAM_COLORS\", $.caller.name, team === Global_1.Team.Red ? \"Red\" : \"Blue\", customTeam.name), color: Global.Color.Pink, style: \"bold\" });\r\n        this.setTeam(team, customTeam);\r\n        this.setUniforms(room);\r\n        return false;\r\n    }\r\n    teamlistCommand($, room) {\r\n        $.caller.reply({ message: (0, Translate_1.default)(\"TEAM_LIST\", this.teamList.length, this.teamList.map(p => p.name).join(\", \")), color: Global.Color.Tomato, style: \"bold\" });\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"setteam\"\r\n    })\r\n], CustomTeams.prototype, \"setteamCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"teamlist\"\r\n    })\r\n], CustomTeams.prototype, \"teamlistCommand\", null);\r\nexports[\"default\"] = CustomTeams;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/CustomTeams.ts?");

/***/ }),

/***/ "./src/modules/Game.ts":
/*!*****************************!*\
  !*** ./src/modules/Game.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../Global */ \"./src/Global.ts\"));\r\nconst BFL_json_1 = __importDefault(__webpack_require__(/*! ../maps/BFL.json */ \"./src/maps/BFL.json\"));\r\nconst Down_1 = __webpack_require__(/*! ./modes/Down */ \"./src/modules/modes/Down.ts\");\r\nconst FieldGoal_1 = __webpack_require__(/*! ./modes/FieldGoal */ \"./src/modules/modes/FieldGoal.ts\");\r\nconst Punt_1 = __webpack_require__(/*! ./modes/Punt */ \"./src/modules/modes/Punt.ts\");\r\nconst KickOff_1 = __webpack_require__(/*! ./modes/KickOff */ \"./src/modules/modes/KickOff.ts\");\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst GameCommands_1 = __importDefault(__webpack_require__(/*! ./GameCommands */ \"./src/modules/GameCommands.ts\"));\r\nconst CustomTeams_1 = __importDefault(__webpack_require__(/*! ./CustomTeams */ \"./src/modules/CustomTeams.ts\"));\r\nconst MatchStats_1 = __importDefault(__webpack_require__(/*! ./MatchStats */ \"./src/modules/MatchStats.ts\"));\r\nconst ExtraPoint_1 = __webpack_require__(/*! ./modes/ExtraPoint */ \"./src/modules/modes/ExtraPoint.ts\");\r\nconst Translate_1 = __importDefault(__webpack_require__(/*! ../utils/Translate */ \"./src/utils/Translate.ts\"));\r\nconst Safety_1 = __webpack_require__(/*! ./modes/Safety */ \"./src/modules/modes/Safety.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst CustomAvatarManager_1 = __webpack_require__(/*! ./CustomAvatarManager */ \"./src/modules/CustomAvatarManager.ts\");\r\nconst BALL_AVATAR = \"🏈\";\r\nclass Game extends Module_1.default {\r\n    down;\r\n    fieldGoal;\r\n    punt;\r\n    kickOff;\r\n    extraPoint;\r\n    safety;\r\n    gameCommands;\r\n    customTeams;\r\n    customAvatarManager;\r\n    mode;\r\n    teamWithBall;\r\n    playerWithBall;\r\n    playerWithBallState;\r\n    playerWithBallTackleCount = 0;\r\n    playerWithBallInitialPosition;\r\n    playerWithBallFinalPosition;\r\n    quarterback;\r\n    qbKickedBall = false;\r\n    hikeTime;\r\n    running = false;\r\n    inRedZone = false;\r\n    interceptAttemptPlayer;\r\n    interceptPlayer;\r\n    interceptPlayerLeftEndZone = false;\r\n    blockedPass = false;\r\n    conversion = false;\r\n    intercept = false;\r\n    scoreRed = 0;\r\n    scoreBlue = 0;\r\n    ballPosition;\r\n    downCount = 0;\r\n    distance = 20;\r\n    yardsBallBehind = 2;\r\n    hikeTimeout;\r\n    interceptionTimeout;\r\n    kickOffReset;\r\n    extraPointTimeout;\r\n    touchdownExtraPointTimeout;\r\n    failedFielGoalTimeout;\r\n    fieldGoalTimeout;\r\n    redZonePenalties = 0;\r\n    invasionPlayers = [];\r\n    invasionTimeout;\r\n    teamPlayersHistory = [];\r\n    ballMovedTimeFG;\r\n    overtime = false;\r\n    gameStopped = false;\r\n    lastPlayMessageSent = false;\r\n    timeLimit = 10;\r\n    hikeTimeSeconds = 12;\r\n    carryBallSackTime = 4;\r\n    finalSeconds = 10;\r\n    stoppageTimeMs = 0;\r\n    isStoppageTime = false;\r\n    stadium = this.getDefaultMap();\r\n    gameTime;\r\n    gameTimeSecondsToSendRec = 1 * 60;\r\n    endGameTime;\r\n    firstKickoff = true;\r\n    matchStats;\r\n    tickCount = 0;\r\n    firstTackleTick;\r\n    timeToSendTackleMessageSeconds = 0.5;\r\n    playerWithBallSetTick;\r\n    constructor(room) {\r\n        super();\r\n        this.matchStats = new MatchStats_1.default(room, Number({\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.RECS_PORT ?? Global.DEFAULT_PORTS.RECS));\r\n        this.run(room);\r\n    }\r\n    run(room) {\r\n        room.lockTeams();\r\n        room.setScoreLimit(0);\r\n        room.setTimeLimit(this.timeLimit);\r\n        room.setStadium(this.stadium);\r\n        this.down = room.module(Down_1.Down, this);\r\n        this.punt = room.module(Punt_1.Punt, this);\r\n        this.fieldGoal = room.module(FieldGoal_1.FieldGoal, this);\r\n        this.kickOff = room.module(KickOff_1.KickOff, this);\r\n        this.extraPoint = room.module(ExtraPoint_1.ExtraPoint, this);\r\n        this.safety = room.module(Safety_1.Safety, this);\r\n        this.gameCommands = room.module(GameCommands_1.default, this);\r\n        this.customTeams = room.module(CustomTeams_1.default, this);\r\n        this.customAvatarManager = new CustomAvatarManager_1.CustomAvatarManager(room);\r\n        room.on(\"playerBallKick\", (player) => {\r\n            this.setBallMoveable(room);\r\n        });\r\n        room.on(\"playerLeave\", (player) => {\r\n            if (!room.isGameInProgress())\r\n                return;\r\n            if (player.id === this.playerWithBall?.id) {\r\n                this.playerWithBallLeft(room, player);\r\n            }\r\n            else if (player.id === this.quarterback?.id) {\r\n                this.qbLeft(room);\r\n            }\r\n            const playerHist = this.teamPlayersHistory.find(p => p.id === player.id && p.timeLeft == null);\r\n            if (playerHist) {\r\n                playerHist.timeLeft = room.getScores().time;\r\n            }\r\n            if (player.getTeam() !== Global_1.Team.Spectators)\r\n                room.pause();\r\n        });\r\n        room.on(\"playerTeamChanged\", (changedPlayer, byPlayer) => {\r\n            if (!room.isGameInProgress())\r\n                return;\r\n            if (changedPlayer.id === this.playerWithBall?.id) {\r\n                this.playerWithBallLeft(room, changedPlayer);\r\n            }\r\n            else if (changedPlayer.id === this.quarterback?.id) {\r\n                this.qbLeft(room);\r\n            }\r\n            this.customAvatarManager.clearPlayerAvatar(changedPlayer.id);\r\n            const playerHist = this.teamPlayersHistory.find(p => p.id === changedPlayer.id && p.timeLeft == null);\r\n            if (playerHist) {\r\n                if (playerHist.team !== changedPlayer.getTeam()) {\r\n                    playerHist.timeLeft = room.getScores().time;\r\n                    if (changedPlayer.getTeam() !== Global_1.Team.Spectators) {\r\n                        this.addPlayerToTeamHistory(changedPlayer, room);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.addPlayerToTeamHistory(changedPlayer, room);\r\n            }\r\n        });\r\n        room.on(\"gameStop\", (byPlayer) => {\r\n            this.mode = null;\r\n            this.customAvatarManager.clearAll();\r\n            const rec = room.stopRecording();\r\n            if (this.gameTime >= this.gameTimeSecondsToSendRec) {\r\n                this.matchStats.sendToDiscord(rec, this, this.teamPlayersHistory.map(p => {\r\n                    if (p.timeLeft == null)\r\n                        p.timeLeft = this.gameTime;\r\n                    return {\r\n                        ...p,\r\n                        points: this.matchStats.calculatePointsPlayer(p.id) ?? 0\r\n                    };\r\n                }));\r\n            }\r\n            if (this.scoreBlue !== this.scoreRed) {\r\n                const teamWon = this.scoreBlue > this.scoreRed ? Global_1.Team.Blue : Global_1.Team.Red;\r\n                if (byPlayer) {\r\n                    room.send({ message: (0, Translate_1.default)(\"GAME_STOPPED_BY\", byPlayer.name, this.scoreRed, this.scoreBlue), color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                }\r\n                else {\r\n                    room.send({ message: (0, Translate_1.default)(\"GAME_WIN\", this.getCustomTeamName(teamWon), this.scoreRed, this.scoreBlue), color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                }\r\n                this.customTeams.setTeamToMaintainUniform(teamWon);\r\n            }\r\n            else {\r\n                this.customTeams.setTeamToMaintainUniform(null);\r\n            }\r\n            this.teamPlayersHistory = [];\r\n            this.gameTime = null;\r\n            this.teamWithBall = null;\r\n            this.downCount = 0;\r\n            this.distance = 20;\r\n            this.scoreBlue = 0;\r\n            this.scoreRed = 0;\r\n            this.stoppageTimeMs = 0;\r\n            this.tickCount = 0;\r\n            this.overtime = false;\r\n            this.gameStopped = false;\r\n            this.lastPlayMessageSent = false;\r\n            this.isStoppageTime = false;\r\n            this.firstKickoff = true;\r\n            const mvp = this.matchStats.getMVP();\r\n            this.matchStats.clear();\r\n            if (mvp)\r\n                room.send({ message: `🏆 MVP: ${mvp.name} (${mvp.points} pontos)`, color: Global.Color.Gold, style: \"bold\" });\r\n            this.reset(room);\r\n            this.resetPlay(room);\r\n        });\r\n        room.on(\"gameStart\", (byPlayer) => {\r\n            this.endGameTime = room.getScores().timeLimit;\r\n            this.kickOff.set({ room, forTeam: Global_1.Team.Red });\r\n            room.startRecording();\r\n            this.matchStats.clear();\r\n            this.overtime = false;\r\n            this.teamPlayersHistory = [...room.getPlayers().teams().map(p => {\r\n                    return { id: p.id, name: p.name, timeJoin: 0, auth: p.auth, registered: p.roles.includes(Global.loggedRole), team: p.getTeam() };\r\n                })];\r\n            room.getPlayers().forEach(p => this.customAvatarManager.clearPlayerAvatar(p.id));\r\n        });\r\n        room.on(\"gameTick\", () => {\r\n            if (this.gameStopped)\r\n                return;\r\n            this.tickCount++;\r\n            this.customAvatarManager.run();\r\n            this.gameTime = room.getScores().time;\r\n            if (this.gameTime > this.endGameTime && !this.kickOff.isBallToBeKicked && this.stoppageTimeMs !== 0 && !this.isStoppageTime) {\r\n                Utils_1.default.sendSoundTeamMessage(room, { message: `​⏰​ Acréscimos de jogo: +${Utils_1.default.getFormattedSeconds(parseInt((this.stoppageTimeMs / 1000).toFixed(2)))} • Novo tempo limite: ${Utils_1.default.fancyTimeFormat(this.stoppageTimeMs / 1000 + this.endGameTime)}`, color: Global.Color.Yellow, style: \"bold\" });\r\n                this.isStoppageTime = true;\r\n            }\r\n            const stoppageTimeEnded = this.isStoppageTime && this.stoppageTimeMs / 1000 + this.endGameTime < this.gameTime;\r\n            if (this.gameTime > this.endGameTime &&\r\n                this.endGameTime !== 0 &&\r\n                (stoppageTimeEnded || this.stoppageTimeMs === 0)) {\r\n                if (this.mode !== this.down.mode && this.mode !== this.fieldGoal.mode &&\r\n                    this.mode !== this.extraPoint.mode && !this.conversion &&\r\n                    this.scoreRed !== this.scoreBlue && !this.playerWithBall &&\r\n                    this.mode !== this.kickOff.mode) {\r\n                    this.gameStopped = true;\r\n                    const teamWon = this.scoreRed > this.scoreBlue ? Global_1.Team.Red : Global_1.Team.Blue;\r\n                    const teamLost = this.invertTeam(teamWon);\r\n                    const losingPlayers = room.getPlayers().filter(p => p.getTeam() === teamLost);\r\n                    room.stop();\r\n                    setTimeout(() => {\r\n                        losingPlayers.forEach(p => {\r\n                            p.setTeam(Global_1.Team.Spectators);\r\n                        });\r\n                    }, 500);\r\n                }\r\n                else if (!this.lastPlayMessageSent) {\r\n                    if (this.scoreRed === this.scoreBlue) {\r\n                        Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"OVERTIME\"), color: Global.Color.Yellow, style: \"bold\" });\r\n                        this.overtime = true;\r\n                    }\r\n                    else {\r\n                        Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"LAST_PLAY\"), color: Global.Color.Yellow, style: \"bold\" });\r\n                    }\r\n                    this.lastPlayMessageSent = true;\r\n                }\r\n            }\r\n        });\r\n        room.on(\"stadiumChange\", (newStadiumName, byPlayer) => {\r\n            if (!byPlayer)\r\n                return;\r\n            byPlayer.reply({ message: (0, Translate_1.default)(\"CANNOT_CHANGE_MAP\"), sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            room.setStadium(this.stadium);\r\n        });\r\n        room.on(\"gamePause\", (byPlayer) => {\r\n            this.kickOffReset?.pause();\r\n            this.touchdownExtraPointTimeout?.pause();\r\n            this.extraPointTimeout?.pause();\r\n            this.failedFielGoalTimeout?.pause();\r\n            this.fieldGoalTimeout?.pause();\r\n        });\r\n        room.on(\"gameUnpause\", (byPlayer) => {\r\n            this.kickOffReset?.resume();\r\n            this.touchdownExtraPointTimeout?.resume();\r\n            this.extraPointTimeout?.resume();\r\n            this.failedFielGoalTimeout?.resume();\r\n            this.fieldGoalTimeout?.resume();\r\n        });\r\n    }\r\n    isPlayerBehindLineOfScrimmage(player) {\r\n        const ballLinePos = StadiumUtils_1.default.getCoordinateFromYards(this.ballPosition).x;\r\n        if (((this.teamWithBall === Global_1.Team.Red && player.getX() < ballLinePos) ||\r\n            (this.teamWithBall === Global_1.Team.Blue && player.getX() > ballLinePos))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getTeamWithBall(room) {\r\n        if (this.teamWithBall === Global_1.Team.Red)\r\n            return room.getPlayers().red();\r\n        if (this.teamWithBall === Global_1.Team.Blue)\r\n            return room.getPlayers().blue();\r\n        return null;\r\n    }\r\n    getTeamWithoutBall(room) {\r\n        if (this.teamWithBall === Global_1.Team.Red)\r\n            return room.getPlayers().blue();\r\n        if (this.teamWithBall === Global_1.Team.Blue)\r\n            return room.getPlayers().red();\r\n        return null;\r\n    }\r\n    getTeamName(team) {\r\n        return team === Global_1.Team.Red ? \"Red\" : \"Blue\";\r\n    }\r\n    getCustomTeamName(team) {\r\n        return team === Global_1.Team.Red ? `${this.customTeams.getTeams().red.name} (Red)` : `${this.customTeams.getTeams().blue.name} (Blue)`;\r\n    }\r\n    getStateOfMatch() {\r\n        return `${this.downCount} & ${this.down.goalMode ? \"Goal\" : this.distance} @ ${this.getTeamName(this.ballPosition.team)} ${this.ballPosition.yards}`;\r\n    }\r\n    getScoreMessage() {\r\n        return `Red ${this.scoreRed} • ${this.scoreBlue} Blue`;\r\n    }\r\n    getDefaultMap() {\r\n        return JSON.parse(JSON.stringify(BFL_json_1.default));\r\n    }\r\n    getBallStartPos() {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.ballPosition.team, this.ballPosition.yards);\r\n        ballPos.x = ballPos.x + ((MapMeasures_1.default.Yard * this.yardsBallBehind) * (this.teamWithBall === Global_1.Team.Red ? -1 : 1));\r\n        return ballPos;\r\n    }\r\n    addPlayerToTeamHistory(player, room) {\r\n        this.teamPlayersHistory.push({\r\n            id: player.id,\r\n            name: player.name,\r\n            timeJoin: room.getScores().time,\r\n            team: player.getTeam(),\r\n            auth: player.auth,\r\n            registered: player.roles.includes(Global.loggedRole)\r\n        });\r\n    }\r\n    clearHikeTime() {\r\n        this.hikeTimeout?.stop();\r\n        this.hikeTimeout = null;\r\n    }\r\n    clearInvasion() {\r\n        this.invasionTimeout?.stop();\r\n        this.invasionTimeout = null;\r\n    }\r\n    adjustGameTimeAfterDefensivePenalty(room) {\r\n        if (this.endGameTime - this.gameTime < this.finalSeconds &&\r\n            this.endGameTime !== 0 &&\r\n            !this.overtime) {\r\n            const newEndGame = this.endGameTime + (10 - (this.endGameTime - this.gameTime));\r\n            if (this.endGameTime !== parseInt(newEndGame + \"\")) {\r\n                this.endGameTime = newEndGame;\r\n                Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"END_GAME_TIME_ADJUSTED_AFTER_PENALTY\", Utils_1.default.fancyTimeFormat(this.endGameTime)), color: Global.Color.Yellow, style: \"bold\" });\r\n                this.lastPlayMessageSent = false;\r\n            }\r\n        }\r\n    }\r\n    playerReturnedBall(room, player) {\r\n        if (player.getTeam() === Global_1.Team.Spectators)\r\n            return;\r\n        if (this.playerWithBall == null) {\r\n            if (player.getTeam() !== this.teamWithBall) {\r\n                const state = this.mode === this.punt.mode ? \"puntReturner\" : \"kickoffReturner\";\r\n                this.setPlayerWithBall(room, player, state, true);\r\n                if (this.mode === this.punt.mode)\r\n                    room.send({ message: (0, Translate_1.default)(\"RETURNED_PUNT\", player.name), color: Global.Color.MediumSeaGreen, style: \"bold\" });\r\n                else if (this.mode === this.kickOff.mode)\r\n                    room.send({ message: (0, Translate_1.default)(\"RETURNED_KICKOFF\", player.name), color: Global.Color.MediumSeaGreen, style: \"bold\" });\r\n            }\r\n            else if (this.qbKickedBall) {\r\n                room.send({ message: (0, Translate_1.default)(\"ILLEGAL_TOUCH_SAME_TEAM\", player.name), color: Global.Color.Orange, style: \"bold\" });\r\n                this.down.set({\r\n                    room,\r\n                    pos: StadiumUtils_1.default.getYardsFromXCoord(player.getX()),\r\n                    forTeam: this.invertTeam(this.teamWithBall),\r\n                    countDistanceFromNewPos: false\r\n                });\r\n            }\r\n        }\r\n    }\r\n    playerWithBallLeft(room, player) {\r\n        const team = this.invertTeam(this.teamWithBall);\r\n        const xCoord = player.getLastPosition().x;\r\n        this.clearPlayerWithBall();\r\n        if (this.mode === this.punt.mode || this.mode === this.kickOff.mode) {\r\n            room.send({ message: (0, Translate_1.default)(\"RECEIVER_LEFT_IN_KICK\", this.mode === this.punt.mode ? \"Punt\" : \"Kick Off\"), color: Global.Color.Orange, style: \"bold\" });\r\n        }\r\n        else {\r\n            room.send({ message: (0, Translate_1.default)(\"RECEIVER_LEFT_IN_HIKE\"), color: Global.Color.Orange, style: \"bold\" });\r\n        }\r\n        this.down.set({\r\n            room,\r\n            pos: StadiumUtils_1.default.getYardsFromXCoord(xCoord),\r\n            forTeam: team\r\n        });\r\n    }\r\n    qbLeft(room) {\r\n        if (this.mode === this.down.mode) {\r\n            room.send({ message: (0, Translate_1.default)(\"QUARTERBACK_LEFT_IN_HIKE\"), color: Global.Color.Orange, style: \"bold\" });\r\n            this.down.set({ room, countDown: false });\r\n        }\r\n    }\r\n    setPlayerWithBall(room, player, state, running) {\r\n        this.playerWithBallInitialPosition = player.getPosition();\r\n        if (this.playerWithBall)\r\n            this.customAvatarManager.clearPlayerAvatar(this.playerWithBall.id);\r\n        this.customAvatarManager.setPlayerAvatar(player, BALL_AVATAR);\r\n        this.unlockBall(room);\r\n        this.setBallMoveable(room);\r\n        this.playerWithBall = player;\r\n        this.playerWithBallState = state;\r\n        this.playerWithBallSetTick = this.tickCount;\r\n        if (running)\r\n            this.running = running;\r\n    }\r\n    clearPlayerWithBall() {\r\n        if (this.playerWithBall && this.customAvatarManager.getPlayer(this.playerWithBall)?.avatar === BALL_AVATAR) {\r\n            this.customAvatarManager.clearPlayerAvatar(this.playerWithBall.id);\r\n        }\r\n        this.playerWithBall = null;\r\n        this.playerWithBallState = null;\r\n        this.playerWithBallInitialPosition = null;\r\n    }\r\n    setPlayerWithBallStats() {\r\n        let diff;\r\n        switch (this.playerWithBallState) {\r\n            case \"receiver\":\r\n                diff = StadiumUtils_1.default.getYardDifferenceBetweenPositions(StadiumUtils_1.default.getCoordinateFromYards(this.ballPosition), this.playerWithBallFinalPosition, this.playerWithBall.getTeam());\r\n                this.matchStats.add(this.playerWithBall, { jardasRecebidas: diff });\r\n                if (this.quarterback)\r\n                    this.matchStats.add(this.quarterback, { jardasLancadas: diff });\r\n                break;\r\n            case \"qbRunner\":\r\n            case \"qbRunnerSacking\":\r\n            case \"runner\":\r\n                diff = StadiumUtils_1.default.getYardDifferenceBetweenPositions(StadiumUtils_1.default.getCoordinateFromYards(this.ballPosition), this.playerWithBallFinalPosition, this.playerWithBall.getTeam());\r\n                this.matchStats.add(this.playerWithBall, { jardasCorridas: diff });\r\n                break;\r\n            case \"sack\":\r\n                diff = StadiumUtils_1.default.getYardDifferenceBetweenPositions(StadiumUtils_1.default.getCoordinateFromYards(this.ballPosition), this.playerWithBallFinalPosition, this.playerWithBall.getTeam());\r\n                this.matchStats.add(this.playerWithBall, { jardasPerdidasSack: diff });\r\n                break;\r\n            case \"kickoffReturner\":\r\n            case \"puntReturner\":\r\n                diff = StadiumUtils_1.default.getYardDifferenceBetweenPositions(this.playerWithBallInitialPosition, this.playerWithBallFinalPosition, this.playerWithBall.getTeam());\r\n                this.matchStats.add(this.playerWithBall, { jardasRetornadas: diff, retornos: 1 });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    blockPass(room, player, message = true) {\r\n        if (message)\r\n            room.send({ message: (0, Translate_1.default)(\"INCOMPLETE_PASS\", player.name) + (this.conversion ? \" \" + (0, Translate_1.default)(\"INCOMPLETE_PASS_CONVERSION_FAILED\") : \"\"), color: Global.Color.Yellow, style: \"bold\" });\r\n        this.unlockBall(room);\r\n        this.customAvatarManager.setPlayerAvatar(player, \"🚧\", 3000);\r\n        this.matchStats.add(player, { passesBloqueados: 1 });\r\n        this.mode = null;\r\n        if (this.conversion) {\r\n            this.mode = null;\r\n            this.kickOffReset = new Timer_1.default(() => {\r\n                this.kickOff.set({ room });\r\n            }, 3000);\r\n        }\r\n        else {\r\n            setTimeout(() => room.isGameInProgress() && this.down.set({ room }), 1500);\r\n        }\r\n    }\r\n    resetToKickoff(room, forTeam = !(this.intercept && this.conversion) ? this.teamWithBall : this.invertTeam(this.teamWithBall)) {\r\n        if (this.conversion) {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"CONVERSION_FAILED\", this.getTeamName(forTeam).toUpperCase()), color: Global.Color.Yellow, style: \"bold\" });\r\n        }\r\n        this.mode = null;\r\n        this.reset(room);\r\n        this.kickOffReset = new Timer_1.default(() => this.kickOff.set({ room, forTeam }), 3000);\r\n    }\r\n    getHikeTimeRemainingFormatted(time) {\r\n        return Utils_1.default.getFormattedSeconds(parseFloat((time / 1000).toFixed(1))).replace(\".\", \",\");\r\n    }\r\n    getHikeTimeStatus() {\r\n        let time = this.hikeTime + this.hikeTimeSeconds * 1000;\r\n        if (this.down.qbCarriedBallTime)\r\n            time = Math.min(time, this.down.qbCarriedBallTime + this.carryBallSackTime * 1000);\r\n        return { isOver: Date.now() > time, time: Date.now() - this.hikeTime, timeOver: time };\r\n    }\r\n    invertTeam(team) {\r\n        return team === Global_1.Team.Red ? Global_1.Team.Blue : Global_1.Team.Red;\r\n    }\r\n    setBallDamping(room, damping) {\r\n        room.getBall().setDamping(damping);\r\n    }\r\n    lockBall(room) {\r\n        room.getBall()?.setInvMass(0.000001);\r\n    }\r\n    unlockBall(room) {\r\n        room.getBall()?.setInvMass(1);\r\n    }\r\n    setBallKickForce(room, value) {\r\n        room.getBall()?.setInvMass(value);\r\n    }\r\n    setBallUnmoveable(room) {\r\n        room.getPlayers().forEach(p => p.setInvMass(1e+26));\r\n    }\r\n    setBallMoveable(room) {\r\n        room.getPlayers().forEach(p => p.setInvMass(0.5));\r\n    }\r\n    getDistanceToEndZone() {\r\n        return StadiumUtils_1.default.getDifferenceBetweenFieldPositions(this.ballPosition, { yards: 0, team: this.invertTeam(this.teamWithBall) });\r\n    }\r\n    getPenaltyValueInRedZone(maxPenalty) {\r\n        const penalty = parseInt(\"\" + (1 / 2 * this.getDistanceToEndZone()));\r\n        if (penalty < 1)\r\n            return 1;\r\n        if (penalty > maxPenalty)\r\n            return maxPenalty;\r\n        return penalty;\r\n    }\r\n    setBallUnkickable(room) {\r\n        room.getBall().setcGroup(room.CollisionFlags.wall);\r\n    }\r\n    setBallKickable(room) {\r\n        room.getBall().setcGroup(room.CollisionFlags.ball | room.CollisionFlags.kick);\r\n    }\r\n    blockTeam(room, team) {\r\n        if (team === Global_1.Team.Red) {\r\n            room.getPlayers().red().forEach(p => p.setcGroup(p.getcGroup() | room.CollisionFlags.c0));\r\n        }\r\n        else {\r\n            room.getPlayers().blue().forEach(p => p.setcGroup(p.getcGroup() | room.CollisionFlags.c1));\r\n        }\r\n    }\r\n    unblockTeams(room) {\r\n        room.getPlayers().blue().forEach(p => p.setcGroup(room.CollisionFlags.blue));\r\n        room.getPlayers().red().forEach(p => p.setcGroup(room.CollisionFlags.red));\r\n    }\r\n    ghostTeam(room, team) {\r\n        room.getPlayers().filter(p => p.getTeam() === team).forEach(p => p.setcGroup(0));\r\n    }\r\n    unghostTeam(room, team) {\r\n        if (team === Global_1.Team.Red) {\r\n            room.getPlayers().red().forEach(p => p.setcGroup(room.CollisionFlags.red));\r\n        }\r\n        else {\r\n            room.getPlayers().blue().forEach(p => p.setcGroup(room.CollisionFlags.blue));\r\n        }\r\n    }\r\n    unghostAll(room) {\r\n        this.unblockTeams(room);\r\n    }\r\n    blockMiddleKickoff(room, team) {\r\n        if (team === Global_1.Team.Red) {\r\n            room.getPlayers().red().forEach(p => {\r\n                p.setcGroup(p.getcGroup() | room.CollisionFlags.c2);\r\n            });\r\n        }\r\n        else {\r\n            room.getPlayers().blue().forEach(p => {\r\n                p.setcGroup(p.getcGroup() | room.CollisionFlags.c3);\r\n            });\r\n        }\r\n    }\r\n    addToStoppage(timeMs) {\r\n        if (!this.isStoppageTime) {\r\n            this.stoppageTimeMs += timeMs;\r\n        }\r\n    }\r\n    getStoppage() {\r\n        return this.stoppageTimeMs;\r\n    }\r\n    resetPlay(room) {\r\n        this.redZonePenalties = 0;\r\n        this.down.goalMode = false;\r\n    }\r\n    reset(room) {\r\n        if (room.isGameInProgress()) {\r\n            this.setBallUnmoveable(room);\r\n            this.unlockBall(room);\r\n            this.setBallKickable(room);\r\n            this.unghostAll(room);\r\n            this.setBallDamping(room, Global.BallDamping.Default);\r\n        }\r\n        this.down.reset();\r\n        this.fieldGoal.reset();\r\n        this.kickOff.reset();\r\n        this.punt.reset();\r\n        this.interceptAttemptPlayer = null;\r\n        this.clearHikeTime();\r\n        this.clearInvasion();\r\n        this.interceptionTimeout?.stop();\r\n        this.kickOffReset?.stop();\r\n        this.touchdownExtraPointTimeout?.stop();\r\n        this.extraPointTimeout?.stop();\r\n        this.failedFielGoalTimeout?.stop();\r\n        this.fieldGoalTimeout?.stop();\r\n        this.interceptionTimeout = null;\r\n        this.extraPointTimeout = null;\r\n        this.kickOffReset = null;\r\n        this.touchdownExtraPointTimeout = null;\r\n        this.failedFielGoalTimeout = null;\r\n        this.fieldGoalTimeout = null;\r\n        this.down.defenderBlockingBall = null;\r\n        this.invasionPlayers = [];\r\n        this.playerWithBallSetTick = null;\r\n        this.firstTackleTick = null;\r\n        this.interceptPlayer = null;\r\n        this.intercept = false;\r\n        this.conversion = false;\r\n        this.running = false;\r\n        this.ballMovedTimeFG = null;\r\n        this.blockedPass = false;\r\n        this.quarterback = null;\r\n        this.qbKickedBall = false;\r\n        this.interceptPlayerLeftEndZone = false;\r\n        this.playerWithBallTackleCount = 0;\r\n        this.clearPlayerWithBall();\r\n    }\r\n}\r\nexports[\"default\"] = Game;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/Game.ts?");

/***/ }),

/***/ "./src/modules/GameCommands.ts":
/*!*************************************!*\
  !*** ./src/modules/GameCommands.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../Global */ \"./src/Global.ts\"));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../core/Command */ \"./src/core/Command.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nclass GameCommands extends Module_1.default {\r\n    game;\r\n    maxTimeoutTime = 30;\r\n    minTimeoutTime = 5;\r\n    defaultTimeoutTime = 20;\r\n    pauseTimer;\r\n    maxGameTimeout;\r\n    timeoutUse = {\r\n        red: 0,\r\n        blue: 0\r\n    };\r\n    timeoutTimeSeconds = {\r\n        red: 0,\r\n        blue: 0\r\n    };\r\n    editableMapProperties = {\r\n        mode: {\r\n            type: \"string\",\r\n            func: (stadium, value) => {\r\n                const newStadium = this.game.getDefaultMap();\r\n                if (value === \"futsal\") {\r\n                    newStadium.bg.type = \"hockey\";\r\n                    newStadium[\"ballPhysics\"] = {\r\n                        \"pos\": [0, 0],\r\n                        \"radius\": 6.25,\r\n                        \"bCoef\": 0.4,\r\n                        \"invMass\": 1.5,\r\n                        \"color\": \"FFCC00\"\r\n                    };\r\n                    newStadium[\"playerPhysics\"] = {\r\n                        \"bCoef\": 0,\r\n                        \"acceleration\": 0.11,\r\n                        \"kickingAcceleration\": 0.083\r\n                    };\r\n                }\r\n                else if (value === \"bounce\") {\r\n                    for (const segment of newStadium[\"segments\"]) {\r\n                        if (segment[\"bCoef\"] == null)\r\n                            segment[\"bCoef\"] = 0.1;\r\n                    }\r\n                    for (const plane of newStadium[\"planes\"]) {\r\n                        if (plane[\"bCoef\"] == null) {\r\n                            plane[\"bCoef\"] = 0;\r\n                        }\r\n                        else {\r\n                            plane[\"bCoef\"] = 0.1;\r\n                        }\r\n                    }\r\n                    newStadium[\"playerPhysics\"] = {\r\n                        \"bCoef\": 1.5,\r\n                        \"invMass\": 0.5,\r\n                        \"damping\": 0.9995,\r\n                        \"acceleration\": 0.025,\r\n                        \"kickingAcceleration\": 0.0175,\r\n                        \"kickingDamping\": 0.9995,\r\n                        \"kickStrength\": 5\r\n                    };\r\n                    newStadium[\"ballPhysics\"] = {\r\n                        \"radius\": 10,\r\n                        \"bCoef\": 0.5,\r\n                        \"invMass\": 1,\r\n                        \"damping\": 0.99,\r\n                        \"color\": \"FFFFFF\"\r\n                    };\r\n                }\r\n                else if (value === \"spaceball\") {\r\n                    newStadium[\"playerPhysics\"] = {\r\n                        \"damping\": 0.9995,\r\n                        \"acceleration\": 0.025,\r\n                        \"kickingAcceleration\": 0.0175,\r\n                        \"kickingDamping\": 0.9995\r\n                    };\r\n                    newStadium[\"ballPhysics\"] = {\r\n                        \"damping\": 1,\r\n                        \"color\": \"CCFF33\"\r\n                    };\r\n                }\r\n                else {\r\n                    throw new Error(\"Valor inválido. Valores disponíveis: futsal, bounce, spaceball\");\r\n                }\r\n                Object.assign(stadium, newStadium);\r\n            }\r\n        },\r\n        bg: {\r\n            type: \"string\",\r\n            func: (stadium, value) => {\r\n                if (value === \"grass\") {\r\n                    stadium.bg.type = \"grass\";\r\n                    delete stadium.bg[\"color\"];\r\n                }\r\n                else if (value === \"hockey\" || value === \"futsal\") {\r\n                    stadium.bg.type = \"hockey\";\r\n                    delete stadium.bg[\"color\"];\r\n                }\r\n                else {\r\n                    stadium.bg.type = \"none\";\r\n                    stadium.bg[\"color\"] = value.replace(\"0x\", \"\").replace(\"#\", \"\");\r\n                }\r\n            }\r\n        },\r\n        ballsize: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.ballPhysics.radius = parseInt(value);\r\n            }\r\n        },\r\n        ballcolor: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.ballPhysics.color = value;\r\n            }\r\n        },\r\n        ballbcoef: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.ballPhysics[\"bCoef\"] = value;\r\n            }\r\n        },\r\n        playerdamping: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.playerPhysics[\"damping\"] = value;\r\n            }\r\n        },\r\n        playeracceleration: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.playerPhysics[\"acceleration\"] = value;\r\n            }\r\n        },\r\n        playerbcoef: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.playerPhysics[\"bCoef\"] = value;\r\n            }\r\n        },\r\n        playerkickstrength: {\r\n            type: \"number\",\r\n            func: (stadium, value) => {\r\n                stadium.playerPhysics[\"kickStrength\"] = value;\r\n            }\r\n        },\r\n        camerafollow: {\r\n            type: \"string\",\r\n            func: (stadium, value) => {\r\n                stadium.cameraFollow = value;\r\n            }\r\n        }\r\n    };\r\n    constructor(room, game) {\r\n        super();\r\n        this.game = game;\r\n        room.on(\"gameUnpause\", (byPlayer) => {\r\n            if (this.pauseTimer) {\r\n                this.pauseTimer.stop();\r\n                this.pauseTimer = null;\r\n                room.send({ message: `⏸️ Tempo de timeout encerrado por ${byPlayer.name}`, color: Global.Color.Pink, style: \"bold\" });\r\n            }\r\n        });\r\n        room.on(\"gameStop\", () => {\r\n            this.timeoutUse.blue = 0;\r\n            this.timeoutUse.red = 0;\r\n            this.timeoutTimeSeconds.red = 0;\r\n            this.timeoutTimeSeconds.blue = 0;\r\n            this.pauseTimer?.stop();\r\n            this.pauseTimer = null;\r\n        });\r\n    }\r\n    ddCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        $.caller.reply({ message: `📍 ${this.game.getStateOfMatch()} • Bola do ${this.game.getTeamName(this.game.teamWithBall)}`, color: Global.Color.Pink, style: \"bold\" });\r\n        return false;\r\n    }\r\n    scoreCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        $.caller.reply({ message: `🎲 Red ${this.game.scoreRed} • ${this.game.scoreBlue} Blue`, color: Global.Color.Pink, style: \"bold\" });\r\n        return false;\r\n    }\r\n    unhikeCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.mode || this.game.conversion) {\r\n            $.caller.reply({ message: `⚠️ Não há uma descida em andamento!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        this.game.down.set({ room, countDown: false, countDistanceFromNewPos: false });\r\n        room.send({ message: `⚙️ ${$.caller.name} resetou a descida`, color: Global.Color.Pink, style: \"bold\" });\r\n        return false;\r\n    }\r\n    teamCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode || this.game.conversion) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado no meio de uma jogada!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const teamArg = $.args[0];\r\n        if (teamArg === \"red\") {\r\n            this.game.teamWithBall = Global_1.Team.Red;\r\n        }\r\n        else if (teamArg === \"blue\") {\r\n            this.game.teamWithBall = Global_1.Team.Blue;\r\n        }\r\n        else if (teamArg == null) {\r\n            this.game.teamWithBall = this.game.invertTeam(this.game.teamWithBall);\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Time inválido! Use ${room.prefix}team <red/blue> ou não especifique nenhum time caso queira alternar a posse`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} mudou a posse da bola para o ${this.game.getTeamName(this.game.teamWithBall)}`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.game.down.goalMode = false;\r\n        this.game.down.handleFirstDownLine(room);\r\n        this.game.down.setBallForHike(room, this.game.teamWithBall);\r\n        return false;\r\n    }\r\n    distanceCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ((this.game.mode !== this.game.down.mode && this.game.mode !== this.game.down.waitingHikeMode) || this.game.conversion) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado fora de uma descida!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const distanceArg = parseInt($.args[0]);\r\n        if (!Number.isInteger(distanceArg) || distanceArg < 1 || distanceArg > 20) {\r\n            $.caller.reply({ message: `⚠️ Distância inválida!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} mudou a distância de ${this.game.distance} para ${distanceArg}`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.game.distance = distanceArg;\r\n        if (!StadiumUtils_1.default.isInRedZone(this.game.ballPosition, this.game.invertTeam(this.game.teamWithBall))) {\r\n            this.game.down.setFirstDownLine(room);\r\n        }\r\n        return false;\r\n    }\r\n    downCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ((this.game.mode !== this.game.down.mode && this.game.mode !== this.game.down.waitingHikeMode) || this.game.conversion) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado fora de uma descida!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const downArg = parseInt($.args[0]);\r\n        if (!Number.isInteger(downArg) || downArg < 1 || downArg > 4) {\r\n            $.caller.reply({ message: `⚠️ Número de descida inválida!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} mudou a descida da ${this.game.downCount}ª para a ${downArg}ª`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.game.downCount = downArg;\r\n        return false;\r\n    }\r\n    setscoreCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const teamArg = $.args[0];\r\n        const scoreArg = $.args[1];\r\n        let team, score;\r\n        if (teamArg == null || scoreArg == null) {\r\n            $.caller.reply({ message: `⚠️ Comando inválido! Use: ${room.prefix}setscore <red/blue> <score>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (teamArg === \"red\") {\r\n            team = Global_1.Team.Red;\r\n        }\r\n        else if (teamArg === \"blue\") {\r\n            team = Global_1.Team.Blue;\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Time inválido! Use: ${room.prefix}setscore <red/blue> <score>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        score = parseInt(scoreArg);\r\n        if (!Number.isInteger(score) || score < 0) {\r\n            $.caller.reply({ message: `⚠️ Score inválido! Use: ${room.prefix}setscore <red/blue> <score>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} alterou o score do ${this.game.getTeamName(team)} • ${team === Global_1.Team.Red ? this.game.scoreRed : this.game.scoreBlue} → ${score}`, color: Global.Color.Pink, style: \"bold\" });\r\n        if (team === Global_1.Team.Red) {\r\n            this.game.scoreRed = score;\r\n        }\r\n        else {\r\n            this.game.scoreBlue = score;\r\n        }\r\n        return false;\r\n    }\r\n    gfiCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado no meio de uma jogada!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} resetou a posição dos jogadores`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.game.down.resetPlayersPosition(room);\r\n        return false;\r\n    }\r\n    setCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado no meio de uma jogada!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const teamArg = $.args[0];\r\n        const yardsArg = $.args[1];\r\n        let team, yards;\r\n        if (teamArg == null || yardsArg == null) {\r\n            $.caller.reply({ message: `⚠️ Comando inválido! Use: ${room.prefix}set <red/blue> <jardas>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (teamArg === \"red\") {\r\n            team = Global_1.Team.Red;\r\n        }\r\n        else if (teamArg === \"blue\") {\r\n            team = Global_1.Team.Blue;\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Time inválido! Use: ${room.prefix}set <red/blue> <jardas>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        yards = parseInt(yardsArg);\r\n        if (!Number.isInteger(yards) || yards < 1 || yards > 50) {\r\n            $.caller.reply({ message: `⚠️ Jardas inválidas! Use: ${room.prefix}set <red/blue> <jardas>`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `⚙️ ${$.caller.name} alterou a posição da bola`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.game.ballPosition = { team, yards };\r\n        this.game.down.set({ room, countDown: false, countDistanceFromNewPos: false });\r\n        return false;\r\n    }\r\n    toCommand($, room) {\r\n        if ($.caller.getTeam() === Global_1.Team.Spectators) {\r\n            $.caller.reply({ message: `⚠️ Você não está em um time!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode && this.game.mode !== this.game.kickOff.mode) {\r\n            $.caller.reply({ message: `⚠️ Este comando não pode ser utilizado no meio de uma jogada!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const timeStr = $.args[0];\r\n        const timeInt = parseInt(timeStr);\r\n        let time = timeInt == null || isNaN(timeInt) ? this.defaultTimeoutTime : timeInt;\r\n        if (!Number.isInteger(time) || time < this.minTimeoutTime || time > this.maxTimeoutTime) {\r\n            $.caller.reply({ message: `⚠️ Valor inválido! Valor precisa ser um número válido (em segundos) a partir de ${this.minTimeoutTime} e não maior que ${this.maxTimeoutTime}`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (room.isGamePaused()) {\r\n            $.caller.reply({ message: `⚠️ O jogo já está pausado!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const team = $.caller.getTeam() === Global_1.Team.Red ? \"red\" : \"blue\";\r\n        if (this.maxGameTimeout) {\r\n            if (this.maxGameTimeout.mode === \"tempo\") {\r\n                if (this.timeoutTimeSeconds[team] + time > this.maxGameTimeout.value) {\r\n                    $.caller.reply({ message: `⚠️ Erro! O tempo de timeout (${time}) é maior que o máximo permitido (${this.timeoutTimeSeconds[team]}/${this.maxGameTimeout.value})`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.timeoutUse[team] >= this.maxGameTimeout.value) {\r\n                    $.caller.reply({ message: `⚠️ Erro! Você atingiu seu limite máximo de timeouts durante a partida (${this.timeoutUse[team]}/${this.maxGameTimeout.value})`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        this.timeoutTimeSeconds[team] += time;\r\n        this.timeoutUse[team]++;\r\n        room.pause();\r\n        room.send({ message: `⏸️ Timeout pedido por ${$.caller.name} • Jogo ficará pausado por ${Utils_1.default.getFormattedSeconds(time)}`, color: Global.Color.Pink, style: \"bold\" });\r\n        this.pauseTimer = new Timer_1.default(() => {\r\n            room.send({ message: `⏸️ Tempo de timeout encerrado`, color: Global.Color.Pink, style: \"bold\" });\r\n            room.unpause();\r\n            this.pauseTimer = null;\r\n        }, time * 1000);\r\n        return false;\r\n    }\r\n    setMaxTimeoutCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const mode = $.args[0];\r\n        const valueStr = $.args[1];\r\n        const value = parseInt(valueStr);\r\n        if (mode === \"disable\") {\r\n            this.maxGameTimeout = null;\r\n            room.send({ message: `⚙️ ${$.caller.name} desativou o limite de timeout`, color: Global.Color.Pink, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (mode == null || valueStr == null || valueStr == \"\" ||\r\n            !Number.isInteger(value) ||\r\n            value < 1 ||\r\n            (mode !== \"tempo\" && mode !== \"uso\")) {\r\n            $.caller.reply({ message: `⚠️ Você precisa definir um modo (tempo/uso) e um valor válido!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        this.maxGameTimeout = { mode, value };\r\n        room.send({ message: `⚙️ ${$.caller.name} mudou as configurações de timeout (${mode} / ${value})`, color: Global.Color.Pink, style: \"bold\" });\r\n        return false;\r\n    }\r\n    editMapCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Você não pode usar esse comando durante uma partida!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const propertyStr = $.args[0];\r\n        if (propertyStr === \"list\") {\r\n            const propList = Object.keys(this.editableMapProperties);\r\n            $.caller.reply({ message: `📙 Lista de propriedades (${propList.length}): ${propList.join(\", \")}`, sound: 2, color: Global.Color.LimeGreen, style: \"bold\" });\r\n            return false;\r\n        }\r\n        else if (propertyStr === \"reset\") {\r\n            room.setStadium(this.game.getDefaultMap());\r\n            room.send({ message: `⚙️ ${$.caller.name} resetou o mapa`, color: Global.Color.Pink, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const property = this.editableMapProperties[propertyStr];\r\n        const value = $.message.split(propertyStr)[1]?.trim();\r\n        if (propertyStr == null || value == null || value == \"\" || property == null) {\r\n            $.caller.reply({ message: `⚠️ Você precisa definir uma propriedade e um valor válidos! Use ${room.prefix}editmap list para ver a lista de propriedades`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        let typedValue = value;\r\n        let validType = true;\r\n        if (property.type === \"number\") {\r\n            if (!/^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$/.test(value)) {\r\n                validType = false;\r\n            }\r\n            else {\r\n                typedValue = parseFloat(value);\r\n            }\r\n        }\r\n        else if (property.type === \"boolean\") {\r\n            if (value !== \"true\" && value !== \"false\") {\r\n                validType = false;\r\n            }\r\n            else {\r\n                typedValue = JSON.parse(value);\r\n            }\r\n        }\r\n        if (!validType) {\r\n            $.caller.reply({ message: `⚠️ Valor inválido! Esperado: ${property.type}`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const mapNow = JSON.parse(JSON.stringify(this.game.stadium));\r\n        try {\r\n            property.func(this.game.stadium, typedValue);\r\n        }\r\n        catch (err) {\r\n            $.caller.reply({ message: `⚠️ Erro: ${err}`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            this.game.stadium = mapNow;\r\n            return false;\r\n        }\r\n        room.setStadium({ ...this.game.stadium, name: this.game.stadium.name + \" Personalizado\" });\r\n        room.send({ message: `⚙️ ${$.caller.name} alterou o mapa`, color: Global.Color.Pink, style: \"bold\" });\r\n    }\r\n    acrescimosCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        $.caller.reply({ message: `​⏰​ Acréscimos acumulados: ${Utils_1.default.getFormattedSeconds(parseInt((this.game.getStoppage() / 1000).toFixed(2)))}`, color: Global.Color.Yellow, style: \"bold\" });\r\n        return false;\r\n    }\r\n    parcialCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        this.game.matchStats.sendStatsMsg($.caller);\r\n        return false;\r\n    }\r\n    swapCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: `⚠️ Você não é admin!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Esse comando não pode ser utilizado durante o jogo!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        this.game.customTeams.swapTeams(room);\r\n        const red = room.getPlayers().red();\r\n        const blue = room.getPlayers().blue();\r\n        red.forEach(p => p.setTeam(Global_1.Team.Blue));\r\n        blue.forEach(p => p.setTeam(Global_1.Team.Red));\r\n        room.send({ message: `⚙️ ${$.caller.name} alternou os times`, color: Global.Color.Pink, style: \"bold\" });\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"dd\"\r\n    })\r\n], GameCommands.prototype, \"ddCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"score\"\r\n    })\r\n], GameCommands.prototype, \"scoreCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"unhike\"\r\n    })\r\n], GameCommands.prototype, \"unhikeCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"team\"\r\n    })\r\n], GameCommands.prototype, \"teamCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"distance\"\r\n    })\r\n], GameCommands.prototype, \"distanceCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"down\"\r\n    })\r\n], GameCommands.prototype, \"downCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"setscore\"\r\n    })\r\n], GameCommands.prototype, \"setscoreCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"gfi\"\r\n    })\r\n], GameCommands.prototype, \"gfiCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"set\"\r\n    })\r\n], GameCommands.prototype, \"setCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"to\",\r\n        aliases: [\"timeout\"]\r\n    })\r\n], GameCommands.prototype, \"toCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"setmaxtimeout\"\r\n    })\r\n], GameCommands.prototype, \"setMaxTimeoutCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"editmap\"\r\n    })\r\n], GameCommands.prototype, \"editMapCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"acrescimos\"\r\n    })\r\n], GameCommands.prototype, \"acrescimosCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"parcial\"\r\n    })\r\n], GameCommands.prototype, \"parcialCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"swap\"\r\n    })\r\n], GameCommands.prototype, \"swapCommand\", null);\r\nexports[\"default\"] = GameCommands;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/GameCommands.ts?");

/***/ }),

/***/ "./src/modules/MatchStats.ts":
/*!***********************************!*\
  !*** ./src/modules/MatchStats.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.STAT_NAMES = exports.STAT_POINTS = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nconst Global_2 = __webpack_require__(/*! ../Global */ \"./src/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../Global */ \"./src/Global.ts\"));\r\nconst Translate_1 = __importDefault(__webpack_require__(/*! ../utils/Translate */ \"./src/utils/Translate.ts\"));\r\nvar StatCategory;\r\n(function (StatCategory) {\r\n    StatCategory[StatCategory[\"Quarterback\"] = 0] = \"Quarterback\";\r\n    StatCategory[StatCategory[\"WideReceiver\"] = 1] = \"WideReceiver\";\r\n    StatCategory[StatCategory[\"Defense\"] = 2] = \"Defense\";\r\n    StatCategory[StatCategory[\"SpecialTeams\"] = 3] = \"SpecialTeams\";\r\n    StatCategory[StatCategory[\"Misc\"] = 4] = \"Misc\";\r\n})(StatCategory || (StatCategory = {}));\r\nexports.STAT_POINTS = {\r\n    recepcoes: 1.5,\r\n    jardasRecebidas: 0.3,\r\n    jardasCorridas: 0.5,\r\n    touchdownRecebidos: 6,\r\n    touchdownCorridos: 6,\r\n    pickSix: 6,\r\n    fumbles: -6,\r\n    passesTentados: 0,\r\n    passesCompletos: 2,\r\n    jardasLancadas: 0.1,\r\n    passesPraTouchdown: 4,\r\n    interceptacoesLancadas: -6,\r\n    sacksRecebidos: -1,\r\n    jardasPerdidasSack: 0.5,\r\n    stripSackRecebidos: -4,\r\n    passesBloqueados: 3,\r\n    tackles: 1.5,\r\n    sacks: 6,\r\n    interceptacoes: 12,\r\n    fumblesForcados: 8,\r\n    faltas: -3,\r\n    retornos: 0,\r\n    touchdownRetornados: 6,\r\n    fieldGoalPerdidos: -2,\r\n    fieldGoalJardas: 0.1\r\n};\r\nexports.STAT_NAMES = {\r\n    recepcoes: [\"Recepções\", \"Rec\", StatCategory.WideReceiver],\r\n    jardasRecebidas: [\"Jardas Recebidas\", \"J Rec\", StatCategory.WideReceiver],\r\n    jardasCorridas: [\"Jardas Corridas\", \"J Run\", StatCategory.WideReceiver],\r\n    touchdownRecebidos: [\"Touchdowns Recebidos\", \"TD Rec\", StatCategory.WideReceiver],\r\n    touchdownCorridos: [\"Touchdowns Corridos\", \"TD Run\", StatCategory.WideReceiver],\r\n    pickSix: [\"Pick Six\", \"P Six\", StatCategory.WideReceiver],\r\n    corridas: [\"Corridas\", \"Run\", StatCategory.WideReceiver],\r\n    fumbles: [\"Fumbles\", \"Fum\", StatCategory.WideReceiver],\r\n    passesTentados: [\"Passes Tentados\", \"Pass Ten\", StatCategory.Quarterback],\r\n    passesCompletos: [\"Passes Completos\", \"Pass Cmp\", StatCategory.Quarterback],\r\n    jardasLancadas: [\"Jardas Lançadas\", \"J Lanc\", StatCategory.Quarterback],\r\n    passesPraTouchdown: [\"Passes para Touchdown\", \"Pass TD\", StatCategory.Quarterback],\r\n    interceptacoesLancadas: [\"Interceptações Lançadas\", \"Int Lanc\", StatCategory.Quarterback],\r\n    sacksRecebidos: [\"Sacks Recebidos\", \"Sac Rec\", StatCategory.Quarterback],\r\n    corridasQb: [\"Corridas de Quarterback\", \"QB Run\", StatCategory.Quarterback],\r\n    jardasPerdidasSack: [\"Jardas Perdidas em Sack\", \"J Sac\", StatCategory.Quarterback],\r\n    stripSackRecebidos: [\"Strip Sacks Recebidos\", \"St Sac\", StatCategory.WideReceiver],\r\n    passesBloqueados: [\"Passes Bloqueados\", \"Pass Block\", StatCategory.Defense],\r\n    tackles: [\"Tackles\", \"Tackle\", StatCategory.Defense],\r\n    sacks: [\"Sacks\", \"Sack\", StatCategory.Defense],\r\n    interceptacoes: [\"Interceptações\", \"Int\", StatCategory.Defense],\r\n    fumblesForcados: [\"Fumbles Forçados\", \"Fum Forc\", StatCategory.Defense],\r\n    faltas: [\"Faltas\", \"Faltas\", StatCategory.Misc],\r\n    retornos: [\"Retornos\", \"Ret\", StatCategory.SpecialTeams],\r\n    jardasRetornadas: [\"Jardas Retornadas\", \"J Ret\", StatCategory.SpecialTeams],\r\n    touchdownRetornados: [\"Touchdowns Retornados\", \"TD Ret\", StatCategory.SpecialTeams],\r\n    fieldGoalJardas: [\"Jardas de Field Goal\", \"J FG\", StatCategory.SpecialTeams],\r\n    fieldGoalCompletos: [\"Field Goals Completos\", \"FG Cmp\", StatCategory.SpecialTeams],\r\n    fieldGoalPerdidos: [\"Field Goals Completos\", \"FG Perd\", StatCategory.SpecialTeams],\r\n};\r\nfunction getId() {\r\n    return Math.random().toString(36).substr(2, 5).toUpperCase();\r\n}\r\nclass MatchStats {\r\n    list = [];\r\n    id = getId();\r\n    wsConnection;\r\n    firstConnectionAttempt = true;\r\n    constructor(room, port) {\r\n        this.connectWs(port, room);\r\n    }\r\n    connectWs(port, room) {\r\n        this.wsConnection = new WebSocket(`ws://localhost:${port}`);\r\n        this.wsConnection.onmessage = (e) => {\r\n            try {\r\n                let data = JSON.parse(e.data);\r\n                if (data.id) {\r\n                    room.send({ message: (0, Translate_1.default)(\"GAME_RECORDED\", data.id), color: Global_2.Color.LightPink, style: \"bold\" });\r\n                }\r\n            }\r\n            catch (err) { }\r\n            ;\r\n        };\r\n        this.wsConnection.onopen = (e) => {\r\n            this.firstConnectionAttempt = false;\r\n        };\r\n        this.wsConnection.onclose = (e) => {\r\n            if (!this.firstConnectionAttempt) {\r\n                setTimeout(() => this.connectWs(port, room), 10000);\r\n            }\r\n            else {\r\n                console.error(\"Could not connect to the recordings socket! The recordings feature will not work.\");\r\n                console.log(\"%cAttention: Could not connect to the recordings socket. The integration will be disabled.\", \"font-size: 20px; color: red;\");\r\n            }\r\n        };\r\n        this.wsConnection.onerror = (err) => {\r\n            console.error('Socket encountered error: ', err, 'Closing socket');\r\n            this.wsConnection.close();\r\n        };\r\n    }\r\n    calculatePointsPlayer(playerIdOrStats) {\r\n        const playerStats = typeof playerIdOrStats === \"number\" ? this.list.find(p => p.playerId === playerIdOrStats)?.stats : playerIdOrStats;\r\n        if (!playerStats)\r\n            return 0;\r\n        let points = 0;\r\n        for (const [statName, score] of Object.entries(playerStats)) {\r\n            const multiplier = exports.STAT_POINTS[statName] ?? 0;\r\n            points += score * multiplier;\r\n        }\r\n        return Number(points.toFixed(1));\r\n    }\r\n    getMVP() {\r\n        if (!this.list.length)\r\n            return;\r\n        const playerStats = this.list\r\n            .map(p => [p.playerName, this.calculatePointsPlayer(p.stats)])\r\n            .sort((a, b) => b[1] - a[1])\r\n            .at(0);\r\n        return { name: playerStats[0], points: playerStats[1] };\r\n    }\r\n    sendStatsMsg(player) {\r\n        const playerStats = this.list.find(p => p.playerId === player.id)?.stats;\r\n        if (!playerStats) {\r\n            player.reply({ message: `⚠️ Você ainda não tem nenhum stats nessa partida!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return;\r\n        }\r\n        let qbCat = [];\r\n        let wrCat = [];\r\n        let defCat = [];\r\n        let miscCat = [];\r\n        Object.entries(playerStats).forEach(([statName, n]) => {\r\n            const statInfo = exports.STAT_NAMES[statName];\r\n            const statCat = statInfo[2];\r\n            const stat = [statInfo[1], n];\r\n            switch (statCat) {\r\n                case StatCategory.Quarterback:\r\n                    qbCat.push(stat);\r\n                    break;\r\n                case StatCategory.WideReceiver:\r\n                    wrCat.push(stat);\r\n                    break;\r\n                case StatCategory.Defense:\r\n                    defCat.push(stat);\r\n                    break;\r\n                default:\r\n                    miscCat.push(stat);\r\n                    break;\r\n            }\r\n        });\r\n        const stringifyCat = (cat) => {\r\n            return cat.filter((a) => a).map((a) => `${a[0]} (${a[1]})`).join(\", \");\r\n        };\r\n        let qbCatStr = stringifyCat(qbCat);\r\n        let wrCatStr = stringifyCat(wrCat);\r\n        let defCatStr = stringifyCat(defCat);\r\n        let miscCatStr = stringifyCat(miscCat);\r\n        let isStartMsgSet = false;\r\n        const getStartMsg = () => {\r\n            if (!isStartMsgSet) {\r\n                isStartMsgSet = true;\r\n                return ` ${player.name} (${this.calculatePointsPlayer(player.id)}) •`;\r\n                ;\r\n            }\r\n            return \"\";\r\n        };\r\n        if (qbCat.length)\r\n            player.reply({ message: `🔴 𝐏𝐀𝐒 •${getStartMsg()} ${qbCatStr}`, style: \"bold\", color: Global.Color.Tomato, sound: 2 });\r\n        if (wrCat.length)\r\n            player.reply({ message: `🟢 𝐑𝐄𝐂 •${getStartMsg()} ${wrCatStr}`, style: \"bold\", color: Global.Color.LimeGreen, sound: 2 });\r\n        if (defCat.length)\r\n            player.reply({ message: `🔵 𝐃𝐄𝐅 •${getStartMsg()} ${defCatStr}`, style: \"bold\", color: 0x3bbdc4, sound: 2 });\r\n        if (miscCat.length)\r\n            player.reply({ message: `🟡 𝐌𝐈𝐒𝐂 •${getStartMsg()} ${miscCatStr}`, style: \"bold\", color: 0xf2cc00, sound: 2 });\r\n    }\r\n    add(player, stats) {\r\n        if (!player)\r\n            return;\r\n        const p = this.list.find(p => p.playerId === player.id);\r\n        if (p) {\r\n            for (const [key, value] of Object.entries(stats)) {\r\n                if (p.stats[key] != null) {\r\n                    p.stats[key] += value;\r\n                }\r\n                else {\r\n                    p.stats[key] = value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.list.push({ playerId: player.id, playerName: player.name, registered: player.roles.includes(Global.loggedRole), stats });\r\n        }\r\n    }\r\n    clear() {\r\n        this.list = [];\r\n        this.id = getId();\r\n    }\r\n    async sendToDiscord(recording, game, teamsHistory) {\r\n        const info = new TextEncoder().encode(JSON.stringify({\r\n            version: Global.version,\r\n            redName: game.getCustomTeamName(Global_1.Team.Red),\r\n            redGoals: game.scoreRed,\r\n            blueName: game.getCustomTeamName(Global_1.Team.Blue),\r\n            blueGoals: game.scoreBlue,\r\n            teamsHistory,\r\n            id: this.id,\r\n            stats: this.list.map(l => {\r\n                return {\r\n                    ...l,\r\n                    points: this.calculatePointsPlayer(l.stats)\r\n                };\r\n            })\r\n        }));\r\n        let blob = new Blob([this.createBinaryString(info.length), info, recording]);\r\n        let arrayBuffer = blob.arrayBuffer();\r\n        arrayBuffer.then(buffer => {\r\n            this.wsConnection.send(buffer);\r\n        });\r\n    }\r\n    createBinaryString(nMask) {\r\n        for (var nFlag = 0, nShifted = nMask, sMask = \"\"; nFlag < 32; nFlag++, sMask += String(nShifted >>> 31), nShifted <<= 1)\r\n            ;\r\n        return sMask;\r\n    }\r\n}\r\nexports[\"default\"] = MatchStats;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/MatchStats.ts?");

/***/ }),

/***/ "./src/modules/administration/AFK.ts":
/*!*******************************************!*\
  !*** ./src/modules/administration/AFK.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AFK = void 0;\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nclass AFK extends Module_1.default {\r\n    constructor(room) {\r\n        super();\r\n        room.on(\"playerTeamChanged\", (changedPlayer) => {\r\n            if (changedPlayer.getTeam() !== Global_1.Team.Spectators) {\r\n                if (changedPlayer.settings.afk) {\r\n                    changedPlayer.setTeam(Global_1.Team.Spectators);\r\n                    room.send({ message: `⚠️ ${changedPlayer.name} está AFK e não pode ser movido!`, color: Global.Color.Tomato, style: \"bold\" });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    afkCommand($, room) {\r\n        if (room.isGameInProgress() && $.caller.getTeam() !== Global_1.Team.Spectators && !room.isGamePaused() && room.getPlayers().teams().length > 2) {\r\n            $.caller.reply({ message: \"⚠️ Você não pode ficar AFK com o jogo despausado!\", color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.settings.afk) {\r\n            $.caller.settings.afk = false;\r\n            room.send({ message: `🥱 ${$.caller.name} não está mais AFK!`, color: Global.Color.SeaGreen, style: \"bold\" });\r\n            room.emit('unafk', $.caller);\r\n        }\r\n        else {\r\n            if ($.caller.getTeam() !== Global_1.Team.Spectators && room.isGameInProgress()) {\r\n                $.caller.reply({ message: \"⚠️ Você não pode ficar AFK durante a partida!\", color: Global.Color.Tomato, style: \"bold\" });\r\n                return false;\r\n            }\r\n            $.caller.settings.afk = true;\r\n            room.send({ message: `😴 ${$.caller.name} ficou AFK!`, color: Global.Color.Orange, style: \"bold\" });\r\n            room.emit('afk', $.caller);\r\n            if ($.caller.getTeam() !== Global_1.Team.Spectators)\r\n                $.caller.setTeam(Global_1.Team.Spectators);\r\n        }\r\n        return false;\r\n    }\r\n    afksCommand($, room) {\r\n        const afks = room.getPlayers().filter(p => p.settings.afk);\r\n        if (afks.length > 0) {\r\n            $.caller.reply({ message: `😴 Jogadores AFK (${afks.length}): ${Utils_1.default.getPlayersNames(afks)}`, color: Global.Color.MediumSeaGreen, style: \"bold\" });\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Não há nenhum jogador AFK!`, color: Global.Color.Tomato, style: \"bold\" });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"afk\"\r\n    })\r\n], AFK.prototype, \"afkCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"afks\"\r\n    })\r\n], AFK.prototype, \"afksCommand\", null);\r\nexports.AFK = AFK;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/AFK.ts?");

/***/ }),

/***/ "./src/modules/administration/Admin.ts":
/*!*********************************************!*\
  !*** ./src/modules/administration/Admin.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Admin = void 0;\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst PlayerList_1 = __importDefault(__webpack_require__(/*! ../../core/PlayerList */ \"./src/core/PlayerList.ts\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nclass Admin extends Module_1.default {\r\n    adminsAuth = [];\r\n    players = new PlayerList_1.default();\r\n    bans = [];\r\n    blackBanneds = [];\r\n    restrictNonRegisteredPlayers = !!window[\"CustomSettings\"]?.nivel;\r\n    constructor(room) {\r\n        super();\r\n        room.on(\"playerJoin\", (player) => {\r\n            this.updateAdmins(room);\r\n        });\r\n        room.on(\"playerLeave\", (player) => {\r\n            this.updateAdmins(room);\r\n        });\r\n        room.on(\"playerAdminChange\", (changedPlayer, byPlayer) => {\r\n            if (!changedPlayer.auth)\r\n                return;\r\n            if (this.restrictNonRegisteredPlayers && !changedPlayer.roles.includes(Global.loggedRole)) {\r\n                changedPlayer.setAdmin(false);\r\n            }\r\n            else if (this.adminsAuth.includes(changedPlayer.auth) && !changedPlayer.isAdmin() && byPlayer && byPlayer.id !== changedPlayer.id) {\r\n                changedPlayer.setAdmin(true);\r\n            }\r\n            else {\r\n                this.updateAdmins(room);\r\n            }\r\n        });\r\n        room.on(\"afk\", () => {\r\n            this.updateAdmins(room);\r\n        });\r\n        room.on(\"playerKicked\", (kickedPlayer, reason, ban, byPlayer) => {\r\n            if (!ban)\r\n                return;\r\n            if (byPlayer && !this.adminsAuth.includes(byPlayer.auth) && kickedPlayer.roles.includes(Global.loggedRole)) {\r\n                byPlayer.kick(\"Você não pode banir registrados sem ser um admin oficial!\");\r\n                room.clearBan(kickedPlayer.id);\r\n            }\r\n            else {\r\n                this.bans.push({ id: kickedPlayer.id, name: kickedPlayer.name, reason: reason, byPlayer: byPlayer?.name });\r\n            }\r\n        });\r\n        room.on(\"playerJoin\", (player) => {\r\n            if (player.roles.includes(Global.adminAccountRole)) {\r\n                this.adminsAuth.push(player.auth);\r\n            }\r\n        });\r\n    }\r\n    isAdmin(player) {\r\n        return this.adminsAuth.includes(player.auth) || (player.roles.includes(Global.bypassRegisterRole) && player.isAdmin());\r\n    }\r\n    updateAdmins(room) {\r\n        if (!room.getPlayers().find(p => p.isAdmin() && !p.settings.afk)) {\r\n            const player = room.getPlayers().filter(p => !p.isAdmin() && !p.settings.afk && (this.restrictNonRegisteredPlayers ? p.roles.includes(Global.loggedRole) : true))[0];\r\n            if (player) {\r\n                player.setAdmin(true);\r\n            }\r\n        }\r\n    }\r\n    adminCommand($, room) {\r\n        if (this.isAdmin($.caller)) {\r\n            $.caller.setAdmin(!$.caller.isAdmin());\r\n            return false;\r\n        }\r\n        $.caller.reply({ message: `⚠️ Somente administradores oficiais podem utilizar esse comando!`, color: Global.Color.Tomato, style: \"bold\" });\r\n        return false;\r\n    }\r\n    limparbansCommand($, room) {\r\n        if (!this.isAdmin($.caller)) {\r\n            $.caller.reply({ message: `⚠️ Somente administradores oficiais podem utilizar esse comando!`, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.bans.length === 0 && $.args[0] !== \"force\") {\r\n            $.caller.reply({ message: `⚠️ Não há ninguém banido!\\n❌ Se você acha que isso é um erro, digite \"${room.prefix}limparbans force\" para desbanir mesmo assim.`, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.clearBans();\r\n        room.send({ message: `🕊️ Todos os bans (${this.bans.length}) foram removidos por ${$.caller.name}!`, color: Global.Color.HotPink, style: \"bold\" });\r\n        this.bans = [];\r\n    }\r\n    desbanirCommand($, room) {\r\n        if (!this.isAdmin($.caller)) {\r\n            $.caller.reply({ message: `⚠️ Somente administradores oficiais podem utilizar esse comando!`, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const idOrName = $.args[0];\r\n        const bannedPlayers = this.bans.filter(p => p.id === parseInt(idOrName) || p.name === idOrName);\r\n        if (bannedPlayers.length) {\r\n            let names = [];\r\n            let message = \"\";\r\n            bannedPlayers.forEach(bP => {\r\n                names.push(bP.name);\r\n                room.clearBan(bP.id);\r\n                this.bans = this.bans.filter(p => p.id !== bP.id);\r\n            });\r\n            if (names.length > 1) {\r\n                if (names.every((value, index, array) => value === array[0])) {\r\n                    message = `${names.length} jogadores com o nome ${names[0]} foram desbanidos`;\r\n                }\r\n                else {\r\n                    message = `${Utils_1.default.getPlayersNames(bannedPlayers)} foram desbanidos`;\r\n                }\r\n            }\r\n            else {\r\n                message = `${names[0]} foi desbanido`;\r\n            }\r\n            room.send({ message: `🕊️ ${message} por ${$.caller.name}`, color: Global.Color.HotPink, style: \"bold\" });\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Não foi encontrado nenhum jogador banido com esse nome ou ID!`, color: Global.Color.Tomato, style: \"bold\" });\r\n        }\r\n    }\r\n    banidosCommand($, room) {\r\n        if (!this.isAdmin($.caller)) {\r\n            $.caller.reply({ message: `⚠️ Somente administradores oficiais podem utilizar esse comando!`, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.bans.length) {\r\n            const banned = this.bans.slice(0, 20);\r\n            $.caller.reply({ message: `🚫 Lista de banidos (${this.bans.length}): ${Utils_1.default.getPlayersNames(banned.map(p => { return { name: `${p.name} (${p.id})` }; }))}${this.bans.length > 20 ? `\\n🚫 ...e mais outros ${this.bans.length - banned.length}.` : \"\"}`, color: Global.Color.HotPink, style: \"bold\" });\r\n        }\r\n        else {\r\n            $.caller.reply({ message: `⚠️ Não há ninguém banido!`, color: Global.Color.Tomato, style: \"bold\" });\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"admin\"\r\n    })\r\n], Admin.prototype, \"adminCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"limparbans\"\r\n    })\r\n], Admin.prototype, \"limparbansCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"desbanir\",\r\n    })\r\n], Admin.prototype, \"desbanirCommand\", null);\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"banidos\"\r\n    })\r\n], Admin.prototype, \"banidosCommand\", null);\r\nexports.Admin = Admin;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Admin.ts?");

/***/ }),

/***/ "./src/modules/administration/AntiFake.ts":
/*!************************************************!*\
  !*** ./src/modules/administration/AntiFake.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nclass AntiFake extends Module_1.default {\r\n    confirmationLevel = \"NOT_FAKE\";\r\n    constructor(room) {\r\n        super();\r\n        room.addConfirmLevel(this.confirmationLevel);\r\n        room.on(\"playerJoin\", (player) => {\r\n            if (player.name.toLowerCase().includes(\"ld\")) {\r\n                setTimeout(() => player?.ban(), 3000);\r\n            }\r\n        });\r\n        room.on(\"playerNeedsConfirmation\", (player) => {\r\n            const originalPlayer = room.getPlayers().find(p => p.ip === player.ip && player.id !== p.id);\r\n            if (originalPlayer)\r\n                return player.kick(`Você reentrou na sala [${originalPlayer.name}]!`);\r\n            player.addConfirmLevel(this.confirmationLevel);\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = AntiFake;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/AntiFake.ts?");

/***/ }),

/***/ "./src/modules/administration/BetterChat.ts":
/*!**************************************************!*\
  !*** ./src/modules/administration/BetterChat.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BetterChat = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../Global */ \"./src/Global.ts\");\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_2 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nclass BetterChat extends Module_1.default {\r\n    asianRegex = RegExp(/[\\p{Script_Extensions=Mymr}\\p{Script_Extensions=Han}\\p{Script_Extensions=Hira}\\p{Script_Extensions=Kana}\\p{Script_Extensions=Bopo}\\p{Script=Khmer}\\p{Script=Lao}\\p{Script_Extensions=Phag}\\p{Script=Tai_Tham}\\p{Script=Thai}\\p{Script=Tibetan}]/ug);\r\n    emojiRegex = RegExp(/[\\u{1f300}-\\u{1f5ff}\\u{1f900}-\\u{1f9ff}\\u{1f600}-\\u{1f64f}\\u{1f680}-\\u{1f6ff}\\u{2600}-\\u{26ff}\\u{2700}-\\u{27bf}\\u{1f1e6}-\\u{1f1ff}\\u{1f191}-\\u{1f251}\\u{1f004}\\u{1f0cf}\\u{1f170}-\\u{1f171}\\u{1f17e}-\\u{1f17f}\\u{1f18e}\\u{3030}\\u{2b50}\\u{2b55}\\u{2934}-\\u{2935}\\u{2b05}-\\u{2b07}\\u{2b1b}-\\u{2b1c}\\u{3297}\\u{3299}\\u{303d}\\u{00a9}\\u{00ae}\\u{2122}\\u{23f3}\\u{24c2}\\u{23e9}-\\u{23ef}\\u{25b6}\\u{23f8}-\\u{23fa}]/ug);\r\n    longRegex = RegExp(/(⸻|𒈙|𒐫|﷽|𒍙|𒊎|𒄡|𒅌|𒁏|𒀰|𒐪|𒐩|𒈙|𒐫)/gi);\r\n    constructor(room) {\r\n        super();\r\n        room.on(\"playerChat\", (player, message) => {\r\n            if (!player.isConfirmed())\r\n                return false;\r\n            if (this.isUsingIllegalChars(message)) {\r\n                player.reply({ message: `⚠️ Mensagem bloqueada! Excesso de caracteres especiais`, sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n                return false;\r\n            }\r\n            if (message.startsWith(\";\") && player.getTeam() !== Global_2.Team.Spectators) {\r\n                this.sendTeamMessage(room, player, message);\r\n                return;\r\n            }\r\n            let color = Global_1.Color.White;\r\n            let prefix = \"⬜\";\r\n            if (!player.roles.includes(Global.loggedRole) && !player.roles.includes(Global.bypassRegisterRole)) {\r\n                prefix = \"✖️\";\r\n            }\r\n            else if (player.getTeam() === Global_2.Team.Red) {\r\n                prefix = \"🟥\";\r\n            }\r\n            else if (player.getTeam() === Global_2.Team.Blue) {\r\n                prefix = \"🟦\";\r\n            }\r\n            else if (player.isAdmin()) {\r\n                prefix = \"🟨\";\r\n            }\r\n            else if (player.roles.includes(Global.loggedRole)) {\r\n                prefix = \"✅\";\r\n            }\r\n            const mentionedPlayers = room.getPlayers().filter(p => message.includes(p.getMention())).map(p => p.id);\r\n            if (mentionedPlayers.length > 0) {\r\n                for (const p of room.getPlayers()) {\r\n                    const isMentioned = mentionedPlayers.includes(p.id);\r\n                    p.reply({\r\n                        message: `${prefix} ${player.name}: ${message}`,\r\n                        color: isMentioned ? Global_1.Color.White : color,\r\n                        style: isMentioned ? \"bold\" : \"normal\",\r\n                        sound: isMentioned ? 2 : 1\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                room.send({ message: `${prefix} ${player.name}: ${message}`, color });\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    sendTeamMessage(room, player, message) {\r\n        for (const teammate of room.getPlayers().filter(p => p.getTeam() === player.getTeam())) {\r\n            teammate.reply({\r\n                message: `📞 ${player.name}: ${message.substring(1)}`,\r\n                color: Global_1.Color.Yellow,\r\n                sound: 2\r\n            });\r\n        }\r\n    }\r\n    isUsingIllegalChars(message) {\r\n        const asian = (message.match(this.asianRegex) || []).length;\r\n        const emoji = (message.match(this.emojiRegex) || []).length;\r\n        const long = (message.match(this.longRegex) || []).length;\r\n        if (long > 0)\r\n            return true;\r\n        if (asian > 10)\r\n            return true;\r\n        if (asian + emoji > 15)\r\n            return true;\r\n        return false;\r\n    }\r\n    bbCommand($, room) {\r\n        $.caller.kick(\"Volte sempre!\");\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"bb\"\r\n    })\r\n], BetterChat.prototype, \"bbCommand\", null);\r\nexports.BetterChat = BetterChat;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/BetterChat.ts?");

/***/ }),

/***/ "./src/modules/administration/Discord.ts":
/*!***********************************************!*\
  !*** ./src/modules/administration/Discord.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../../Global */ \"./src/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nclass Discord extends Module_1.default {\r\n    discordCommand($, room) {\r\n        $.caller.reply({ message: `👾 Discord: ${Global.discord}`, sound: 2, color: Global_1.Color.LightGreen, style: \"bold\" });\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"discord\"\r\n    })\r\n], Discord.prototype, \"discordCommand\", null);\r\nexports[\"default\"] = Discord;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Discord.ts?");

/***/ }),

/***/ "./src/modules/administration/Help.ts":
/*!********************************************!*\
  !*** ./src/modules/administration/Help.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../../Global */ \"./src/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nclass Help extends Module_1.default {\r\n    helpCommand($) {\r\n        $.caller.reply({ message: `📖 Comandos: !help !afk !score !dd !bb !to !versao !comoregistrar !teamlist !acrescimos !parcial`, sound: 2, color: Global_1.Color.LimeGreen, style: \"bold\" });\r\n        if ($.caller.isAdmin())\r\n            $.caller.reply({ message: `🔨 Comandos de admin: !set !team !gfi !distance !down !unhike !banidos !limparbans !desbanir !editmap !clearhiketime !setmaxtimeout !setscore !setteam !swap`, sound: 2, color: Global_1.Color.LimeGreen, style: \"bold\" });\r\n        $.caller.reply({ message: `🙋 Veja nosso tutorial: https://bfleague.online/`, sound: 2, color: Global_1.Color.LimeGreen, style: \"bold\" });\r\n        $.caller.reply({ message: `👾 Entre no nosso Discord: ${Global.discord}`, sound: 2, color: Global_1.Color.LimeGreen, style: \"bold\" });\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"help\",\r\n        aliases: [\"ajuda\", \"comojogar\", \"regras\"]\r\n    })\r\n], Help.prototype, \"helpCommand\", null);\r\nexports[\"default\"] = Help;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Help.ts?");

/***/ }),

/***/ "./src/modules/administration/Log.ts":
/*!*******************************************!*\
  !*** ./src/modules/administration/Log.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nfunction SHA256(s) {\r\n    let chrsz = 8;\r\n    let hexcase = 0;\r\n    function safe_add(x, y) {\r\n        let lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n        let msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n    function S(X, n) {\r\n        return (X >>> n) | (X << (32 - n));\r\n    }\r\n    function R(X, n) {\r\n        return (X >>> n);\r\n    }\r\n    function Ch(x, y, z) {\r\n        return ((x & y) ^ ((~x) & z));\r\n    }\r\n    function Maj(x, y, z) {\r\n        return ((x & y) ^ (x & z) ^ (y & z));\r\n    }\r\n    function Sigma0256(x) {\r\n        return (S(x, 2) ^ S(x, 13) ^ S(x, 22));\r\n    }\r\n    function Sigma1256(x) {\r\n        return (S(x, 6) ^ S(x, 11) ^ S(x, 25));\r\n    }\r\n    function Gamma0256(x) {\r\n        return (S(x, 7) ^ S(x, 18) ^ R(x, 3));\r\n    }\r\n    function Gamma1256(x) {\r\n        return (S(x, 17) ^ S(x, 19) ^ R(x, 10));\r\n    }\r\n    function core_sha256(m, l) {\r\n        let K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);\r\n        let HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);\r\n        let W = new Array(64);\r\n        let a, b, c, d, e, f, g, h, i, j;\r\n        let T1, T2;\r\n        m[l >> 5] |= 0x80 << (24 - l % 32);\r\n        m[((l + 64 >> 9) << 4) + 15] = l;\r\n        for (let i = 0; i < m.length; i += 16) {\r\n            a = HASH[0];\r\n            b = HASH[1];\r\n            c = HASH[2];\r\n            d = HASH[3];\r\n            e = HASH[4];\r\n            f = HASH[5];\r\n            g = HASH[6];\r\n            h = HASH[7];\r\n            for (let j = 0; j < 64; j++) {\r\n                if (j < 16)\r\n                    W[j] = m[j + i];\r\n                else\r\n                    W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\r\n                T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\r\n                T2 = safe_add(Sigma0256(a), Maj(a, b, c));\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = safe_add(d, T1);\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = safe_add(T1, T2);\r\n            }\r\n            HASH[0] = safe_add(a, HASH[0]);\r\n            HASH[1] = safe_add(b, HASH[1]);\r\n            HASH[2] = safe_add(c, HASH[2]);\r\n            HASH[3] = safe_add(d, HASH[3]);\r\n            HASH[4] = safe_add(e, HASH[4]);\r\n            HASH[5] = safe_add(f, HASH[5]);\r\n            HASH[6] = safe_add(g, HASH[6]);\r\n            HASH[7] = safe_add(h, HASH[7]);\r\n        }\r\n        return HASH;\r\n    }\r\n    function str2binb(str) {\r\n        let bin = Array();\r\n        let mask = (1 << chrsz) - 1;\r\n        for (let i = 0; i < str.length * chrsz; i += chrsz) {\r\n            bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i % 32);\r\n        }\r\n        return bin;\r\n    }\r\n    function Utf8Encode(string) {\r\n        string = string.replace(/\\r\\n/g, '\\n');\r\n        let utftext = '';\r\n        for (let n = 0; n < string.length; n++) {\r\n            let c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    }\r\n    function binb2hex(binarray) {\r\n        let hex_tab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';\r\n        let str = '';\r\n        for (let i = 0; i < binarray.length * 4; i++) {\r\n            str += hex_tab.charAt((binarray[i >> 2] >> ((3 - i % 4) * 8 + 4)) & 0xF) +\r\n                hex_tab.charAt((binarray[i >> 2] >> ((3 - i % 4) * 8)) & 0xF);\r\n        }\r\n        return str;\r\n    }\r\n    s = Utf8Encode(s);\r\n    return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\r\n}\r\nclass Log extends Module_1.default {\r\n    msgs = [];\r\n    msgIntervalTimeMs = 7000;\r\n    ipServerURL = {\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.UNSAFE_CONNECTION_LOG;\r\n    connHashURL = {\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.SAFE_CONNECTION_LOG;\r\n    chatLogURL = {\"RECS_PORT\":\"4000\",\"DATABASE_PORT\":\"3000\",\"ENABLE_LOG\":\"false\",\"MODE\":\"development\"}.CHAT_LOG;\r\n    sendEmbedWebhook(url, embed) {\r\n        return fetch(url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                content: null,\r\n                allowed_mentions: { parse: [] },\r\n                embeds: [embed],\r\n            }),\r\n        });\r\n    }\r\n    sendContentWebhook(url, content) {\r\n        return fetch(url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                content,\r\n                allowed_mentions: { parse: [] },\r\n            }),\r\n        });\r\n    }\r\n    constructor(room) {\r\n        super();\r\n        setInterval(() => {\r\n            if (this.msgs.length === 0)\r\n                return;\r\n            this.sendContentWebhook(this.chatLogURL, this.msgs\r\n                .join(\"\\n\")\r\n                .substring(0, 2000));\r\n            this.msgs = [];\r\n        }, this.msgIntervalTimeMs);\r\n        room.on(\"playerJoin\", (player) => {\r\n            this.sendEmbedWebhook(this.ipServerURL, {\r\n                color: 11730954,\r\n                title: player.name,\r\n                url: 'https://ipapi.co/' + player.ip,\r\n                description: player.ip + \"\",\r\n            });\r\n        });\r\n        room.on(\"playerChat\", (player, message) => {\r\n            if (player.roles.length === 0)\r\n                return;\r\n            this.msgs.push(`\\` ${player.name.padStart((player.name.length + 11) / 2).padEnd(11)} \\` ${message}`);\r\n        });\r\n        room.on(\"playerJoin\", (player) => {\r\n            this.sendEmbedWebhook(this.connHashURL, {\r\n                color: 11730954,\r\n                title: player.name,\r\n                fields: [\r\n                    { name: \"Hash\", value: SHA256(player.ip), inline: true },\r\n                    { name: \"Auth\", value: SHA256(player.auth), inline: true },\r\n                ]\r\n            });\r\n            this.msgs.push(`${player.name} entrou na sala`);\r\n        });\r\n        room.on(\"playerLeave\", (player) => {\r\n            this.sendContentWebhook(this.chatLogURL, `${player.name} saiu da sala`);\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = Log;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Log.ts?");

/***/ }),

/***/ "./src/modules/administration/Register.ts":
/*!************************************************!*\
  !*** ./src/modules/administration/Register.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Database_1 = __importStar(__webpack_require__(/*! ../../Database */ \"./src/Database.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nclass Register extends Module_1.default {\r\n    database = new Database_1.default();\r\n    confirmationLevel = \"CONFIRMED\";\r\n    kickTime = 30000;\r\n    restrictNonRegisteredPlayers = !!window[\"CustomSettings\"]?.nivel;\r\n    disableAfterInitialPingFailed = true;\r\n    disabled = false;\r\n    playersWaitingConfirmation = [];\r\n    constructor(room) {\r\n        super();\r\n        if (this.disableAfterInitialPingFailed) {\r\n            this.database.ping().then(req => {\r\n                if (req.type !== Database_1.ResponseType.Success) {\r\n                    this.disabled = true;\r\n                    console.log(\"%cAttention: Ping to database service failed. The login system will be disabled.\", \"font-size: 20px; color: red;\");\r\n                }\r\n            });\r\n        }\r\n        if (this.restrictNonRegisteredPlayers) {\r\n            setInterval(() => {\r\n                if (this.disabled)\r\n                    return;\r\n                for (const player of room.getPlayers()) {\r\n                    if (!player.roles.includes(Global.loggedRole)) {\r\n                        player.reply({ message: `❌ Você não está registrado! Registre-se no nosso !discord${this.restrictNonRegisteredPlayers ? \" para poder jogar\" : \"\"}.`, color: Global.Color.Tomato, style: \"bold\", sound: 2 });\r\n                    }\r\n                }\r\n            }, 0.5 * 60 * 1000);\r\n        }\r\n        room.addConfirmLevel(this.confirmationLevel);\r\n        room.on(\"playerNeedsConfirmation\", (player) => {\r\n            if (this.disabled) {\r\n                player.reply({ message: `👋 E aí, ${player.name}! Seja bem-vindo!`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                player.reply({ message: `👾 Discord: ${Global.discord}`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                player.roles.push(Global.notRegistered, Global.bypassRegisterRole);\r\n                player.addConfirmLevel(this.confirmationLevel);\r\n                return;\r\n            }\r\n            this.database.getPlayer(player.name).then(req => {\r\n                if (req.type === Database_1.ResponseType.Success) {\r\n                    if (req.message.admin || req.message.faadmin) {\r\n                        player.roles.push(Global.adminAccountRole);\r\n                    }\r\n                    if (req.message.auth === player.auth) {\r\n                        player.reply({ message: `👋 E aí, ${player.name}! Seja bem-vindo de volta à BFL!`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                        player.reply({ message: `👾 Discord: ${Global.discord}`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                        player.reply({ message: `✅ Você foi logado automaticamente!`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                        player.roles.push(Global.loggedRole);\r\n                    }\r\n                    else {\r\n                        player.reply({\r\n                            message: `Não foi possível verificar seu login. Você tem ${Utils_1.default.getFormattedSeconds(this.kickTime / 1000)} para se logar.\\nPor favor, digite sua senha abaixo (somente a senha, sem !).\\nEsqueceu sua senha? Entre no nosso Discord para alterá-la.\\nDiscord: ${Global.discord}`,\r\n                            color: Global.Color.Tomato,\r\n                            sound: 2,\r\n                            style: \"bold\"\r\n                        });\r\n                        player.canUseCommands = false;\r\n                        this.playersWaitingConfirmation.push({ player, password: req.message.password });\r\n                        setTimeout(() => {\r\n                            if (!player.isConfirmed()) {\r\n                                player?.kick(\"Não se logou a tempo!\");\r\n                            }\r\n                        }, this.kickTime);\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    player.reply({ message: `👋 E aí, ${player.name}! Seja bem-vindo!`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                    player.reply({ message: `👾 Discord: ${Global.discord}`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                }\r\n                if (req.type === Database_1.ResponseType.InternalError) {\r\n                    player.reply({ message: `❌ Um erro aconteceu ao conectar aos nossos servidores! Não pudemos confirmar seu registro.`, color: Global.Color.Tomato, style: \"bold\" });\r\n                    player.roles.push(Global.notRegistered);\r\n                }\r\n                else if (req.type === Database_1.ResponseType.Error) {\r\n                    player.reply({ message: `❌ Você não está registrado! Registre-se no nosso Discord${this.restrictNonRegisteredPlayers ? \" para poder jogar\" : \"\"}.`, color: Global.Color.Tomato, style: \"bold\" });\r\n                    player.roles.push(Global.notRegistered);\r\n                }\r\n                player.addConfirmLevel(this.confirmationLevel);\r\n            }).catch(err => {\r\n                console.error(err);\r\n                player.reply({ message: `❌ Um erro aconteceu ao conectar aos nossos servidores!`, color: Global.Color.Tomato, style: \"bold\" });\r\n                player.roles.push(Global.notRegistered);\r\n                player.addConfirmLevel(this.confirmationLevel);\r\n            });\r\n        });\r\n        room.on(\"playerLeave\", (player) => {\r\n            this.removeFromWaitingList(player);\r\n        });\r\n        room.on(\"playerChat\", (player, message) => {\r\n            const info = this.playersWaitingConfirmation.find(p => p.player.id === player.id);\r\n            if (!info)\r\n                return;\r\n            if (message !== info.password) {\r\n                player.reply({ message: `❌ Senha incorreta! Tente novamente.`, color: Global.Color.Tomato, sound: 2, style: \"bold\" });\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    this.removeFromWaitingList(player);\r\n                    for (const p of room.getPlayers()) {\r\n                        if (player.id === p.id)\r\n                            continue;\r\n                        p.reply({ message: `✅ ${player.name} se logou com sucesso!`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n                    }\r\n                    player.reply({ message: `✅ Você se logou com sucesso! Seja bem-vindo de volta, ${player.name}.`, color: Global.Color.LimeGreen, sound: 2, style: \"bold\" });\r\n                    player.roles.push(Global.loggedRole);\r\n                    player.addConfirmLevel(this.confirmationLevel);\r\n                    player.canUseCommands = true;\r\n                    if (player.auth)\r\n                        this.database.updateAuth(player.name, player.auth);\r\n                }, 0);\r\n            }\r\n            return false;\r\n        });\r\n        room.on(\"playerTeamChanged\", (changedPlayer, byPlayer) => {\r\n            if (changedPlayer.getTeam() === Global_1.Team.Spectators)\r\n                return;\r\n            if (!changedPlayer.isConfirmed()) {\r\n                if (byPlayer) {\r\n                    byPlayer.reply({ message: `⚠️ Você não pode mover ${changedPlayer.name} porque ele ainda não se logou!`, color: Global.Color.LimeGreen, style: \"bold\", sound: 2 });\r\n                }\r\n                changedPlayer.setTeam(Global_1.Team.Spectators);\r\n                return;\r\n            }\r\n            if (this.restrictNonRegisteredPlayers && !changedPlayer.roles.includes(Global.loggedRole)) {\r\n                room.send({ message: `⚠️ ${changedPlayer.name} não está registrado e não pode jogar! Registre-se em nosso !discord`, color: Global.Color.Tomato, style: \"bold\" });\r\n                changedPlayer.setTeam(Global_1.Team.Spectators);\r\n                return;\r\n            }\r\n        });\r\n        room.on(\"playerAdminChange\", (changedPlayer) => {\r\n            if (!changedPlayer.isConfirmed())\r\n                changedPlayer.setAdmin(false);\r\n        });\r\n    }\r\n    removeFromWaitingList(player) {\r\n        return this.playersWaitingConfirmation = this.playersWaitingConfirmation.filter(p => p.player.id !== player.id);\r\n    }\r\n    comoRegistarCommand($, room) {\r\n        $.caller.reply({ message: `🔐 Entre no nosso Discord para registrar-se: ${Global.discord}`, sound: 2, color: Global.Color.LimeGreen, style: \"bold\" });\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"comoregistrar\",\r\n        aliases: [\"comoregistra\"]\r\n    })\r\n], Register.prototype, \"comoRegistarCommand\", null);\r\nexports[\"default\"] = Register;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Register.ts?");

/***/ }),

/***/ "./src/modules/administration/Tutorial.ts":
/*!************************************************!*\
  !*** ./src/modules/administration/Tutorial.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../../Global */ \"./src/Global.ts\");\r\nclass Tutorial extends Module_1.default {\r\n    delay = 5 * 60 * 1000;\r\n    constructor(room) {\r\n        super();\r\n        setInterval(() => {\r\n            room.send({ message: `🎥 Veja nosso tutorial: https://www.youtube.com/watch?v=1p0xwPt5UVo`, sound: 1, color: Global_1.Color.LightGreen, style: \"bold\" });\r\n        }, this.delay);\r\n    }\r\n    tutorialCommand($, room) {\r\n        $.caller.reply({ message: `🎥 Tutorial - Futebol Americano: https://www.youtube.com/watch?v=1p0xwPt5UVo`, sound: 2, color: Global_1.Color.LightGreen, style: \"bold\" });\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"tutorial\"\r\n    })\r\n], Tutorial.prototype, \"tutorialCommand\", null);\r\nexports[\"default\"] = Tutorial;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Tutorial.ts?");

/***/ }),

/***/ "./src/modules/administration/Version.ts":
/*!***********************************************!*\
  !*** ./src/modules/administration/Version.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nconst Global_1 = __webpack_require__(/*! ../../Global */ \"./src/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nclass Version extends Module_1.default {\r\n    versaoCommand($, room) {\r\n        $.caller.reply({ message: `Versão: ${Global.version}`, sound: 2, color: Global_1.Color.LightGreen, style: \"bold\" });\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"versao\"\r\n    })\r\n], Version.prototype, \"versaoCommand\", null);\r\nexports[\"default\"] = Version;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/administration/Version.ts?");

/***/ }),

/***/ "./src/modules/modes/Down.ts":
/*!***********************************!*\
  !*** ./src/modules/modes/Down.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Down = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst LandPlay_1 = __webpack_require__(/*! ./LandPlay */ \"./src/modules/modes/LandPlay.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst Invasion_1 = __importDefault(__webpack_require__(/*! ./Invasion */ \"./src/modules/modes/Invasion.ts\"));\r\nconst Translate_1 = __importDefault(__webpack_require__(/*! ../../utils/Translate */ \"./src/utils/Translate.ts\"));\r\nclass Down extends LandPlay_1.LandPlay {\r\n    name = \"descida\";\r\n    mode = \"down\";\r\n    waitingHikeMode = \"waitingHike\";\r\n    ballInitialPoss;\r\n    trespassingPenalty = 10;\r\n    defenseTrespasserPenalty = 10;\r\n    holdingPenalty = -5;\r\n    qbPassedScrimmageLinePenalty = -5;\r\n    attackIllegalTouchPenalty = -5;\r\n    maxPenaltiesInRedZone = 3;\r\n    hikeMaxDistanceMoveBall = 8.5;\r\n    hikeTimeLimit = 15 * 1000;\r\n    distanceToHike = 50;\r\n    illegalTouchPenalty = 10;\r\n    firstDownDiscsIndex = [5, 6];\r\n    qbCarriedBallTime = 0;\r\n    minimumIntVelocity = 3;\r\n    maximumHighestDampingIntVelocity = 6;\r\n    timeIllegalTouchDisabledStartMs = 500;\r\n    qbScrimmageLineMaxPermitted = 8;\r\n    defenderBlockingBall;\r\n    sackBallTouched = false;\r\n    sack = false;\r\n    goalMode = false;\r\n    hikeTimeEnabled = true;\r\n    offensiveDistanceSpawnYardsHike = 10;\r\n    defensiveDistanceSpawnYardsHike = 10;\r\n    invasion;\r\n    downSetTime;\r\n    constructor(room, game) {\r\n        super(room, game);\r\n        this.invasion = new Invasion_1.default(room, game);\r\n        room.on(\"gameTick\", () => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            const hikeTimeStatus = this.game.getHikeTimeStatus();\r\n            const hikeTimeFormatted = this.game.getHikeTimeRemainingFormatted(hikeTimeStatus.time);\r\n            if (!this.game.interceptAttemptPlayer && this.game.quarterback) {\r\n                if (!this.game.playerWithBall && !this.game.qbKickedBall) {\r\n                    if (!this.qbCarriedBallTime && this.ballInitialPoss &&\r\n                        room.getBall().distanceTo({ ...this.ballInitialPoss, radius: room.getBall().getRadius() }) > 1) {\r\n                        this.qbCarriedBallTime = Date.now();\r\n                    }\r\n                    if (this.hasQBPassedScrimmageLine(room)) {\r\n                        if (!hikeTimeStatus.isOver) {\r\n                            this.game.matchStats.add(this.game.quarterback, { faltas: 1 });\r\n                            if (!this.game.conversion) {\r\n                                room.send({ message: (0, Translate_1.default)(\"QUARTERBACK_BLITZ\", hikeTimeFormatted), color: Global.Color.Orange, style: \"bold\" });\r\n                                this.set({ room, increment: this.qbPassedScrimmageLinePenalty });\r\n                            }\r\n                            else {\r\n                                room.send({ message: (0, Translate_1.default)(\"QUARTERBACK_BLITZ_CONVERSION\", hikeTimeFormatted), color: Global.Color.Orange, style: \"bold\" });\r\n                                this.game.resetToKickoff(room);\r\n                            }\r\n                            return;\r\n                        }\r\n                        else {\r\n                            this.game.setPlayerWithBall(room, this.game.quarterback, \"qbRunner\", true);\r\n                            room.send({ message: (0, Translate_1.default)(\"QUARTERBACK_RUN\", this.game.quarterback.name), color: Global.Color.DeepSkyBlue, style: \"bold\" });\r\n                            this.game.matchStats.add(this.game.quarterback, { corridasQb: 1 });\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (this.qbIsAttemptingRun(room)) {\r\n                        this.game.setPlayerWithBall(room, this.game.quarterback, \"qbRunner\", true);\r\n                        room.send({ message: (0, Translate_1.default)(\"QUARTERBACK_RUN\", this.game.quarterback.name), color: Global.Color.DeepSkyBlue, style: \"bold\" });\r\n                        this.game.matchStats.add(this.game.quarterback, { corridasQb: 1 });\r\n                        return;\r\n                    }\r\n                    const playerTouchingBall = this.getPlayerTouchingBall(room);\r\n                    if (playerTouchingBall) {\r\n                        this.playerTouchBallHike(room, playerTouchingBall);\r\n                        return;\r\n                    }\r\n                    if (this.hasQBBallPassedScrimmageLine(room)) {\r\n                        this.game.matchStats.add(this.game.quarterback, { faltas: 1 });\r\n                        if (!this.game.conversion) {\r\n                            room.send({ message: (0, Translate_1.default)(\"BALL_PASSED_SCRIMMAGE_LINE\"), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.set({ room });\r\n                        }\r\n                        else {\r\n                            room.send({ message: (0, Translate_1.default)(\"BALL_PASSED_SCRIMMAGE_LINE_CONVERSION\"), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.game.resetToKickoff(room);\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (this.isBallOutsideField(room)) {\r\n                        if (!this.game.conversion) {\r\n                            room.send({ message: (0, Translate_1.default)(\"BALL_OUTSIDE_FIELD\"), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.set({ room });\r\n                        }\r\n                        else {\r\n                            room.send({ message: (0, Translate_1.default)(\"BALL_OUTSIDE_FIELD_CONVERSION\"), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.game.resetToKickoff(room);\r\n                        }\r\n                        return;\r\n                    }\r\n                    const run = this.getRunningBackAttemptingRun(room);\r\n                    if (run) {\r\n                        if (run.valid) {\r\n                            room.send({ message: (0, Translate_1.default)(\"RUN\", run.player.name), color: Global.Color.DeepSkyBlue, style: \"bold\" });\r\n                            this.game.matchStats.add(run.player, { corridas: 1 });\r\n                            this.game.setPlayerWithBall(room, run.player, \"runner\", true);\r\n                            return;\r\n                        }\r\n                        else {\r\n                            this.game.matchStats.add(run.player, { faltas: 1 });\r\n                            if (!this.game.conversion) {\r\n                                room.send({ message: (0, Translate_1.default)(\"ILLEGAL_RUN_HIKE\", run.player.name), color: Global.Color.Orange, style: \"bold\" });\r\n                                this.set({ room });\r\n                            }\r\n                            else {\r\n                                room.send({ message: (0, Translate_1.default)(\"ILLEGAL_RUN_CONVERSION\", run.player.name), color: Global.Color.Orange, style: \"bold\" });\r\n                                this.game.resetToKickoff(room);\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                    const holdingPlayers = this.getHoldingPlayers(room);\r\n                    if (holdingPlayers) {\r\n                        holdingPlayers.forEach(p => {\r\n                            this.game.matchStats.add(p, { faltas: 1 });\r\n                            this.game.customAvatarManager.setPlayerAvatar(p, \"🤡\", 3000);\r\n                        });\r\n                        if (!this.game.conversion) {\r\n                            room.send({ message: (0, Translate_1.default)(\"HOLDING\", Utils_1.default.getPlayersNames(holdingPlayers), Math.abs(this.holdingPenalty)), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.set({ room, increment: this.holdingPenalty });\r\n                        }\r\n                        else {\r\n                            room.send({ message: (0, Translate_1.default)(\"HOLDING_CONVERSION\", Utils_1.default.getPlayersNames(holdingPlayers)), color: Global.Color.Orange, style: \"bold\" });\r\n                            this.game.resetToKickoff(room);\r\n                        }\r\n                        return;\r\n                    }\r\n                    const trespassingDefender = this.getDefensePlayersTrespassing(room);\r\n                    if (trespassingDefender) {\r\n                        if (!hikeTimeStatus.isOver) {\r\n                            let penalty = this.defenseTrespasserPenalty;\r\n                            if (StadiumUtils_1.default.isInRedZone(this.game.ballPosition, this.game.invertTeam(this.game.teamWithBall))) {\r\n                                this.game.redZonePenalties++;\r\n                                if (this.game.redZonePenalties >= this.maxPenaltiesInRedZone) {\r\n                                    this.setRedZoneTouchdown(room, this.game.teamWithBall, this.game.invasionPlayers, (0, Translate_1.default)(\"AUTO_TOUCHDOWN_BLITZ\", trespassingDefender.name, hikeTimeFormatted));\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    penalty = this.game.getPenaltyValueInRedZone(this.trespassingPenalty);\r\n                                    room.send({ message: (0, Translate_1.default)(\"REDZONE_BLITZ\", trespassingDefender.name, hikeTimeFormatted, this.game.redZonePenalties, this.maxPenaltiesInRedZone, penalty), color: Global.Color.Orange, style: \"bold\" });\r\n                                }\r\n                            }\r\n                            else {\r\n                                room.send({ message: (0, Translate_1.default)(\"BLITZ\", trespassingDefender.name, hikeTimeFormatted, penalty), color: Global.Color.Orange, style: \"bold\" });\r\n                            }\r\n                            this.game.adjustGameTimeAfterDefensivePenalty(room);\r\n                            this.game.matchStats.add(trespassingDefender, { faltas: 1 });\r\n                            this.set({ room, increment: penalty, countDown: false });\r\n                            return;\r\n                        }\r\n                        else {\r\n                            this.game.setPlayerWithBall(room, this.game.quarterback, \"qbRunnerSacking\", true);\r\n                            this.sack = true;\r\n                            room.send({ message: (0, Translate_1.default)(\"SACK_ATTEMPT\", trespassingDefender.name, this.game.quarterback.name), color: Global.Color.DeepSkyBlue, style: \"bold\" });\r\n                        }\r\n                    }\r\n                    if (!hikeTimeStatus.isOver) {\r\n                        const invasion = this.invasion.handle(room);\r\n                        if (invasion)\r\n                            return;\r\n                    }\r\n                }\r\n                else if (this.game.qbKickedBall) {\r\n                    if (!this.game.playerWithBall || this.sack && !this.sackBallTouched) {\r\n                        if (this.sack && StadiumUtils_1.default.isOutOfMap(room.getBall().getPosition())) {\r\n                            this.sackBallTouched = true;\r\n                            return;\r\n                        }\r\n                        const wideReceiverCatchingBall = this.getWideReceiverCatchingBall(room);\r\n                        if (wideReceiverCatchingBall &&\r\n                            !this.game.blockedPass &&\r\n                            !this.game.intercept &&\r\n                            !this.game.interceptAttemptPlayer\r\n                            && !((wideReceiverCatchingBall.id === this.game.quarterback.id) && this.sack)) {\r\n                            this.qbPassedInSack();\r\n                            this.setReceiver(room, wideReceiverCatchingBall);\r\n                            return;\r\n                        }\r\n                        const defenderCatchingBall = this.getDefenderBlockingBall(room);\r\n                        if (defenderCatchingBall && !this.game.blockedPass) {\r\n                            this.defenderBlockingBall = defenderCatchingBall;\r\n                            this.game.blockedPass = true;\r\n                            setTimeout(() => {\r\n                                if ((!this.game.interceptAttemptPlayer && !this.game.intercept && this.game.mode === this.mode) &&\r\n                                    (this.sack ? !this.sackBallTouched : true)) {\r\n                                    if (this.sack) {\r\n                                        this.sackBallTouched = true;\r\n                                    }\r\n                                    else {\r\n                                        this.game.blockPass(room, defenderCatchingBall);\r\n                                    }\r\n                                }\r\n                            }, 100);\r\n                            return;\r\n                        }\r\n                        if (this.defenderBlockingBall &&\r\n                            !this.game.interceptAttemptPlayer && !this.game.intercept &&\r\n                            this.defenderBlockingBall.distanceTo(room.getBall()) > 5) {\r\n                            if (this.sack) {\r\n                                this.sackBallTouched = true;\r\n                            }\r\n                            else {\r\n                                this.game.blockPass(room, this.defenderBlockingBall);\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.game.interceptAttemptPlayer) {\r\n                if (this.checkInterceptionFailed(room)) {\r\n                    this.game.setBallDamping(room, Global.BallDamping.Default);\r\n                    if (!this.sack) {\r\n                        room.send({ message: (0, Translate_1.default)(\"INTERCEPTION_FAILED\", this.game.interceptAttemptPlayer.name, this.game.interceptAttemptPlayer.name), color: Global.Color.Orange, style: \"bold\" });\r\n                        this.game.blockPass(room, this.game.interceptAttemptPlayer, false);\r\n                        this.game.interceptAttemptPlayer = null;\r\n                    }\r\n                    else {\r\n                        room.send({ message: (0, Translate_1.default)(\"INTERCEPTION_FAILED_SACK\", this.game.interceptAttemptPlayer.name, this.game.interceptAttemptPlayer.name), color: Global.Color.Orange, style: \"bold\" });\r\n                        this.sackBallTouched = true;\r\n                        this.game.interceptAttemptPlayer = null;\r\n                    }\r\n                }\r\n                else {\r\n                    const ball = room.getBall();\r\n                    if (ball.getDamping() === Global.BallDamping.Highest && ball.getVelocity() > this.maximumHighestDampingIntVelocity) {\r\n                        this.game.setBallDamping(room, Global.BallDamping.High);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        room.on(\"playerChat\", (player, message) => {\r\n            if (message === \"hike\" && this.game.mode === this.waitingHikeMode) {\r\n                this.setHike(player, room);\r\n            }\r\n        });\r\n        room.on(\"playerBallKick\", (player) => {\r\n            if (this.game.interceptAttemptPlayer || this.game.intercept)\r\n                return;\r\n            if (this.game.mode === this.waitingHikeMode && !this.game.qbKickedBall && player.getTeam() !== this.game.teamWithBall && Date.now() > this.downSetTime + this.timeIllegalTouchDisabledStartMs) {\r\n                this.playerTouchBallHike(room, player);\r\n                return;\r\n            }\r\n            else if (this.game.mode !== this.mode) {\r\n                return;\r\n            }\r\n            if (!this.game.qbKickedBall) {\r\n                if (player.id === this.game.quarterback?.id) {\r\n                    this.game.qbKickedBall = true;\r\n                    this.game.matchStats.add(this.game.quarterback, { passesTentados: 1 });\r\n                }\r\n                else {\r\n                    this.playerTouchBallHike(room, player);\r\n                }\r\n            }\r\n            else if (!this.game.playerWithBall ||\r\n                (this.sack && !this.sackBallTouched && (player.id !== this.game.quarterback.id))) {\r\n                if (player.getTeam() !== this.game.teamWithBall) {\r\n                    if (!this.game.interceptAttemptPlayer) {\r\n                        this.handleInterception(room, player);\r\n                    }\r\n                    else {\r\n                        if (this.sack) {\r\n                            this.sackBallTouched = true;\r\n                        }\r\n                        else {\r\n                            this.game.blockPass(room, player);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.sack)\r\n                        this.qbPassedInSack();\r\n                    this.setReceiver(room, player);\r\n                }\r\n            }\r\n        });\r\n        room.on(\"gamePause\", (byPlayer) => {\r\n            if (this.game.mode === this.waitingHikeMode && this.game.hikeTimeout && room.isGameInProgress()) {\r\n                this.game.hikeTimeout?.pause();\r\n                if (byPlayer)\r\n                    room.send({ message: (0, Translate_1.default)(\"GAME_PAUSED\"), color: Global.Color.Pink, style: \"bold\" });\r\n            }\r\n        });\r\n        room.on(\"gameUnpause\", (byPlayer) => {\r\n            if (this.game.mode === this.waitingHikeMode && this.game.hikeTimeout && room.isGameInProgress()) {\r\n                if (byPlayer)\r\n                    room.send({ message: (0, Translate_1.default)(\"GAME_RESUMED\", byPlayer.name), color: Global.Color.Pink, style: \"bold\" });\r\n            }\r\n        });\r\n        room.on(\"gameStartTicking\", () => {\r\n            if (this.game.mode === this.waitingHikeMode && this.game.hikeTimeout && room.isGameInProgress()) {\r\n                this.game.hikeTimeout?.resume();\r\n            }\r\n        });\r\n    }\r\n    setHike(player, room) {\r\n        if (player.getTeam() !== this.game.teamWithBall)\r\n            return;\r\n        if (room.isGamePaused())\r\n            return;\r\n        if (!room.isGameInProgress())\r\n            return;\r\n        if (player.distanceTo(room.getBall()) > this.distanceToHike)\r\n            return;\r\n        const hikingTeam = this.game.teamWithBall === Global_1.Team.Red ? room.getPlayers().red() : room.getPlayers().blue();\r\n        const ballXPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition).x;\r\n        if (this.game.teamWithBall === Global_1.Team.Red ? player.getX() > ballXPos : player.getX() < ballXPos) {\r\n            setTimeout(() => {\r\n                if (this.game.conversion) {\r\n                    this.game.extraPoint.set({ room, forTeam: this.game.teamWithBall, silent: true });\r\n                }\r\n            }, 0);\r\n            return;\r\n        }\r\n        const invaders = hikingTeam.filter(p => this.game.teamWithBall === Global_1.Team.Red ? p.getX() > ballXPos : p.getX() < ballXPos);\r\n        if (invaders.length > 0) {\r\n            setTimeout(() => {\r\n                room.send({ message: (0, Translate_1.default)(\"HIKE_BLOCKED_OFFENSIVE_BLITZ\", this.game.getTeamName(this.game.teamWithBall), Utils_1.default.getPlayersNames(invaders)), sound: 1, color: Global.Color.Tomato, style: \"bold\" });\r\n                if (this.game.conversion) {\r\n                    this.game.extraPoint.set({ room, forTeam: this.game.teamWithBall, silent: true });\r\n                }\r\n                invaders.forEach(p => {\r\n                    p.reply({ message: (0, Translate_1.default)(\"HIKE_BLOCKED_OFFENSIVE_BLITZ_PLAYER_WARNING\"), sound: 2, color: Global.Color.Red, style: \"bold\" });\r\n                });\r\n            }, 0);\r\n            return;\r\n        }\r\n        this.game.quarterback = player;\r\n        this.game.mode = this.mode;\r\n        this.game.unlockBall(room);\r\n        this.game.setBallMoveable(room);\r\n        this.game.hikeTime = Date.now();\r\n        this.game.clearHikeTime();\r\n        return setTimeout(() => {\r\n            room.send({ message: (0, Translate_1.default)(\"HIKED\"), color: 0x4efca2, style: \"bold\" });\r\n            this.game.extraPointTimeout?.stop();\r\n            this.game.extraPointTimeout = null;\r\n        }, 0);\r\n    }\r\n    set({ room, pos, forTeam = this.game.teamWithBall, increment, countDown = true, countDistanceFromNewPos = true }) {\r\n        const beforeModeWasHike = this.game.mode === this.mode;\r\n        const isConversion = this.game.conversion;\r\n        if (this.game.conversion) {\r\n            countDown = false;\r\n            countDistanceFromNewPos = false;\r\n        }\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        if (isConversion)\r\n            this.game.conversion = true;\r\n        if (countDistanceFromNewPos && pos && !this.game.conversion) {\r\n            const diff = StadiumUtils_1.default.getDifferenceBetweenFieldPositions(this.game.ballPosition, pos, this.game.teamWithBall);\r\n            this.game.distance += diff;\r\n        }\r\n        if (!pos)\r\n            pos = this.game.ballPosition;\r\n        this.game.ballPosition = pos;\r\n        let won20Yards = false;\r\n        if (increment != null) {\r\n            this.game.ballPosition = StadiumUtils_1.default.addYardsToFieldPosition(this.game.ballPosition, increment, this.game.teamWithBall);\r\n            this.game.distance -= increment;\r\n        }\r\n        if (StadiumUtils_1.default.isInRedZone(this.game.ballPosition, this.game.invertTeam(forTeam))) {\r\n            this.game.inRedZone = true;\r\n        }\r\n        else {\r\n            this.game.inRedZone = false;\r\n            this.goalMode = false;\r\n        }\r\n        if ((this.game.distance <= 0 && !this.goalMode)) {\r\n            this.game.distance = 20;\r\n            this.game.downCount = 0;\r\n            won20Yards = beforeModeWasHike;\r\n        }\r\n        const hikeTimeMessage = (team) => {\r\n            if (!this.hikeTimeEnabled) {\r\n                return (0, Translate_1.default)(\"HIKE_DISABLED\");\r\n            }\r\n            return (0, Translate_1.default)(\"HIKE_TIME\", this.game.getTeamName(team), Utils_1.default.getFormattedSeconds((this.game.conversion ? this.game.extraPoint.epTimeLimit : this.hikeTimeLimit) / 1000));\r\n        };\r\n        if (this.game.conversion) {\r\n            this.game.downCount = 4;\r\n            this.game.distance = 10;\r\n            this.goalMode = true;\r\n            room.send({ message: (0, Translate_1.default)(\"CONVERSION_ATTEMPT\", this.game.getTeamName(forTeam)) + \" \" + hikeTimeMessage(forTeam), color: Global.Color.LightGreen, style: \"bold\" });\r\n        }\r\n        else if (this.game.downCount === 0) {\r\n            this.game.downCount = 1;\r\n            if (this.game.inRedZone) {\r\n                this.goalMode = true;\r\n            }\r\n            room.send({ message: `${this.getDownEmoji(this.game.downCount)} ${this.game.getStateOfMatch()} ${won20Yards ? (0, Translate_1.default)(\"WON_20_YARDS\") : \"\"} ${(0, Translate_1.default)(\"FIRST_DOWN\", this.game.getTeamName(forTeam))} ${hikeTimeMessage(forTeam)}`, color: Global.Color.LightGreen, style: \"bold\" });\r\n        }\r\n        else if (this.game.downCount === 4 && countDown) {\r\n            const otherTeam = this.game.invertTeam(forTeam);\r\n            this.game.downCount = 1;\r\n            this.game.distance = 20;\r\n            this.goalMode = false;\r\n            room.send({ message: `${this.getDownEmoji(this.game.downCount)} ${this.game.getStateOfMatch()} ${(0, Translate_1.default)(\"TURNOVER_ON_DOWNS\", this.game.getTeamName(forTeam))} ${(0, Translate_1.default)(\"FIRST_DOWN\", this.game.getTeamName(otherTeam))} ${hikeTimeMessage(otherTeam)}`, color: Global.Color.LightGreen, style: \"bold\" });\r\n            forTeam = otherTeam;\r\n        }\r\n        else {\r\n            if (countDown)\r\n                this.game.downCount++;\r\n            room.send({ message: `${this.getDownEmoji(this.game.downCount)} ${this.game.getStateOfMatch()} ${(0, Translate_1.default)(\"NTH_DOWN\", this.game.downCount)} ${hikeTimeMessage(forTeam)}`, color: Global.Color.LightGreen, style: \"bold\" });\r\n        }\r\n        this.game.teamWithBall = forTeam;\r\n        this.setBallForHike(room, forTeam);\r\n        this.resetPlayersPosition(room);\r\n        this.game.mode = this.waitingHikeMode;\r\n        this.handleFirstDownLine(room);\r\n        this.setBallLine(room);\r\n        this.downSetTime = Date.now();\r\n        if (!room.isGamePaused() && this.hikeTimeEnabled) {\r\n            this.game.hikeTimeout = new Timer_1.default(() => {\r\n                if (!this.game.conversion) {\r\n                    room.send({ message: (0, Translate_1.default)(\"TOOK_TO_LONG_TO_HIKE\"), color: Global.Color.Orange, style: \"bold\" });\r\n                    this.set({ room });\r\n                }\r\n                else {\r\n                    room.send({ message: (0, Translate_1.default)(\"TOOK_TO_LONG_TO_KICK_CONVERSION\"), color: Global.Color.Orange, style: \"bold\" });\r\n                    this.game.resetToKickoff(room, forTeam);\r\n                }\r\n            }, this.game.conversion ? this.game.extraPoint.epTimeLimit : this.hikeTimeLimit);\r\n        }\r\n    }\r\n    reset() {\r\n        this.qbCarriedBallTime = 0;\r\n        this.ballInitialPoss = null;\r\n        this.sack = null;\r\n        this.sackBallTouched = false;\r\n        this.downSetTime = null;\r\n        this.invasion.clear();\r\n    }\r\n    setBallPositionForHike(ball, forTeam) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        ballPos.x = ballPos.x + ((MapMeasures_1.default.Yard * this.game.yardsBallBehind) * (forTeam === Global_1.Team.Red ? -1 : 1));\r\n        ball.setPosition(ballPos);\r\n        this.ballInitialPoss = ballPos;\r\n    }\r\n    setBallForHike(room, forTeam) {\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        this.game.lockBall(room);\r\n        this.game.setBallUnmoveable(room);\r\n        this.setBallPositionForHike(ball, forTeam);\r\n    }\r\n    setFirstDownLine(room, pos = StadiumUtils_1.default.addYardsToFieldPosition(this.game.ballPosition, this.game.distance, this.game.teamWithBall)) {\r\n        const x = StadiumUtils_1.default.getCoordinateFromYards(pos.team, pos.yards).x;\r\n        const d1 = room.getDisc(this.firstDownDiscsIndex[0]);\r\n        const d2 = room.getDisc(this.firstDownDiscsIndex[1]);\r\n        if (!d1 || !d2)\r\n            return;\r\n        d1.setPosition({ x, y: MapMeasures_1.default.OuterField[0].y });\r\n        d2.setPosition({ x, y: MapMeasures_1.default.OuterField[1].y });\r\n    }\r\n    resetFirstDownLine(room) {\r\n        const d1 = room.getDisc(this.firstDownDiscsIndex[0]);\r\n        const d2 = room.getDisc(this.firstDownDiscsIndex[1]);\r\n        if (!d1 || !d2)\r\n            return;\r\n        d1.setPosition({ x: 0, y: 0 });\r\n        d2.setPosition({ x: 0, y: 0 });\r\n    }\r\n    qbPassedInSack() {\r\n        if (this.game.playerWithBall?.id === this.game.quarterback.id && this.sack) {\r\n            this.sack = false;\r\n        }\r\n    }\r\n    setReceiver(room, player) {\r\n        this.game.setPlayerWithBall(room, player, \"receiver\", false);\r\n        this.game.matchStats.add(player, { recepcoes: 1 });\r\n        this.game.matchStats.add(this.game.quarterback, { passesCompletos: 1 });\r\n        room.send({ message: (0, Translate_1.default)(\"BALL_RECEIVED\", player.name), color: Global.Color.Yellow, style: \"bold\" });\r\n    }\r\n    resetPlayersPosition(room) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const offensiveTeam = this.game.getTeamWithBall(room);\r\n        const defensiveTeam = this.game.getTeamWithoutBall(room);\r\n        const getSinal = (player) => player.getTeam() === Global_1.Team.Red ? -1 : 1;\r\n        for (const player of offensiveTeam) {\r\n            player.setX(ballPos.x + (MapMeasures_1.default.Yard * this.offensiveDistanceSpawnYardsHike * getSinal(player)));\r\n        }\r\n        for (const player of defensiveTeam) {\r\n            player.setX(ballPos.x + (MapMeasures_1.default.Yard * this.defensiveDistanceSpawnYardsHike * getSinal(player)));\r\n        }\r\n    }\r\n    handleFirstDownLine(room) {\r\n        if (this.isFirstDownLineInsideEndZone() || this.goalMode) {\r\n            this.resetFirstDownLine(room);\r\n        }\r\n        else {\r\n            this.setFirstDownLine(room);\r\n        }\r\n    }\r\n    isFirstDownLineInsideEndZone() {\r\n        const firstDownLinePos = StadiumUtils_1.default.addYardsToFieldPosition(this.game.ballPosition, this.game.distance, this.game.teamWithBall, true);\r\n        if (firstDownLinePos.yards < 1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    getDownEmoji(down) {\r\n        let emoji = \"\";\r\n        switch (down) {\r\n            case 0 | 1:\r\n                emoji = \"1️⃣\";\r\n                break;\r\n            case 2:\r\n                emoji = \"2️⃣\";\r\n                break;\r\n            case 3:\r\n                emoji = \"3️⃣\";\r\n                break;\r\n            case 4:\r\n                emoji = \"4️⃣\";\r\n                break;\r\n            default:\r\n                emoji = \"*️⃣\";\r\n                break;\r\n        }\r\n        return emoji;\r\n    }\r\n    playerTouchBallHike(room, player) {\r\n        if (this.game.playerWithBall)\r\n            return;\r\n        const hikeTimeStatus = this.game.getHikeTimeStatus();\r\n        const isWaitingHike = this.game.mode === this.waitingHikeMode;\r\n        if (player.getTeam() !== this.game.teamWithBall) {\r\n            if (isWaitingHike || !hikeTimeStatus.isOver) {\r\n                const formattedTime = this.game.getHikeTimeRemainingFormatted(hikeTimeStatus.time);\r\n                let penalty = this.illegalTouchPenalty;\r\n                if (StadiumUtils_1.default.isInRedZone(this.game.ballPosition, this.game.invertTeam(this.game.teamWithBall))) {\r\n                    this.game.redZonePenalties++;\r\n                    if (this.game.redZonePenalties >= this.maxPenaltiesInRedZone) {\r\n                        const message = isWaitingHike ?\r\n                            (0, Translate_1.default)(\"ILLEGAL_TOUCH_OF\", player.name) :\r\n                            (0, Translate_1.default)(\"ILLEGAL_TOUCH_OF_AT\", player.name, formattedTime);\r\n                        this.setRedZoneTouchdown(room, this.game.teamWithBall, [player], message);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        penalty = this.game.getPenaltyValueInRedZone(this.illegalTouchPenalty);\r\n                        const message = isWaitingHike ?\r\n                            (0, Translate_1.default)(\"ILLEGAL_TOUCH_REDZONE_OF_PENALTY\", player.name, this.game.redZonePenalties, this.maxPenaltiesInRedZone, penalty) :\r\n                            (0, Translate_1.default)(\"ILLEGAL_TOUCH_REDZONE_OF_AT_PENALTY\", player.name, formattedTime, this.game.redZonePenalties, this.maxPenaltiesInRedZone, penalty);\r\n                        room.send({ message, color: Global.Color.Orange, style: \"bold\" });\r\n                    }\r\n                }\r\n                else {\r\n                    const message = isWaitingHike ?\r\n                        (0, Translate_1.default)(\"ILLEGAL_TOUCH_OF_PENALTY\", player.name, penalty) :\r\n                        (0, Translate_1.default)(\"ILLEGAL_TOUCH_OF_AT_PENALTY\", player.name, formattedTime, penalty);\r\n                    room.send({ message, color: Global.Color.Orange, style: \"bold\" });\r\n                }\r\n                if (!isWaitingHike)\r\n                    this.game.matchStats.add(player, { faltas: 1 });\r\n                this.game.adjustGameTimeAfterDefensivePenalty(room);\r\n                this.set({ room, increment: penalty, countDown: false });\r\n            }\r\n            else {\r\n                this.game.setPlayerWithBall(room, this.game.quarterback, \"qbRunnerSacking\", true);\r\n                this.sack = true;\r\n                room.send({ message: (0, Translate_1.default)(\"SACK_ATTEMPT\", player.name, this.game.quarterback.name), color: Global.Color.DeepSkyBlue, style: \"bold\" });\r\n            }\r\n        }\r\n        else {\r\n            room.send({ message: (0, Translate_1.default)(\"ILLEGAL_TOUCH_OF\", player.name), color: Global.Color.Orange, style: \"bold\" });\r\n            this.game.matchStats.add(player, { faltas: 1 });\r\n            if (!this.game.conversion) {\r\n                this.set({ room, increment: this.attackIllegalTouchPenalty });\r\n            }\r\n            else {\r\n                this.game.resetToKickoff(room);\r\n            }\r\n        }\r\n    }\r\n    handleInterception(room, player) {\r\n        this.game.interceptAttemptPlayer = player;\r\n        this.game.lockBall(room);\r\n        const ballPos = room.getBall().getPosition();\r\n        const ballSpeedX = room.getBall().getVelocityX();\r\n        this.game.interceptionTimeout = new Timer_1.default(() => {\r\n            const ballPath = MathUtils_1.default.getBallPathFromPosition(ballPos, room.getBall().getPosition(), 2000);\r\n            const multiplierRed = player.getTeam() === Global_1.Team.Red ? 1.3 : 1.1;\r\n            const multiplierBlue = player.getTeam() === Global_1.Team.Blue ? 1.3 : 1.1;\r\n            let pointOfIntersection;\r\n            if (ballSpeedX < 0) {\r\n                pointOfIntersection = MathUtils_1.default.getPointOfIntersection(ballPath[0].x, ballPath[0].y, ballPath[1].x, ballPath[1].y, MapMeasures_1.default.RedGoalLine[0].x, MapMeasures_1.default.RedGoalLine[0].y * multiplierRed, MapMeasures_1.default.RedGoalLine[1].x, MapMeasures_1.default.RedGoalLine[1].y * multiplierRed);\r\n            }\r\n            else {\r\n                pointOfIntersection = MathUtils_1.default.getPointOfIntersection(ballPath[0].x, ballPath[0].y, ballPath[1].x, ballPath[1].y, MapMeasures_1.default.BlueGoalLine[0].x, MapMeasures_1.default.BlueGoalLine[0].y * multiplierBlue, MapMeasures_1.default.BlueGoalLine[1].x, MapMeasures_1.default.BlueGoalLine[1].y * multiplierBlue);\r\n            }\r\n            if (!this.game.playerWithBall || (this.sack && !this.sackBallTouched)) {\r\n                try {\r\n                    if (pointOfIntersection === false)\r\n                        throw \"Missed interception\";\r\n                    room.send({ message: (0, Translate_1.default)(\"INTERCEPTION_ATTEMPT_DETECTED\", player.name), color: Global.Color.Yellow, style: \"bold\" });\r\n                    if (room.getBall().getVelocity() < this.minimumIntVelocity) {\r\n                        this.game.setBallDamping(room, Global.BallDamping.Highest);\r\n                    }\r\n                    else {\r\n                        this.game.setBallDamping(room, Global.BallDamping.High);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    this.game.interceptAttemptPlayer = null;\r\n                    if (!this.sack) {\r\n                        this.game.blockPass(room, player);\r\n                    }\r\n                    else {\r\n                        this.sackBallTouched = true;\r\n                    }\r\n                }\r\n            }\r\n        }, 0);\r\n    }\r\n    isBallOutsideField(room) {\r\n        return StadiumUtils_1.default.isOutOfMap(room.getBall().getPosition(), room.getBall().getRadius() * 2);\r\n    }\r\n    hasQBBallPassedScrimmageLine(room) {\r\n        if (!this.game.quarterback)\r\n            return false;\r\n        const ballLinePos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition);\r\n        const ballPos = room.getBall().getPosition();\r\n        return ((this.game.quarterback.getTeam() === Global_1.Team.Red && ballPos.x > ballLinePos.x) ||\r\n            (this.game.quarterback.getTeam() === Global_1.Team.Blue && ballPos.x < ballLinePos.x));\r\n    }\r\n    hasQBPassedScrimmageLine(room) {\r\n        if (!this.game.quarterback)\r\n            return false;\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition);\r\n        return ((this.game.quarterback.getTeam() === Global_1.Team.Red && this.game.quarterback.getX() > ballPos.x) ||\r\n            (this.game.quarterback.getTeam() === Global_1.Team.Blue && this.game.quarterback.getX() < ballPos.x));\r\n    }\r\n    qbIsAttemptingRun(room) {\r\n        const isHikeTimeOver = this.game.getHikeTimeStatus().isOver;\r\n        return !this.game.qbKickedBall && isHikeTimeOver && this.game.quarterback.distanceTo(room.getBall()) > 100;\r\n    }\r\n    isQBCarryingBall(room) {\r\n        const ball = room.getBall();\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        return this.game.quarterback &&\r\n            (this.game.quarterback.distanceTo(ball) > 5 &&\r\n                (Math.abs(ball.getX() - ballPos.x) > 2 || Math.abs(ball.getY() - ballPos.y) > 2))\r\n            ||\r\n                (ball.distanceTo({ ...ballPos, radius: ball.getRadius() }) > this.hikeMaxDistanceMoveBall);\r\n    }\r\n    checkInterceptionFailed(room) {\r\n        if (MathUtils_1.default.getBallSpeed(room.getBall()) < 0.1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getHoldingPlayers(room) {\r\n        const isHikeTimeOver = this.game.getHikeTimeStatus().isOver;\r\n        if (this.game.playerWithBall || isHikeTimeOver || this.game.qbKickedBall)\r\n            return;\r\n        for (const player of this.game.getTeamWithoutBall(room)) {\r\n            let ballLinePos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition).x;\r\n            if ((this.game.teamWithBall === Global_1.Team.Red && player.getX() > ballLinePos) ||\r\n                (this.game.teamWithBall === Global_1.Team.Blue && player.getX() < ballLinePos))\r\n                continue;\r\n            const minimumVelocity = 0;\r\n            const holdingPlayers = this.game.getTeamWithBall(room).filter(attacker => attacker.id !== this.game.quarterback.id &&\r\n                attacker.distanceTo(player) < 1.5 &&\r\n                (player.getTeam() === Global_1.Team.Blue ? player.getVelocityX() < 0 : player.getVelocityX() > 0) &&\r\n                (attacker.getTeam() === Global_1.Team.Red && attacker.getX() > player.getX() && attacker.getVelocityX() < -minimumVelocity ||\r\n                    attacker.getTeam() === Global_1.Team.Blue && attacker.getX() < player.getX() && attacker.getVelocityX() > minimumVelocity));\r\n            return holdingPlayers.length > 0 ? holdingPlayers : undefined;\r\n        }\r\n    }\r\n    getDefensePlayersTrespassing(room) {\r\n        const isHikeTimeOver = this.game.getHikeTimeStatus().isOver;\r\n        for (const player of this.game.getTeamWithoutBall(room)) {\r\n            if (!this.game.qbKickedBall) {\r\n                let ballLinePos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition).x;\r\n                if (((this.game.teamWithBall === Global_1.Team.Red && player.getX() < ballLinePos) ||\r\n                    (this.game.teamWithBall === Global_1.Team.Blue && player.getX() > ballLinePos))\r\n                    && (!this.game.playerWithBall || !isHikeTimeOver)) {\r\n                    return player;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getPlayerTouchingBall(room) {\r\n        for (const player of room.getPlayers().teams()) {\r\n            if (player.id === this.game.quarterback.id)\r\n                continue;\r\n            if (player.distanceTo(room.getBall()) < 0.5)\r\n                return player;\r\n        }\r\n    }\r\n    getRunningBackAttemptingRun(room) {\r\n        for (const player of this.game.getTeamWithBall(room)) {\r\n            if (player.id === this.game.quarterback.id)\r\n                continue;\r\n            if (player.distanceTo(this.game.quarterback) <= 0.1) {\r\n                return { valid: true, player };\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    getWideReceiverCatchingBall(room) {\r\n        if (this.game.qbKickedBall) {\r\n            for (const player of this.game.getTeamWithBall(room)) {\r\n                if (player.id === this.game.quarterback.id)\r\n                    continue;\r\n                if (player.distanceTo(room.getBall()) < 0.5) {\r\n                    return player;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getDefenderBlockingBall(room) {\r\n        for (const player of this.game.getTeamWithoutBall(room)) {\r\n            if (player.distanceTo(room.getBall()) < 0.2) {\r\n                return player;\r\n            }\r\n        }\r\n    }\r\n    resetHikeTimeCommand($, room) {\r\n        if (!$.caller.isAdmin()) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"NOT_ADMIN\"), sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"GAME_NOT_IN_PROGRESS\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.waitingHikeMode) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"CANNOT_USE_COMMAND_IN_PLAY\"), sound: 2, color: Global.Color.Orange, style: \"bold\" });\r\n            return false;\r\n        }\r\n        const arg = $.args[0];\r\n        if (arg === \"disable\") {\r\n            this.hikeTimeEnabled = false;\r\n            this.game.clearHikeTime();\r\n            room.send({ message: (0, Translate_1.default)(\"COMMAND_CHT_DISABLE_ALL\", $.caller.name), color: Global.Color.Pink, style: \"bold\" });\r\n        }\r\n        else if (arg === \"enable\") {\r\n            this.hikeTimeEnabled = true;\r\n            room.send({ message: (0, Translate_1.default)(\"COMMAND_CHT_ENABLE\", $.caller.name), color: Global.Color.Pink, style: \"bold\" });\r\n        }\r\n        else {\r\n            this.game.clearHikeTime();\r\n            room.send({ message: (0, Translate_1.default)(\"COMMAND_CHT_DISABLE_THIS\", $.caller.name), color: Global.Color.Pink, style: \"bold\" });\r\n        }\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"clearhiketime\",\r\n        aliases: [\"cht\"]\r\n    })\r\n], Down.prototype, \"resetHikeTimeCommand\", null);\r\nexports.Down = Down;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Down.ts?");

/***/ }),

/***/ "./src/modules/modes/DownPlay.ts":
/*!***************************************!*\
  !*** ./src/modules/modes/DownPlay.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DownPlay = void 0;\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nclass DownPlay extends Module_1.default {\r\n    game;\r\n    constructor(game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n}\r\nexports.DownPlay = DownPlay;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/DownPlay.ts?");

/***/ }),

/***/ "./src/modules/modes/ExtraPoint.ts":
/*!*****************************************!*\
  !*** ./src/modules/modes/ExtraPoint.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExtraPoint = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Mode_1 = __webpack_require__(/*! ./Mode */ \"./src/modules/modes/Mode.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nclass ExtraPoint extends Mode_1.Mode {\r\n    name = \"extra point\";\r\n    mode = \"extraPoint\";\r\n    epPoints = 1;\r\n    conversionPoints = 2;\r\n    intConversionPoints = 2;\r\n    epTimeLimit = 8 * 1000;\r\n    playerLineLengthExtraPointKickingTeam = 100;\r\n    playerLineLengthExtraPointOtherTeam = 100;\r\n    playerBackDistanceExtraPoint = 100;\r\n    maxTimeEPMoveBallPenalty = 1 * 1000;\r\n    epMaxDistanceMoveBall = 8.5;\r\n    maxDistanceYardsEP = 47 + 10;\r\n    extraPointYards = 10;\r\n    conversionYards = 10;\r\n    epKicker;\r\n    constructor(room, game) {\r\n        super(game);\r\n        room.on(\"playerBallKick\", (player) => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            this.game.extraPointTimeout?.stop();\r\n            this.game.extraPointTimeout = null;\r\n            if (player.getTeam() !== this.game.teamWithBall) {\r\n                this.handleIllegalTouchByEnemyTeam(room);\r\n                return;\r\n            }\r\n            if (!this.game.qbKickedBall) {\r\n                this.game.qbKickedBall = true;\r\n                this.epKicker = player;\r\n                this.game.setBallUnmoveable(room);\r\n                this.game.lockBall(room);\r\n                this.game.setBallUnkickable(room);\r\n                this.game.unghostAll(room);\r\n                const ballPos = room.getBall().getPosition();\r\n                setTimeout(() => {\r\n                    if (this.detectFailedExtraPoint(room, player, ballPos))\r\n                        this.handleMissedExtraPointBallWrongDirection(room);\r\n                }, 0);\r\n            }\r\n            else {\r\n                this.handleIllegalBallKick(room);\r\n            }\r\n        });\r\n        room.on(\"gameTick\", () => {\r\n            if (this.game.conversion && this.game.playerWithBall && !this.game.intercept) {\r\n                const player = this.game.playerWithBall;\r\n                if (this.game.teamWithBall === Global_1.Team.Red ? player.getX() < MapMeasures_1.default.RedZoneBlue[1].x : player.getX() > MapMeasures_1.default.RedZoneRed[1].x) {\r\n                    room.send({ message: `❌ Tentativa de deixar a red zone por ${player.name} com a bola durante conversão • Perde a conversão`, color: Global.Color.Orange, style: \"bold\" });\r\n                    this.game.resetToKickoff(room);\r\n                }\r\n                return;\r\n            }\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (!this.game.qbKickedBall) {\r\n                if (this.game.ballMovedTimeFG == null && this.didBallMove(room))\r\n                    this.game.ballMovedTimeFG = Date.now();\r\n            }\r\n            else {\r\n                if (this.didBallPassedGoalLine(room)) {\r\n                    this.handleSuccessfulExtraPoint(room);\r\n                }\r\n                else if (MathUtils_1.default.getBallSpeed(room.getBall()) < 0.5) {\r\n                    this.handleMissedExtraPointBallStopped(room);\r\n                }\r\n            }\r\n        });\r\n        room.on(\"playerChat\", (player, message) => {\r\n            if (message === \"hike\" && player.getTeam() === this.game.teamWithBall && this.game.mode === this.mode && !this.game.conversion) {\r\n                this.game.conversion = true;\r\n                this.game.mode = this.game.down.mode;\r\n                this.game.down.setHike(player, room);\r\n            }\r\n        });\r\n    }\r\n    set({ room, forTeam = this.game.teamWithBall, silent, yards }) {\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        this.game.resetPlay(room);\r\n        this.game.teamWithBall = forTeam;\r\n        this.game.ballPosition = { team: this.game.invertTeam(forTeam), yards: yards ?? this.extraPointYards };\r\n        this.game.downCount = 0;\r\n        this.game.distance = 20;\r\n        const ballPosInMap = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        ball.setPosition(ballPosInMap);\r\n        this.game.unlockBall(room);\r\n        this.game.setBallUnmoveable(room);\r\n        this.game.down.setBallPositionForHike(ball, forTeam);\r\n        this.game.down.resetFirstDownLine(room);\r\n        this.game.down.setBallLine(room);\r\n        if (!silent) {\r\n            room.send({ message: `🥅 Extra Point para o ${this.game.getTeamName(forTeam)} • ${Utils_1.default.getFormattedSeconds(this.epTimeLimit / 1000)} para chutar extra point`, color: Global.Color.LightGreen, style: \"bold\" });\r\n            const red = room.getPlayers().red();\r\n            const blue = room.getPlayers().blue();\r\n            let kickingTeam = (forTeam === Global_1.Team.Red ? red : blue);\r\n            let otherTeam = (forTeam === Global_1.Team.Red ? blue : red).sort((a, b) => b.getY() - a.getY());\r\n            this.game.teamWithBall = forTeam;\r\n            const positionsOtherTeam = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthExtraPointOtherTeam }, { x: 0, y: -this.playerLineLengthExtraPointOtherTeam }, otherTeam.length);\r\n            for (let i = 0; i < kickingTeam.length; i++) {\r\n                const player = kickingTeam[i];\r\n                player.setX(ballPosInMap.x + (forTeam === Global_1.Team.Red ? -this.playerBackDistanceExtraPoint : this.playerBackDistanceExtraPoint));\r\n            }\r\n            for (let i = 0; i < otherTeam.length; i++) {\r\n                const player = otherTeam[i];\r\n                player.setPosition({ x: forTeam === Global_1.Team.Red ? 900 : -900, y: positionsOtherTeam[i].y });\r\n            }\r\n        }\r\n        this.game.mode = this.mode;\r\n        if (!this.game.extraPointTimeout)\r\n            this.game.extraPointTimeout = new Timer_1.default(() => {\r\n                room.send({ message: `❌ Demorou demais pra chutar, perde o extra point!`, color: Global.Color.Orange, style: \"bold\" });\r\n                this.resetToKickoff(room, forTeam);\r\n            }, this.epTimeLimit);\r\n    }\r\n    reset() {\r\n        this.epKicker = null;\r\n    }\r\n    scoreExtraPoint(room, forTeam, points) {\r\n        if (forTeam === Global_1.Team.Red)\r\n            this.game.scoreRed += points;\r\n        else\r\n            this.game.scoreBlue += points;\r\n        this.resetToKickoff(room, forTeam);\r\n    }\r\n    resetToKickoff(room, forTeam) {\r\n        this.game.mode = null;\r\n        this.game.kickOffReset = new Timer_1.default(() => this.game.kickOff.set({ room, forTeam }), 3000);\r\n    }\r\n    didBallMove(room) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const ball = room.getBall();\r\n        return (Math.abs(ball.getX() - ballPos.x) > 0.01 || Math.abs(ball.getY() - ballPos.y) > 0.01);\r\n    }\r\n    didBallIlegallyMoveDuringEP(room) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const ball = room.getBall();\r\n        return ((ball.distanceTo({ ...ballPos, radius: ball.getRadius() }) > this.epMaxDistanceMoveBall) ||\r\n            (this.game.ballMovedTimeFG != null && !this.game.qbKickedBall && Date.now() > this.game.ballMovedTimeFG + this.maxTimeEPMoveBallPenalty));\r\n    }\r\n    didBallPassedGoalLine(room) {\r\n        return StadiumUtils_1.default.isOutOfMap(room.getBall().getPosition()) && StadiumUtils_1.default.ballWithinGoalLine(room.getBall(), this.game.invertTeam(this.game.teamWithBall));\r\n    }\r\n    detectFailedExtraPoint(room, player, ballPos) {\r\n        const ballPath = MathUtils_1.default.getBallPathFromPosition(ballPos, room.getBall().getPosition(), 2000);\r\n        const goalLine = player.getTeam() === Global_1.Team.Red ? MapMeasures_1.default.BlueGoalLine : MapMeasures_1.default.RedGoalLine;\r\n        const pointOfIntersection = MathUtils_1.default.getPointOfIntersection(ballPath[0].x, ballPath[0].y, ballPath[1].x, ballPath[1].y, goalLine[0].x, goalLine[0].y * 1.1, goalLine[1].x, goalLine[1].y * 1.1);\r\n        if (!this.game.playerWithBall) {\r\n            if (pointOfIntersection === false)\r\n                return true;\r\n        }\r\n    }\r\n    handleIllegalBallMove(room) {\r\n        room.send({ message: `❌ Condução ilegal da bola durante o Extra Point • Perde o EP`, color: Global.Color.Orange, style: \"bold\" });\r\n        this.resetToKickoff(room, this.game.teamWithBall);\r\n    }\r\n    handleIllegalBallKick(room) {\r\n        room.send({ message: `❌ Dois toques na bola pelo time que chutou • Ilegal • EP falhou`, color: Global.Color.Orange, style: \"bold\" });\r\n        this.resetToKickoff(room, this.game.teamWithBall);\r\n    }\r\n    handleIllegalTouchByEnemyTeam(room) {\r\n        this.scoreExtraPoint(room, this.game.teamWithBall, this.conversionPoints);\r\n        Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 Toque ilegal da equipe adversária durante o Extra Point • +${this.conversionPoints} pontos para o ${this.game.getTeamName(this.game.teamWithBall)} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n    }\r\n    handleSuccessfulExtraPoint(room) {\r\n        this.scoreExtraPoint(room, this.game.teamWithBall, this.epPoints);\r\n        Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 EXTRA POINT DO ${this.game.getTeamName(this.game.teamWithBall).toUpperCase()}!!! • +${this.epPoints} pontos para o ${this.game.getTeamName(this.game.teamWithBall)} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n    }\r\n    handleMissedExtraPointBallWrongDirection(room) {\r\n        room.send({ message: `🤖 Detectado Extra Point falho • Kickoff`, color: Global.Color.Yellow, style: \"bold\" });\r\n        this.game.mode = null;\r\n        this.resetToKickoff(room, this.game.teamWithBall);\r\n    }\r\n    handleMissedExtraPointBallStopped(room) {\r\n        this.game.mode = null;\r\n        room.send({ message: `🥅 Errou Extra Point • Bola parou antes de chegar no gol`, color: Global.Color.Yellow, style: \"bold\" });\r\n        this.resetToKickoff(room, this.game.teamWithBall);\r\n    }\r\n}\r\nexports.ExtraPoint = ExtraPoint;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/ExtraPoint.ts?");

/***/ }),

/***/ "./src/modules/modes/FieldGoal.ts":
/*!****************************************!*\
  !*** ./src/modules/modes/FieldGoal.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FieldGoal = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst Translate_1 = __importDefault(__webpack_require__(/*! ../../utils/Translate */ \"./src/utils/Translate.ts\"));\r\nconst Tackleable_1 = __webpack_require__(/*! ./Tackleable */ \"./src/modules/modes/Tackleable.ts\");\r\nclass FieldGoal extends Tackleable_1.Tackleable {\r\n    name = \"field goal\";\r\n    mode = \"fieldGoal\";\r\n    fgPoints = 3;\r\n    fgTimeLimit = 15 * 1000;\r\n    playerLineLengthFieldGoalKickingTeam = 100;\r\n    playerLineLengthFieldGoalOtherTeam = 100;\r\n    maxPlayerBackDistanceFieldGoalOffense = 1000;\r\n    maxPlayerBackDistanceFieldGoalDefense = 900;\r\n    maxTimeFGMoveBallPenalty = 1 * 1000;\r\n    yardsBackOffense = 10;\r\n    yardsBackDefense = 15;\r\n    fgMaxDistanceMoveBall = 8.5;\r\n    maxDistanceYardsFG = 47 + 10;\r\n    playerLineLengthFG = 100;\r\n    kickerY = 30;\r\n    maxDistanceKickerToBallYards = 10;\r\n    fgFailed = false;\r\n    disabledBallTouch = false;\r\n    fgKicker;\r\n    constructor(room, game) {\r\n        super(game);\r\n        room.on(\"playerBallKick\", (player) => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (this.fgFailed)\r\n                return;\r\n            this.game.fieldGoalTimeout.stop();\r\n            if (player.id !== this.fgKicker.id) {\r\n                this.handleIllegalTouch(room, player);\r\n                return;\r\n            }\r\n            if (!this.game.qbKickedBall) {\r\n                this.game.qbKickedBall = true;\r\n                this.game.setBallUnmoveable(room);\r\n                this.game.lockBall(room);\r\n                this.game.setBallUnkickable(room);\r\n                const ballPos = room.getBall().getPosition();\r\n                setTimeout(() => {\r\n                    this.disabledBallTouch = true;\r\n                    if (!this.fgFailed && this.detectFailedFieldGoal(room, player, ballPos))\r\n                        this.handleMissedFieldGoalBallWrongDirection(room);\r\n                }, 0);\r\n            }\r\n            else {\r\n                this.handleIllegalBallKick(room);\r\n            }\r\n        });\r\n        room.on(\"gameTick\", () => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (this.fgFailed)\r\n                return;\r\n            if (!this.disabledBallTouch) {\r\n                const playerTouchingBall = this.getPlayerTouchingBall(room);\r\n                if (playerTouchingBall && playerTouchingBall.id !== this.fgKicker.id) {\r\n                    this.handleIllegalTouch(room, playerTouchingBall);\r\n                    return;\r\n                }\r\n            }\r\n            if (!this.game.qbKickedBall) {\r\n                const playerTouchingBall = this.getPlayerTouchingBall(room);\r\n                if (playerTouchingBall && playerTouchingBall.getTeam() === this.fgKicker.getTeam()) {\r\n                    if (playerTouchingBall.getTeam() === this.fgKicker.getTeam()) {\r\n                        this.handleIllegalTouch(room, playerTouchingBall);\r\n                    }\r\n                    else {\r\n                        this.handleTackle(room, { players: [playerTouchingBall], tackleCount: 1 });\r\n                    }\r\n                    return;\r\n                }\r\n                if (this.game.ballMovedTimeFG == null && this.didBallMove(room))\r\n                    this.game.ballMovedTimeFG = Date.now();\r\n                const tackle = this.getTackle(room, this.fgKicker);\r\n                if (tackle.players.length > 0) {\r\n                    this.handleTackle(room, tackle);\r\n                    return;\r\n                }\r\n                if (this.didBallIlegallyMoveDuringFG(room)) {\r\n                    this.handleIllegalBallMove(room);\r\n                    return;\r\n                }\r\n                if (this.fgKicker.distanceTo(room.getBall()) > this.maxDistanceKickerToBallYards * MapMeasures_1.default.Yard) {\r\n                    this.handleKickerTooFarFromBall(room);\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                if (this.didBallPassedGoalLine(room)) {\r\n                    this.handleSuccessfulFieldGoal(room);\r\n                }\r\n                else if (MathUtils_1.default.getBallSpeed(room.getBall()) < 0.02) {\r\n                    this.handleMissedFieldGoalBallStopped(room);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    set({ room, forTeam = this.game.teamWithBall, pos = this.game.ballPosition, kicker }) {\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        this.game.resetPlay(room);\r\n        this.game.teamWithBall = forTeam;\r\n        this.game.ballPosition = pos;\r\n        this.game.downCount = 0;\r\n        this.game.distance = 20;\r\n        this.fgKicker = kicker;\r\n        room.send({ message: (0, Translate_1.default)(\"FG\", this.game.getTeamName(forTeam), Utils_1.default.getFormattedSeconds(this.fgTimeLimit / 1000)), color: Global.Color.LightGreen, style: \"bold\" });\r\n        const ballPosInMap = StadiumUtils_1.default.getCoordinateFromYards(pos.team, pos.yards);\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        ball.setPosition(ballPosInMap);\r\n        this.game.unlockBall(room);\r\n        this.game.setBallMoveable(room);\r\n        const red = room.getPlayers().red();\r\n        const blue = room.getPlayers().blue();\r\n        this.game.down.resetFirstDownLine(room);\r\n        this.game.down.resetBallLine(room);\r\n        let kickingTeam = (forTeam === Global_1.Team.Red ? red : blue);\r\n        let otherTeam = (forTeam === Global_1.Team.Red ? blue : red);\r\n        let kickingTeamNoQB = kickingTeam.filter(p => p.id !== kicker.id);\r\n        this.game.teamWithBall = forTeam;\r\n        const xBackOffense = forTeam === Global_1.Team.Blue ? Math.max(-this.maxPlayerBackDistanceFieldGoalOffense, ball.getX() - (this.yardsBackOffense * MapMeasures_1.default.Yard)) : Math.min(this.maxPlayerBackDistanceFieldGoalOffense, ball.getX() + (this.yardsBackOffense * MapMeasures_1.default.Yard));\r\n        const xBackDefense = forTeam === Global_1.Team.Blue ? Math.max(-this.maxPlayerBackDistanceFieldGoalDefense, ball.getX() - (this.yardsBackDefense * MapMeasures_1.default.Yard)) : Math.min(this.maxPlayerBackDistanceFieldGoalDefense, ball.getX() + (this.yardsBackDefense * MapMeasures_1.default.Yard));\r\n        const kickingTeamPositions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthFG }, { x: 0, y: -this.playerLineLengthFG }, kickingTeamNoQB.length);\r\n        const defenseTeamPositions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthFG }, { x: 0, y: -this.playerLineLengthFG }, otherTeam.length);\r\n        for (let i = 0; i < kickingTeamNoQB.length; i++) {\r\n            const player = kickingTeamNoQB[i];\r\n            if (player.id === kicker.id)\r\n                continue;\r\n            player.setPosition({ x: xBackOffense, y: kickingTeamPositions[i].y });\r\n        }\r\n        for (let i = 0; i < otherTeam.length; i++) {\r\n            const player = otherTeam[i];\r\n            player.setPosition({ x: xBackDefense, y: defenseTeamPositions[i].y });\r\n        }\r\n        kicker.setY(this.kickerY);\r\n        this.game.mode = this.mode;\r\n        this.game.fieldGoalTimeout = new Timer_1.default(() => {\r\n            room.send({ message: (0, Translate_1.default)(\"TOOK_TOO_LONG_FG\"), color: Global.Color.Orange, style: \"bold\" });\r\n            this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n        }, this.fgTimeLimit);\r\n    }\r\n    reset() {\r\n        this.fgKicker = null;\r\n        this.fgFailed = false;\r\n        this.disabledBallTouch = false;\r\n    }\r\n    fgCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"GAME_NOT_IN_PROGRESS\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.getTeam() === Global_1.Team.Spectators) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"NOT_ON_TEAM\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.getTeam() !== this.game.teamWithBall) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"TEAM_WITHOUT_BALL\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode || this.game.conversion) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"CANNOT_FG_NOW\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (StadiumUtils_1.default.getDifferenceBetweenFieldPositions(this.game.ballPosition, { team: this.game.invertTeam(this.game.teamWithBall), yards: 0 }) > this.maxDistanceYardsFG) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"CANNOT_FG_AT_THIS_DISTANCE\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.distanceTo(room.getBall()) > 50) {\r\n            $.caller.reply({ message: (0, Translate_1.default)(\"FAR_AWAY_FROM_BALL\"), sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: (0, Translate_1.default)(\"SET_FG\", $.caller.name), color: Global.Color.Yellow, style: \"bold\" });\r\n        this.set({ room, kicker: $.caller });\r\n        return false;\r\n    }\r\n    handleTackle(room, tackle) {\r\n        this.fgFailed = true;\r\n        this.game.customAvatarManager.setPlayerAvatar(this.fgKicker, \"❌\", 3000);\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalPerdidos: 1 });\r\n        tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1, sacks: 1 }));\r\n        tackle.players.forEach(p => {\r\n            this.game.customAvatarManager.setPlayerAvatar(p, \"💪\", 3000);\r\n        });\r\n        const remainingTime = Utils_1.default.getFormattedSeconds(parseInt(((this.fgTimeLimit - this.game.fieldGoalTimeout.getRemainingTime()) / 1000).toFixed(1)));\r\n        Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"TACKLED_QB_FG\", this.fgKicker.name, Utils_1.default.getPlayersNames(tackle.players), remainingTime), color: Global.Color.LimeGreen, style: \"bold\" });\r\n        this.game.failedFielGoalTimeout = new Timer_1.default(() => {\r\n            this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n            return;\r\n        }, 1000);\r\n    }\r\n    getPlayerTouchingBall(room) {\r\n        for (const player of room.getPlayers().teams()) {\r\n            if (player.id === this.fgKicker?.id)\r\n                continue;\r\n            if (player.distanceTo(room.getBall()) < 0.5)\r\n                return player;\r\n        }\r\n    }\r\n    scoreFieldGoal(room, forTeam) {\r\n        this.game.mode = null;\r\n        if (forTeam === Global_1.Team.Red)\r\n            this.game.scoreRed += this.fgPoints;\r\n        else\r\n            this.game.scoreBlue += this.fgPoints;\r\n        this.game.kickOffReset = new Timer_1.default(() => this.game.kickOff.set({ room, forTeam }), 3000);\r\n    }\r\n    didBallMove(room) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const ball = room.getBall();\r\n        return (Math.abs(ball.getX() - ballPos.x) > 0.01 || Math.abs(ball.getY() - ballPos.y) > 0.01);\r\n    }\r\n    didBallIlegallyMoveDuringFG(room) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition.team, this.game.ballPosition.yards);\r\n        const ball = room.getBall();\r\n        return ((ball.distanceTo({ ...ballPos, radius: ball.getRadius() }) > this.fgMaxDistanceMoveBall) ||\r\n            (this.game.ballMovedTimeFG != null && !this.game.qbKickedBall && Date.now() > this.game.ballMovedTimeFG + this.maxTimeFGMoveBallPenalty));\r\n    }\r\n    didBallPassedGoalLine(room) {\r\n        return StadiumUtils_1.default.isOutOfMap(room.getBall().getPosition()) && StadiumUtils_1.default.ballWithinGoalLine(room.getBall(), this.game.invertTeam(this.game.teamWithBall));\r\n    }\r\n    detectFailedFieldGoal(room, player, ballPos) {\r\n        const ballPath = MathUtils_1.default.getBallPathFromPosition(ballPos, room.getBall().getPosition(), 2000);\r\n        const goalLine = player.getTeam() === Global_1.Team.Red ? MapMeasures_1.default.BlueGoalLine : MapMeasures_1.default.RedGoalLine;\r\n        const pointOfIntersection = MathUtils_1.default.getPointOfIntersection(ballPath[0].x, ballPath[0].y, ballPath[1].x, ballPath[1].y, goalLine[0].x, goalLine[0].y * 1.1, goalLine[1].x, goalLine[1].y * 1.1);\r\n        if (!this.game.playerWithBall) {\r\n            if (pointOfIntersection === false)\r\n                return true;\r\n        }\r\n    }\r\n    handleIllegalBallMove(room) {\r\n        this.fgFailed = true;\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalPerdidos: 1 });\r\n        room.send({ message: (0, Translate_1.default)(\"CARRIED_BALL_FG\"), color: Global.Color.Orange, style: \"bold\" });\r\n        this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n    }\r\n    handleIllegalBallKick(room) {\r\n        room.send({ message: (0, Translate_1.default)(\"TOUCHED_BALL_FG_SAME_TEAM\"), color: Global.Color.Orange, style: \"bold\" });\r\n        this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n    }\r\n    handleIllegalTouch(room, player) {\r\n        this.fgFailed = true;\r\n        if (player.getTeam() !== this.game.teamWithBall) {\r\n            this.scoreFieldGoal(room, this.game.teamWithBall);\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"TOUCHED_BALL_FG_DEFENSE\", this.game.getTeamName(this.game.teamWithBall), this.fgPoints, this.game.getScoreMessage()), color: Global.Color.LimeGreen, style: \"bold\" });\r\n        }\r\n        else {\r\n            this.game.customAvatarManager.setPlayerAvatar(player, \"🤡\", 3000);\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: (0, Translate_1.default)(\"TOUCHED_BALL_FG_OFFENSE\", player.name), color: Global.Color.LimeGreen, style: \"bold\" });\r\n            this.game.failedFielGoalTimeout = new Timer_1.default(() => {\r\n                this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n                return;\r\n            }, 2000);\r\n        }\r\n    }\r\n    handleSuccessfulFieldGoal(room) {\r\n        const distance = StadiumUtils_1.default.getDifferenceBetweenFieldPositions(this.game.ballPosition, { team: this.game.invertTeam(this.game.teamWithBall), yards: -MapMeasures_1.default.YardsBetween0MarkAndGoalLine });\r\n        this.scoreFieldGoal(room, this.game.teamWithBall);\r\n        Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 FIELD GOAL DO ${this.game.getTeamName(this.game.teamWithBall).toUpperCase()} A ${distance} JARDAS DE DISTÂNCIA!!! • +${this.fgPoints} pontos para o ${this.game.getTeamName(this.game.teamWithBall)} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalJardas: distance });\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalCompletos: 1 });\r\n    }\r\n    handleMissedFieldGoalBallWrongDirection(room) {\r\n        room.send({ message: (0, Translate_1.default)(\"DETECTED_FAILED_FG\"), color: Global.Color.Yellow, style: \"bold\" });\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalPerdidos: 1 });\r\n        this.game.mode = null;\r\n        this.game.failedFielGoalTimeout = new Timer_1.default(() => {\r\n            this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) });\r\n            return;\r\n        }, 2000);\r\n    }\r\n    handleMissedFieldGoalBallStopped(room) {\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalPerdidos: 1 });\r\n        this.game.mode = null;\r\n        room.send({ message: (0, Translate_1.default)(\"FAILED_FG_BALL_STOPPED\"), color: Global.Color.Yellow, style: \"bold\" });\r\n        this.game.failedFielGoalTimeout = new Timer_1.default(() => this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) }), 1000);\r\n    }\r\n    handleKickerTooFarFromBall(room) {\r\n        this.game.matchStats.add(this.fgKicker, { fieldGoalPerdidos: 1 });\r\n        this.game.mode = null;\r\n        room.send({ message: (0, Translate_1.default)(\"KICKER_TOO_FAR_FROM_BALL\", this.fgKicker.name), color: Global.Color.Yellow, style: \"bold\" });\r\n        this.game.failedFielGoalTimeout = new Timer_1.default(() => this.game.down.set({ room, forTeam: this.game.invertTeam(this.game.teamWithBall) }), 1000);\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"fg\"\r\n    })\r\n], FieldGoal.prototype, \"fgCommand\", null);\r\nexports.FieldGoal = FieldGoal;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/FieldGoal.ts?");

/***/ }),

/***/ "./src/modules/modes/Invasion.ts":
/*!***************************************!*\
  !*** ./src/modules/modes/Invasion.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst DownPlay_1 = __webpack_require__(/*! ./DownPlay */ \"./src/modules/modes/DownPlay.ts\");\r\nclass Invasion extends DownPlay_1.DownPlay {\r\n    invasionPenalty = 10;\r\n    invasionTimeSeconds = 3;\r\n    nonInvasionStartTime = 1 * 1000;\r\n    invasionLinesIndexes = [\r\n        [9, 10],\r\n        [11, 12],\r\n        [13, 14],\r\n        [15, 16],\r\n        [17, 18],\r\n        [19, 20],\r\n        [21, 22],\r\n        [23, 24],\r\n        [25, 26],\r\n        [27, 28],\r\n        [29, 30],\r\n        [31, 32]\r\n    ];\r\n    invasionDiscsIndexes = [\r\n        33, 34, 35, 36\r\n    ];\r\n    innerInvasionLinesIndexes = [\r\n        [37, 38],\r\n        [39, 40],\r\n        [41, 42],\r\n        [43, 44],\r\n        [45, 46],\r\n        [47, 48],\r\n    ];\r\n    innerInvasionDiscsIndexes = [\r\n        49, 50\r\n    ];\r\n    outerInvasionWidthYards = 9;\r\n    invasionLinesTimeout;\r\n    innerInvasionWidthYards = 2;\r\n    innerInvasionHeightYards = 4;\r\n    playerRadius = 15;\r\n    crowdingPlayers = [];\r\n    crowdingPlayersHistory = [];\r\n    constructor(room, game) {\r\n        super(game);\r\n        room.on(\"gamePause\", (byPlayer) => {\r\n            if (byPlayer)\r\n                this.invasionLinesTimeout?.pause();\r\n            if (this.game.mode === this.game.down.mode && this.game.invasionTimeout && room.isGameInProgress()) {\r\n                this.game.invasionTimeout?.pause();\r\n            }\r\n        });\r\n        room.on(\"gameStartTicking\", (byPlayer) => {\r\n            this.invasionLinesTimeout?.resume();\r\n            if (this.game.mode === this.game.down.mode && this.game.invasionTimeout && room.isGameInProgress()) {\r\n                this.game.invasionTimeout?.resume();\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.crowdingPlayers.length = 0;\r\n        this.crowdingPlayersHistory.length = 0;\r\n    }\r\n    handle(room) {\r\n        if (Date.now() < this.game.hikeTime + this.nonInvasionStartTime)\r\n            return false;\r\n        const { defendersCrowding, attackersCrowding } = this.getPlayersInvadingMid(room);\r\n        if (defendersCrowding.length === 0 || attackersCrowding.length > 0) {\r\n            this.clear();\r\n            return false;\r\n        }\r\n        const crowdingDefendersIds = defendersCrowding.map(p => p.id);\r\n        const oldCrowdersIds = [];\r\n        this.crowdingPlayers = this.crowdingPlayers.map(p => {\r\n            if (!crowdingDefendersIds.includes(p[0]))\r\n                return;\r\n            oldCrowdersIds.push(p[0]);\r\n            p[1]++;\r\n            if (this.isInnerInvasionValid()) {\r\n                const player = room.getPlayer(p[0]);\r\n                if (player && this.isInsideInnerInvasion(player)) {\r\n                    p[1]++;\r\n                }\r\n            }\r\n            const crowdingPlayerHistoryIndex = this.crowdingPlayersHistory.findIndex(a => a[0] === p[0]);\r\n            if (crowdingPlayerHistoryIndex !== -1)\r\n                this.crowdingPlayersHistory[crowdingPlayerHistoryIndex][1]++;\r\n            return p;\r\n        }).filter(p => p);\r\n        crowdingDefendersIds.forEach(id => {\r\n            if (!oldCrowdersIds.includes(id)) {\r\n                this.crowdingPlayers.push([id, 1]);\r\n                const playerHistoryIndex = this.crowdingPlayersHistory.findIndex(p => p[0] === id);\r\n                if (playerHistoryIndex === -1) {\r\n                    this.crowdingPlayersHistory.push([id, 1]);\r\n                }\r\n                else {\r\n                    this.crowdingPlayersHistory[playerHistoryIndex][1]++;\r\n                }\r\n            }\r\n        });\r\n        if (this.crowdingPlayers.every(p => p[1] < this.invasionTimeSeconds * Global.TICKS_PER_SECOND))\r\n            return false;\r\n        if (!defendersCrowding.every(invader => {\r\n            for (const player of this.game.getTeamWithBall(room)) {\r\n                if (invader.distanceTo(player) < 1)\r\n                    return false;\r\n            }\r\n            return true;\r\n        }))\r\n            return false;\r\n        this.game.invasionPlayers = defendersCrowding;\r\n        let penalty = this.invasionPenalty;\r\n        if (StadiumUtils_1.default.isInRedZone(this.game.ballPosition, this.game.invertTeam(this.game.teamWithBall))) {\r\n            this.game.redZonePenalties++;\r\n            if (this.game.redZonePenalties >= this.game.down.maxPenaltiesInRedZone) {\r\n                this.handleInvasionLines(room, () => {\r\n                    this.game.down.setRedZoneTouchdown(room, this.game.teamWithBall, this.game.invasionPlayers, `Invasão de ${Utils_1.default.getPlayersNames(this.game.invasionPlayers)}`);\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                penalty = this.game.getPenaltyValueInRedZone(this.invasionPenalty);\r\n                room.send({ message: `⛔ Invasão de ${this.getInvasionPlayersString(room)} na Red Zone • ${this.game.redZonePenalties}/${this.game.down.maxPenaltiesInRedZone} para Touchdown Automático • ${penalty} jardas de penalidade`, color: Global.Color.Orange, style: \"bold\" });\r\n            }\r\n        }\r\n        else {\r\n            room.send({ message: `⛔ Invasão de ${this.getInvasionPlayersString(room)} • ${penalty} jardas de penalidade`, color: Global.Color.Orange, style: \"bold\" });\r\n        }\r\n        defendersCrowding.forEach(p => {\r\n            p.reply({ message: `😡 Você não pode ficar no meio por mais que 3 segundos, a não ser que tenha jogadores do outro time também!`, color: Global.Color.Red, style: \"bold\", sound: 2 });\r\n            this.game.matchStats.add(p, { faltas: 1 });\r\n        });\r\n        this.game.adjustGameTimeAfterDefensivePenalty(room);\r\n        this.handleInvasionLines(room, () => {\r\n            this.game.down.set({ room, increment: penalty, countDown: false });\r\n        });\r\n        return true;\r\n    }\r\n    isInnerInvasionValid() {\r\n        return this.game.ballPosition.yards > 5;\r\n    }\r\n    isInsideInnerInvasion(player) {\r\n        const ballPos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition);\r\n        const circleX = player.getX();\r\n        const circleY = player.getY();\r\n        const circleR = player.getRadius();\r\n        const rectW = this.innerInvasionWidthYards * MapMeasures_1.default.Yard;\r\n        const rectH = this.innerInvasionHeightYards * MapMeasures_1.default.Yard;\r\n        const rectY = (this.innerInvasionHeightYards / 2) * MapMeasures_1.default.Yard * -1;\r\n        const rectX = this.game.teamWithBall === Global_1.Team.Red ? ballPos.x :\r\n            Math.max(ballPos.x - rectW, MapMeasures_1.default.RedZoneRed[0].x);\r\n        const distX = Math.abs(circleX - rectX - rectW / 2);\r\n        const distY = Math.abs(circleY - rectY - rectH / 2);\r\n        if (distX > (rectW / 2 + circleR))\r\n            return false;\r\n        if (distY > (rectH / 2 + circleR))\r\n            return false;\r\n        if (distX <= (rectW / 2))\r\n            return true;\r\n        if (distY <= (rectH / 2))\r\n            return true;\r\n        const dx = distX - rectW / 2;\r\n        const dy = distY - rectH / 2;\r\n        return (dx * dx + dy * dy <= (circleR * circleR));\r\n    }\r\n    getInvasionPlayersString(room) {\r\n        const sum = this.crowdingPlayersHistory.reduce((previous, current) => previous + current[1], 0);\r\n        return Utils_1.default.getPlayersNames(this.crowdingPlayersHistory.sort((a, b) => b[1] - a[1]).map(p => {\r\n            const player = room.getPlayer(p[0]);\r\n            if (!player)\r\n                return;\r\n            return { name: `${player.name} (${((p[1] / sum) * 100).toFixed(1)}%)` };\r\n        }).filter(p => p != null));\r\n    }\r\n    handleInvasionLines(room, callback) {\r\n        this.game.mode = null;\r\n        this.setInvasionLines(room);\r\n        this.invasionLinesTimeout = new Timer_1.default(() => {\r\n            for (const index of this.invasionLinesIndexes) {\r\n                const d1 = room.getDisc(index[0]);\r\n                const d2 = room.getDisc(index[1]);\r\n                d1.setPosition(d2.getPosition());\r\n            }\r\n            for (const index of this.innerInvasionLinesIndexes) {\r\n                const d1 = room.getDisc(index[0]);\r\n                const d2 = room.getDisc(index[1]);\r\n                d1.setPosition(d2.getPosition());\r\n            }\r\n            for (const index of [...this.invasionDiscsIndexes, ...this.innerInvasionDiscsIndexes]) {\r\n                room.getDisc(index).setPosition({ x: 9999, y: 9999 });\r\n            }\r\n            callback();\r\n            this.invasionLinesTimeout = null;\r\n        }, 1000);\r\n    }\r\n    getPlayersInvadingMid(room) {\r\n        const crowdingPlayers = this.getCrowdingPlayers(room);\r\n        const defendersCrowding = crowdingPlayers.filter(p => p.getTeam() !== this.game.teamWithBall);\r\n        const attackersCrowding = crowdingPlayers.filter(p => p.getTeam() === this.game.teamWithBall);\r\n        return { crowdingPlayers, defendersCrowding, attackersCrowding };\r\n    }\r\n    getOuterBoxWidth() {\r\n        const ballPos = this.game.getBallStartPos();\r\n        const rectMaxW = this.outerInvasionWidthYards * MapMeasures_1.default.Yard;\r\n        const distanceToEndzone = this.game.teamWithBall === Global_1.Team.Blue ?\r\n            Math.abs(Math.abs(ballPos.x) - Math.abs(MapMeasures_1.default.RedZoneRed[0].x + MapMeasures_1.default.Yard)) :\r\n            Math.abs(Math.abs(ballPos.x) - Math.abs(MapMeasures_1.default.RedZoneBlue[0].x - MapMeasures_1.default.Yard));\r\n        const rectW = Math.min(rectMaxW, distanceToEndzone);\r\n        return rectW;\r\n    }\r\n    getCrowdingPlayers(room) {\r\n        const crowdingPlayers = [];\r\n        for (const player of room.getPlayers().teams()) {\r\n            if (this.game.quarterback.id === player.id)\r\n                continue;\r\n            const ballPos = this.game.getBallStartPos();\r\n            const circleX = player.getX();\r\n            const circleY = player.getY();\r\n            const circleR = player.getRadius();\r\n            const rectMaxW = this.outerInvasionWidthYards * MapMeasures_1.default.Yard;\r\n            const rectLimitRed = MapMeasures_1.default.RedZoneRed[0].x + MapMeasures_1.default.Yard;\r\n            const rectY = MapMeasures_1.default.HashesHeight.y1 + MapMeasures_1.default.SingleHashHeight;\r\n            const rectX = this.game.teamWithBall === Global_1.Team.Red ? ballPos.x :\r\n                Math.max(ballPos.x - rectMaxW, rectLimitRed);\r\n            const rectW = this.getOuterBoxWidth();\r\n            const rectH = MapMeasures_1.default.HashesHeight.y2 * 2 - MapMeasures_1.default.SingleHashHeight * 2;\r\n            const distX = Math.abs(circleX - rectX - rectW / 2);\r\n            const distY = Math.abs(circleY - rectY - rectH / 2);\r\n            if (distX > (rectW / 2 + circleR))\r\n                continue;\r\n            if (distY > (rectH / 2 + circleR))\r\n                continue;\r\n            if (distX <= (rectW / 2) || distY <= (rectH / 2)) {\r\n                crowdingPlayers.push(player);\r\n            }\r\n            else {\r\n                const dx = distX - rectW / 2;\r\n                const dy = distY - rectH / 2;\r\n                if (dx * dx + dy * dy <= (circleR * circleR)) {\r\n                    crowdingPlayers.push(player);\r\n                }\r\n            }\r\n        }\r\n        return crowdingPlayers;\r\n    }\r\n    arrangeLines(room, measures) {\r\n        const topLine = !measures.topLine ? [] : MathUtils_1.default.getPointsAlongLine({\r\n            x: measures.topLine.x1,\r\n            y: measures.topLine.y1\r\n        }, {\r\n            x: measures.topLine.x2,\r\n            y: measures.topLine.y2\r\n        }, measures.numberOfPoints);\r\n        const bottomLine = !measures.bottomLine ? [] : MathUtils_1.default.getPointsAlongLine({\r\n            x: measures.bottomLine.x1,\r\n            y: measures.bottomLine.y1\r\n        }, {\r\n            x: measures.bottomLine.x2,\r\n            y: measures.bottomLine.y2\r\n        }, measures.numberOfPoints);\r\n        const frontLine = !measures.frontLine ? [] : MathUtils_1.default.getPointsAlongLine({\r\n            x: measures.frontLine.x1,\r\n            y: measures.frontLine.y1\r\n        }, {\r\n            x: measures.frontLine.x2,\r\n            y: measures.frontLine.y2\r\n        }, measures.numberOfPoints);\r\n        const backLine = !measures.backLine ? [] : MathUtils_1.default.getPointsAlongLine({\r\n            x: measures.backLine.x1,\r\n            y: measures.backLine.y1\r\n        }, {\r\n            x: measures.backLine.x2,\r\n            y: measures.backLine.y2\r\n        }, measures.numberOfPoints);\r\n        const halfRectangle = [...topLine, ...bottomLine, ...frontLine, ...backLine];\r\n        let count = 0;\r\n        let invasionLineIndex = 0;\r\n        let resetDiscs = [];\r\n        for (let i = 0; i < halfRectangle.length; i++) {\r\n            const discIndex = measures.invasionLinesIndexes[invasionLineIndex][i % 2 === 0 ? 0 : 1];\r\n            const disc = room.getDisc(discIndex);\r\n            const point = halfRectangle[i];\r\n            disc.setPosition({ x: point.x, y: point.y });\r\n            resetDiscs.push(disc);\r\n            if (count === 1) {\r\n                count = 0;\r\n                invasionLineIndex++;\r\n            }\r\n            else {\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n    setInvasionLines(room) {\r\n        const ballPos = this.game.getBallStartPos();\r\n        const scrimmagePos = StadiumUtils_1.default.getCoordinateFromYards(this.game.ballPosition);\r\n        let maxHorizontalX = this.game.teamWithBall === Global_1.Team.Blue ?\r\n            ballPos.x - this.getOuterBoxWidth() :\r\n            ballPos.x + this.getOuterBoxWidth();\r\n        const signal = (this.game.teamWithBall === Global_1.Team.Red ? -1 : 1);\r\n        const numberOfPoints = 2 * 3;\r\n        const behindBallPosX = ballPos.x + (signal * 0 * MapMeasures_1.default.Yard);\r\n        const hashHeightY1 = MapMeasures_1.default.HashesHeight.y1 + MapMeasures_1.default.SingleHashHeight;\r\n        const hashHeightY2 = MapMeasures_1.default.HashesHeight.y2 - MapMeasures_1.default.SingleHashHeight;\r\n        room.getDisc(this.invasionDiscsIndexes[0]).setPosition({ x: behindBallPosX, y: hashHeightY1 });\r\n        room.getDisc(this.invasionDiscsIndexes[1]).setPosition({ x: maxHorizontalX, y: hashHeightY1 });\r\n        room.getDisc(this.invasionDiscsIndexes[2]).setPosition({ x: behindBallPosX, y: hashHeightY2 });\r\n        room.getDisc(this.invasionDiscsIndexes[3]).setPosition({ x: maxHorizontalX, y: hashHeightY2 });\r\n        this.arrangeLines(room, {\r\n            topLine: {\r\n                x1: behindBallPosX,\r\n                y1: hashHeightY1,\r\n                x2: maxHorizontalX,\r\n                y2: hashHeightY1\r\n            },\r\n            bottomLine: {\r\n                x1: behindBallPosX,\r\n                y1: hashHeightY2,\r\n                x2: maxHorizontalX,\r\n                y2: hashHeightY2\r\n            },\r\n            frontLine: {\r\n                x1: maxHorizontalX,\r\n                y1: hashHeightY1,\r\n                x2: maxHorizontalX,\r\n                y2: hashHeightY2\r\n            },\r\n            backLine: {\r\n                x1: behindBallPosX,\r\n                y1: hashHeightY1,\r\n                x2: behindBallPosX,\r\n                y2: hashHeightY2\r\n            },\r\n            invasionLinesIndexes: this.invasionLinesIndexes,\r\n            numberOfPoints\r\n        });\r\n        if (this.isInnerInvasionValid()) {\r\n            const innerTopLineY = (this.innerInvasionHeightYards / 2) * MapMeasures_1.default.Yard * -1;\r\n            const innerBottomLineY = -innerTopLineY;\r\n            const innerFrontX = scrimmagePos.x + (this.innerInvasionWidthYards * MapMeasures_1.default.Yard * -signal);\r\n            const innerBottomX = ballPos.x;\r\n            room.getDisc(this.innerInvasionDiscsIndexes[0]).setPosition({ x: innerFrontX, y: innerTopLineY });\r\n            room.getDisc(this.innerInvasionDiscsIndexes[1]).setPosition({ x: innerFrontX, y: innerBottomLineY });\r\n            this.arrangeLines(room, {\r\n                topLine: {\r\n                    x1: innerBottomX,\r\n                    y1: innerTopLineY,\r\n                    x2: innerFrontX,\r\n                    y2: innerTopLineY\r\n                },\r\n                bottomLine: {\r\n                    x1: innerBottomX,\r\n                    y1: innerBottomLineY,\r\n                    x2: innerFrontX,\r\n                    y2: innerBottomLineY\r\n                },\r\n                frontLine: {\r\n                    x1: innerFrontX,\r\n                    y1: innerTopLineY,\r\n                    x2: innerFrontX,\r\n                    y2: innerBottomLineY\r\n                },\r\n                invasionLinesIndexes: this.innerInvasionLinesIndexes,\r\n                numberOfPoints: 2 * 2\r\n            });\r\n        }\r\n        room.pause();\r\n        room.unpause();\r\n    }\r\n}\r\nexports[\"default\"] = Invasion;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Invasion.ts?");

/***/ }),

/***/ "./src/modules/modes/Kick.ts":
/*!***********************************!*\
  !*** ./src/modules/modes/Kick.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Kick = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst LandPlay_1 = __webpack_require__(/*! ./LandPlay */ \"./src/modules/modes/LandPlay.ts\");\r\nclass Kick extends LandPlay_1.LandPlay {\r\n    puntPlayerInvadedOtherFieldDistancePenalty = 80;\r\n    puntPlayerInvadedOtherFieldSpeedPenalty = 5;\r\n    constructor(room, game) {\r\n        super(room, game);\r\n        room.on(\"gameTick\", () => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            this.handleBallReturn(room);\r\n        });\r\n        room.on(\"playerBallKick\", (player) => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            this.game.playerReturnedBall(room, player);\r\n            this.game.unblockTeams(room);\r\n            if (!this.game.qbKickedBall) {\r\n                this.game.qbKickedBall = true;\r\n                this.handleDefenderFieldInvasionBeforeHike(room);\r\n            }\r\n        });\r\n    }\r\n    handleBallReturn(room) {\r\n        if (!this.game.playerWithBall) {\r\n            for (const player of room.getPlayers().teams()) {\r\n                if (player.distanceTo(room.getBall()) < 0.5) {\r\n                    this.game.playerReturnedBall(room, player);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleDefenderFieldInvasionBeforeHike(room) {\r\n        for (const player of this.game.getTeamWithBall(room)) {\r\n            const ballXPos = room.getBall().getX();\r\n            const playerX = player.getX();\r\n            if (this.game.teamWithBall === Global_1.Team.Red ? playerX > ballXPos : playerX < ballXPos) {\r\n                player.setX(ballXPos + this.puntPlayerInvadedOtherFieldDistancePenalty * (player.getTeam() === Global_1.Team.Red ? -1 : 1));\r\n                if (player.getY() > 100 || player.getY() < -100)\r\n                    player.setY(100);\r\n                player.setVelocityX(this.puntPlayerInvadedOtherFieldSpeedPenalty * (this.game.teamWithBall === Global_1.Team.Red ? -1 : 1));\r\n                player.reply({ message: `🚨 Você não pode ficar no campo adversário durante o ${this.name}!`, sound: 2, color: Global.Color.Red, style: \"bold\" });\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Kick = Kick;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Kick.ts?");

/***/ }),

/***/ "./src/modules/modes/KickOff.ts":
/*!**************************************!*\
  !*** ./src/modules/modes/KickOff.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.KickOff = void 0;\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Kick_1 = __webpack_require__(/*! ./Kick */ \"./src/modules/modes/Kick.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nclass KickOff extends Kick_1.Kick {\r\n    mode = \"kickOff\";\r\n    name = \"kick off\";\r\n    playerLineLengthKickoff = 200;\r\n    kickoffSecondsToAddExtra = 10;\r\n    kickoffTimePenalty = 10;\r\n    kickoffTimer;\r\n    kickoffPenaltyStartedAt;\r\n    isBallToBeKicked = false;\r\n    constructor(room, game) {\r\n        super(room, game);\r\n        room.on(\"playerTeamChanged\", (changedPlayer, byPlayer) => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (!this.game.qbKickedBall) {\r\n                this.game.blockTeam(room, this.game.invertTeam(this.game.teamWithBall));\r\n                this.game.blockMiddleKickoff(room, this.game.teamWithBall);\r\n            }\r\n        });\r\n        room.on(\"playerBallKick\", (player) => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (this.kickoffPenaltyStartedAt) {\r\n                const kickoffStallExtraTime = Date.now() - this.kickoffPenaltyStartedAt;\r\n                this.game.addToStoppage(kickoffStallExtraTime);\r\n                room.send({ message: `​⏰​ Foram adicionados ${Utils_1.default.getFormattedSeconds(parseInt(((kickoffStallExtraTime / 1000) + 10).toFixed(2)))} de acréscimos devido à demora em chutar o kickoff`, color: Global.Color.Yellow, style: \"bold\" });\r\n            }\r\n            this.isBallToBeKicked = false;\r\n            this.kickoffPenaltyStartedAt = 0;\r\n            this.resetStallCounter();\r\n        });\r\n        room.on(\"gamePause\", () => {\r\n            this.kickoffTimer?.pause();\r\n        });\r\n        room.on(\"gameUnpause\", () => {\r\n            this.kickoffTimer?.resume();\r\n        });\r\n    }\r\n    set({ room, forTeam = this.game.teamWithBall, pos }) {\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        this.game.resetPlay(room);\r\n        if (!pos) {\r\n            this.game.ballPosition = { team: forTeam, yards: 50 };\r\n            pos = this.game.ballPosition;\r\n        }\r\n        else {\r\n            this.game.ballPosition = pos;\r\n        }\r\n        this.game.teamWithBall = forTeam;\r\n        this.game.downCount = 0;\r\n        this.game.distance = 20;\r\n        this.isBallToBeKicked = true;\r\n        if (!this.game.firstKickoff && this.game.endGameTime > 0 && room.getScores().time > 1)\r\n            this.kickoffTimer = new Timer_1.default(() => {\r\n                this.kickoffPenaltyStartedAt = Date.now();\r\n                this.game.addToStoppage(10 * 1000);\r\n            }, this.kickoffSecondsToAddExtra * 1000);\r\n        room.send({ message: `​🤾‍♂️​ Kickoff para o ${this.game.getTeamName(forTeam)}`, color: Global.Color.Yellow, style: \"bold\" });\r\n        const ballPosInMap = StadiumUtils_1.default.getCoordinateFromYards(pos.team, pos.yards);\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        ball.setPosition(ballPosInMap);\r\n        this.game.setBallKickForce(room, 1.2);\r\n        this.game.down.resetFirstDownLine(room);\r\n        this.game.down.resetBallLine(room);\r\n        let red = room.getPlayers().red();\r\n        let blue = room.getPlayers().blue();\r\n        for (let i = 0; i < red.length; i++) {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthKickoff }, { x: 0, y: -this.playerLineLengthKickoff }, red.length);\r\n            const player = red[i];\r\n            player.setPosition({ x: room.getScores().time === 0 ? MapMeasures_1.default.PuntRedPositionX : MapMeasures_1.default.RedZoneRed[0].x, y: positions[i].y });\r\n        }\r\n        for (let i = 0; i < blue.length; i++) {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthKickoff }, { x: 0, y: -this.playerLineLengthKickoff }, blue.length);\r\n            const player = blue[i];\r\n            player.setPosition({ x: room.getScores().time === 0 ? MapMeasures_1.default.PuntBluePositionX : MapMeasures_1.default.RedZoneBlue[0].x, y: positions[i].y });\r\n        }\r\n        this.game.blockTeam(room, this.game.invertTeam(forTeam));\r\n        this.game.blockMiddleKickoff(room, forTeam);\r\n        this.game.mode = this.mode;\r\n    }\r\n    resetStallCounter() {\r\n        this.kickoffPenaltyStartedAt = null;\r\n        this.kickoffTimer?.stop();\r\n        this.kickoffTimer = null;\r\n    }\r\n    reset() {\r\n        this.resetStallCounter();\r\n        this.isBallToBeKicked = false;\r\n        this.game.firstKickoff = false;\r\n    }\r\n}\r\nexports.KickOff = KickOff;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/KickOff.ts?");

/***/ }),

/***/ "./src/modules/modes/LandPlay.ts":
/*!***************************************!*\
  !*** ./src/modules/modes/LandPlay.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LandPlay = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst Timer_1 = __importDefault(__webpack_require__(/*! ../../utils/Timer */ \"./src/utils/Timer.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nconst Utils_1 = __importDefault(__webpack_require__(/*! ../../utils/Utils */ \"./src/utils/Utils.ts\"));\r\nconst Tackleable_1 = __webpack_require__(/*! ./Tackleable */ \"./src/modules/modes/Tackleable.ts\");\r\nclass LandPlay extends Tackleable_1.Tackleable {\r\n    touchesToTackleRunner = 5;\r\n    touchesToTackleQBRunner = 3;\r\n    safetyPoints = 2;\r\n    touchdownPoints = 6;\r\n    ballLineDiscsIndex = [7, 8];\r\n    clownEmojiTime = 15 * 1000;\r\n    wasPlayerWithBallOutsideOfRedZone = false;\r\n    touchbackYardLine = 25;\r\n    timeToFumbleSeconds = 0.1;\r\n    firstTackle;\r\n    constructor(room, game) {\r\n        super(game);\r\n        room.on(\"gameTick\", () => {\r\n            if (this.game.mode !== this.mode)\r\n                return;\r\n            if (this.game.playerWithBall) {\r\n                if (this.wasPlayerWithBallOutsideOfRedZone !== false && this.wasPlayerWithBallOutsideOfRedZone !== this.game.playerWithBall.id) {\r\n                    this.wasPlayerWithBallOutsideOfRedZone = false;\r\n                }\r\n                if (!StadiumUtils_1.default.isInRedZone(StadiumUtils_1.default.getYardsFromXCoord(this.game.playerWithBall.getX()), this.game.playerWithBall.getTeam())) {\r\n                    this.wasPlayerWithBallOutsideOfRedZone = this.game.playerWithBall.id;\r\n                }\r\n                if (StadiumUtils_1.default.isOutOfMap(this.game.playerWithBall.getPosition())) {\r\n                    this.handlePlayerWithBallOutsideField(room);\r\n                }\r\n                else {\r\n                    if (this.hasPlayerPassedEndZoneLine(this.game.playerWithBall, this.game.invertTeam(this.game.playerWithBall.getTeam()))) {\r\n                        this.handleTouchdown(room);\r\n                        return;\r\n                    }\r\n                    if (this.game.interceptPlayer)\r\n                        this.handleInterceptPlayerLeftEndZone(this.game.interceptPlayer);\r\n                    const tackle = this.getTackle(room);\r\n                    if (tackle.players.length > 0)\r\n                        this.handleTackle(room, tackle);\r\n                    if (this.game.firstTackleTick && this.game.tickCount > this.game.firstTackleTick + Global.TICKS_PER_SECOND * this.game.timeToSendTackleMessageSeconds) {\r\n                        this.game.firstTackleTick = null;\r\n                        room.send({ message: `💪 ${Utils_1.default.getPlayersNames(this.firstTackle.players)} ${this.firstTackle.players.length > 1 ? \"tentaram\" : \"tentou\"} derrubar ${this.game.playerWithBall.name} mas ele continua!`, color: Global.Color.Yellow, style: \"bold\" });\r\n                    }\r\n                }\r\n            }\r\n            if (!this.game.playerWithBall || (this.game.down.sack && !this.game.down.sackBallTouched)) {\r\n                const ballPos = room.getBall().getPosition();\r\n                if (StadiumUtils_1.default.isOutOfMap(ballPos) && this.game.qbKickedBall)\r\n                    this.handleFailedPass(room);\r\n            }\r\n        });\r\n    }\r\n    setBallLine(room, pos = this.game.ballPosition) {\r\n        const x = StadiumUtils_1.default.getCoordinateFromYards(pos.team, pos.yards).x;\r\n        const d1 = room.getDisc(this.ballLineDiscsIndex[0]);\r\n        const d2 = room.getDisc(this.ballLineDiscsIndex[1]);\r\n        if (!d1 || !d2)\r\n            return;\r\n        d1.setPosition({ x, y: MapMeasures_1.default.OuterField[0].y });\r\n        d2.setPosition({ x, y: MapMeasures_1.default.OuterField[1].y });\r\n    }\r\n    resetBallLine(room) {\r\n        const d1 = room.getDisc(this.ballLineDiscsIndex[0]);\r\n        const d2 = room.getDisc(this.ballLineDiscsIndex[1]);\r\n        if (!d1 || !d2)\r\n            return;\r\n        d1.setPosition({ x: 0, y: 0 });\r\n        d2.setPosition({ x: 0, y: 0 });\r\n    }\r\n    setTouchdown(room, forTeam, automatic = false) {\r\n        this.game.mode = null;\r\n        if (!automatic && this.game.playerWithBall) {\r\n            this.game.playerWithBallFinalPosition = this.game.playerWithBall.getPosition();\r\n            if (!this.game.conversion) {\r\n                switch (this.game.playerWithBallState) {\r\n                    case \"receiver\":\r\n                        this.game.matchStats.add(this.game.quarterback, { passesPraTouchdown: 1 });\r\n                        this.game.matchStats.add(this.game.playerWithBall, { touchdownRecebidos: 1 });\r\n                        break;\r\n                    case \"runner\":\r\n                    case \"qbRunner\":\r\n                    case \"qbRunnerSacking\":\r\n                        this.game.matchStats.add(this.game.playerWithBall, { touchdownCorridos: 1 });\r\n                        break;\r\n                    case \"puntReturner\":\r\n                    case \"kickoffReturner\":\r\n                        this.game.matchStats.add(this.game.playerWithBall, { touchdownRetornados: 1 });\r\n                        break;\r\n                    case \"intercepter\":\r\n                        this.game.matchStats.add(this.game.playerWithBall, { pickSix: 1 });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            this.game.setPlayerWithBallStats();\r\n        }\r\n        if (!this.game.conversion) {\r\n            this.game.touchdownExtraPointTimeout = new Timer_1.default(() => this.game.extraPoint.set({ room, forTeam }), 2000);\r\n            if (forTeam === Global_1.Team.Red)\r\n                this.game.scoreRed += this.touchdownPoints;\r\n            else\r\n                this.game.scoreBlue += this.touchdownPoints;\r\n        }\r\n        else {\r\n            let points = !this.game.intercept ? this.game.extraPoint.conversionPoints : this.game.extraPoint.intConversionPoints;\r\n            this.game.kickOffReset = new Timer_1.default(() => this.game.kickOff.set({ room, forTeam: this.game.intercept ? this.game.invertTeam(forTeam) : forTeam }), 2000);\r\n            this.game.conversion = false;\r\n            if (forTeam === Global_1.Team.Red)\r\n                this.game.scoreRed += points;\r\n            else\r\n                this.game.scoreBlue += points;\r\n        }\r\n    }\r\n    setRedZoneTouchdown(room, forTeam, players, desc) {\r\n        const isConversion = this.game.conversion;\r\n        this.setTouchdown(room, forTeam, true);\r\n        if (!isConversion) {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 TOUCHDOWN AUTOMÁTICO!!! • ${desc} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        }\r\n        else {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 CONVERSÃO AUTOMÁTICA!!! • ${desc} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        }\r\n        for (const player of players) {\r\n            this.game.customAvatarManager.setPlayerAvatar(player, \"🤡\", this.clownEmojiTime);\r\n        }\r\n    }\r\n    hasPlayerPassedEndZoneLine(player, team) {\r\n        return ((team === Global_1.Team.Red &&\r\n            (player.getX() - player.getRadius()) <= MapMeasures_1.default.RedEndZoneStartPositionX)\r\n            ||\r\n                (team === Global_1.Team.Blue &&\r\n                    (player.getX() + player.getRadius()) >= MapMeasures_1.default.BlueEndZoneStartPositionX));\r\n    }\r\n    handleInterceptPlayerLeftEndZone(player) {\r\n        if (!this.game.interceptPlayerLeftEndZone && !this.hasPlayerPassedEndZoneLine(player, player.getTeam())) {\r\n            this.game.interceptPlayerLeftEndZone = true;\r\n        }\r\n    }\r\n    handleFailedPass(room) {\r\n        if (this.game.mode !== this.game.down.mode) {\r\n            let yards;\r\n            let teamPos;\r\n            let team;\r\n            let msg;\r\n            const ballPos = room.getBall().getPosition();\r\n            const name = this.name[0].toLocaleUpperCase() + this.name.slice(1);\r\n            if (this.mode === this.game.safety.mode || this.mode === this.game.punt.mode) {\r\n                if (ballPos.x > MapMeasures_1.default.EndZoneBlue[1].x || ballPos.x < MapMeasures_1.default.EndZoneRed[1].x) {\r\n                    const team = ballPos.x > MapMeasures_1.default.EndZoneBlue[1].x ? Global_1.Team.Blue : Global_1.Team.Red;\r\n                    this.setTouchback(room, this.game.invertTeam(this.game.teamWithBall), `${name} chutado para a end zone`, null, { team, yards: this.touchbackYardLine });\r\n                    return;\r\n                }\r\n                team = this.game.invertTeam(this.game.teamWithBall);\r\n                const pos = StadiumUtils_1.default.getYardsFromXCoord(room.getBall().getX());\r\n                yards = pos.yards;\r\n                teamPos = pos.team;\r\n                msg = `Bola colocada na linha em que saiu`;\r\n            }\r\n            else {\r\n                yards = 40;\r\n                team = this.game.invertTeam(this.game.teamWithBall);\r\n                teamPos = team;\r\n            }\r\n            room.send({ message: `❌ ${name} chutado para fora de campo • ` + (msg ?? `Bola na linha de ${yards} jardas`), color: Global.Color.Orange, style: \"bold\" });\r\n            this.game.down.set({ room, pos: { team: teamPos, yards }, forTeam: team, countDistanceFromNewPos: false });\r\n            return;\r\n        }\r\n        else {\r\n            const ball = room.getBall();\r\n            const ballWithinGoalLine = (StadiumUtils_1.default.ballWithinGoalLine(ball, this.game.interceptAttemptPlayer?.getTeam())\r\n                ||\r\n                    StadiumUtils_1.default.ballWithinGoalLine(ball, this.game.invertTeam(this.game.interceptAttemptPlayer?.getTeam())));\r\n            const ballOutsideField = StadiumUtils_1.default.isOutOfMap(ball.getPosition(), ball.getRadius() * 2);\r\n            if ((this.game.interceptAttemptPlayer || this.game.intercept) && ballWithinGoalLine && !ballOutsideField) {\r\n                room.send({ message: `🏈 INTERCEPTAÇÃO de ${this.game.interceptAttemptPlayer.name}!!! • Bola para o ${this.game.getTeamName(this.game.interceptAttemptPlayer.getTeam())}`, color: 0x00ffff, style: \"bold\" });\r\n                this.game.setBallDamping(room, Global.BallDamping.Default);\r\n                if (this.game.down.sack) {\r\n                    this.game.down.qbPassedInSack();\r\n                    this.game.down.sackBallTouched = true;\r\n                }\r\n                this.game.matchStats.add(this.game.quarterback, { interceptacoesLancadas: 1 });\r\n                this.game.matchStats.add(this.game.interceptAttemptPlayer, { interceptacoes: 1 });\r\n                this.handleInterceptPlayerLeftEndZone(this.game.interceptAttemptPlayer);\r\n                this.game.intercept = true;\r\n                this.game.setPlayerWithBall(room, this.game.interceptAttemptPlayer, \"intercepter\", true);\r\n                this.game.interceptPlayer = this.game.interceptAttemptPlayer;\r\n                this.game.interceptAttemptPlayer = null;\r\n                this.game.downCount = 0;\r\n                this.game.distance = 20;\r\n                this.game.teamWithBall = this.game.invertTeam(this.game.teamWithBall);\r\n                return;\r\n            }\r\n            else {\r\n                if (this.game.down.sack || this.game.down.sackBallTouched)\r\n                    return;\r\n                if (this.game.interceptAttemptPlayer) {\r\n                    room.send({ message: `❌ Interceptação falhou • ${this.game.interceptAttemptPlayer.name} errou o gol`, color: Global.Color.Orange, style: \"bold\" });\r\n                }\r\n                else {\r\n                    room.send({ message: `❌ Passe incompleto • Bola fora de campo`, color: Global.Color.Orange, style: \"bold\" });\r\n                }\r\n                if (!this.game.conversion) {\r\n                    this.game.down.set({ room });\r\n                }\r\n                else {\r\n                    this.game.resetToKickoff(room);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    setSafety(room, player, tacklers, message) {\r\n        if (player.getTeam() === Global_1.Team.Red)\r\n            this.game.scoreBlue += this.safetyPoints;\r\n        else\r\n            this.game.scoreRed += this.safetyPoints;\r\n        this.game.playerWithBallFinalPosition = player.getPosition();\r\n        this.game.setPlayerWithBallStats();\r\n        if (tacklers == null) {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `❌ ${player.name} saiu de campo dentro da End Zone • Safety • ${this.safetyPoints} pontos para o ${this.game.getTeamName(this.game.invertTeam(player.getTeam()))} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n            this.game.matchStats.add(player, { faltas: 1 });\r\n            this.game.safety.set({ room, forTeam: player.getTeam() });\r\n        }\r\n        else if (!this.game.conversion) {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `💪 ${player.name} derrubado por ${Utils_1.default.getPlayersNames(tacklers)} • Dentro da End Zone • ${message ? `${message} • ` : \"\"}Safety • ${this.safetyPoints} pontos para o ${this.game.getTeamName(this.game.invertTeam(player.getTeam()))} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n            this.game.matchStats.add(player, { faltas: 1 });\r\n            this.game.safety.set({ room, forTeam: player.getTeam() });\r\n        }\r\n        else {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `💪 ${player.name} derrubado por ${Utils_1.default.getPlayersNames(tacklers)} • Conversão falhou`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n            this.game.resetToKickoff(room);\r\n        }\r\n    }\r\n    setTouchback(room, forTeam, message, player, pos) {\r\n        room.send({ message: `🔙 ${message} • Touchback • ${this.game.conversion ? \"Conversão falhou\" : \"Bola na linha de 25\"}`, color: Global.Color.Yellow, style: \"bold\" });\r\n        this.game.playerWithBallFinalPosition = this.game.playerWithBall?.getPosition();\r\n        if (this.game.playerWithBall)\r\n            this.game.setPlayerWithBallStats();\r\n        if (!this.game.conversion) {\r\n            this.game.down.set({\r\n                room,\r\n                pos: pos ?? { team: forTeam, yards: this.touchbackYardLine },\r\n                forTeam: forTeam,\r\n                countDistanceFromNewPos: false\r\n            });\r\n        }\r\n        else {\r\n            this.game.resetToKickoff(room);\r\n        }\r\n    }\r\n    handleTackle(room, tackle) {\r\n        if (tackle.tackleCount === 1 && this.game.running && !this.game.firstTackleTick) {\r\n            this.game.firstTackleTick = this.game.tickCount;\r\n            this.firstTackle = tackle;\r\n            return;\r\n        }\r\n        if ((tackle.tackleCount >= this.touchesToTackleRunner) ||\r\n            (this.game.playerWithBall.id === this.game.quarterback?.id && tackle.tackleCount >= this.touchesToTackleQBRunner) ||\r\n            !this.game.running) {\r\n            if (this.hasPlayerPassedEndZoneLine(this.game.playerWithBall, this.game.playerWithBall.getTeam()) && !this.game.conversion) {\r\n                if (this.game.intercept) {\r\n                    tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1 }));\r\n                    if (this.game.interceptPlayerLeftEndZone) {\r\n                        this.game.playerWithBallFinalPosition = this.game.playerWithBall.getPosition();\r\n                        this.setSafety(room, this.game.playerWithBall, tackle.players, \"Voltou para a End Zone durante a interceptação\");\r\n                    }\r\n                    else {\r\n                        this.game.playerWithBallFinalPosition = this.game.playerWithBall.getPosition();\r\n                        this.setTouchback(room, this.game.playerWithBall.getTeam(), `Interceptador derrubado na End Zone`, this.game.playerWithBall);\r\n                    }\r\n                }\r\n                else {\r\n                    this.setSafety(room, this.game.playerWithBall, tackle.players);\r\n                }\r\n            }\r\n            else {\r\n                tackle.players.forEach(p => {\r\n                    this.game.customAvatarManager.setPlayerAvatar(p, \"💪\", 3000);\r\n                });\r\n                const fumble = (tackle.players.length >= 2 &&\r\n                    !this.game.conversion &&\r\n                    (this.game.playerWithBallState === \"receiver\" || this.game.playerWithBallState === \"qbRunnerSacking\") &&\r\n                    (this.game.down.sack || this.game.playerWithBallSetTick + this.timeToFumbleSeconds * Global.TICKS_PER_SECOND >= this.game.tickCount));\r\n                if (this.game.down.sack && this.game.quarterback && this.game.isPlayerBehindLineOfScrimmage(this.game.quarterback)) {\r\n                    if (fumble) {\r\n                        room.send({ message: `😵 FUMBLE DE ${this.game.playerWithBall.name}!!! Strip sack por ${Utils_1.default.getPlayersNames(tackle.players)}`, color: 0x00ffff, style: \"bold\" });\r\n                        tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1, sacks: 1, fumblesForcados: 1 }));\r\n                        this.game.matchStats.add(this.game.quarterback, { stripSackRecebidos: 1, fumbles: 1, sacksRecebidos: 1 });\r\n                        this.game.customAvatarManager.setPlayerAvatar(this.game.quarterback, \"😵\", 3000);\r\n                    }\r\n                    else {\r\n                        room.send({ message: `💪 ${this.game.playerWithBall.name} foi sackado por ${Utils_1.default.getPlayersNames(tackle.players)}`, color: Global.Color.Yellow, style: \"bold\" });\r\n                        tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1, sacks: 1 }));\r\n                        this.game.matchStats.add(this.game.quarterback, { sacksRecebidos: 1 });\r\n                    }\r\n                    this.game.playerWithBallState = \"sack\";\r\n                }\r\n                else {\r\n                    if (fumble) {\r\n                        room.send({ message: `😵 FUMBLE DE ${this.game.playerWithBall.name}!!! Forçado por ${Utils_1.default.getPlayersNames(tackle.players)}`, color: 0x00ffff, style: \"bold\" });\r\n                        tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1, fumblesForcados: 1 }));\r\n                        this.game.matchStats.add(this.game.playerWithBall, { fumbles: 1 });\r\n                        this.game.customAvatarManager.setPlayerAvatar(this.game.playerWithBall, \"😵\", 3000);\r\n                    }\r\n                    else {\r\n                        room.send({ message: `💪 ${this.game.playerWithBall.name} foi derrubado por ${Utils_1.default.getPlayersNames(tackle.players)}`, color: Global.Color.Yellow, style: \"bold\" });\r\n                        tackle.players.forEach(p => this.game.matchStats.add(p, { tackles: 1 }));\r\n                    }\r\n                }\r\n                this.game.playerWithBallFinalPosition = this.game.playerWithBall.getPosition();\r\n                this.game.setPlayerWithBallStats();\r\n                if (!this.game.conversion) {\r\n                    if (fumble) {\r\n                        this.game.downCount = 0;\r\n                        this.game.distance = 20;\r\n                        this.game.down.set({\r\n                            room,\r\n                            pos: StadiumUtils_1.default.getYardsFromXCoord(this.game.playerWithBall.getX()),\r\n                            countDistanceFromNewPos: false,\r\n                            forTeam: this.game.invertTeam(this.game.playerWithBall.getTeam()),\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.game.down.set({\r\n                            room,\r\n                            pos: StadiumUtils_1.default.getYardsFromXCoord(this.game.playerWithBall.getX()),\r\n                            forTeam: this.game.playerWithBall.getTeam(),\r\n                            countDistanceFromNewPos: this.game.mode === this.game.down.mode && !this.game.intercept\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this.game.resetToKickoff(room);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleTouchdown(room) {\r\n        this.game.mode = null;\r\n        const teamName = this.game.getTeamName(this.game.playerWithBall.getTeam());\r\n        const isConversion = this.game.conversion;\r\n        this.setTouchdown(room, this.game.playerWithBall.getTeam());\r\n        if (!isConversion) {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 ${this.game.intercept ? \"PICK SIX\" : \"TOUCHDOWN\"} de ${this.game.playerWithBall.name}!!! • +${this.touchdownPoints} pontos para o ${teamName} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        }\r\n        else {\r\n            Utils_1.default.sendSoundTeamMessage(room, { message: `🙌 ${this.game.intercept ? \"RETORNO DE INTERCEPTAÇÃO\" : \"CONVERSÃO\"} de ${this.game.playerWithBall.name}!!! • +${this.game.extraPoint.conversionPoints} pontos para o ${teamName} • ${this.game.getScoreMessage()}`, color: Global.Color.LimeGreen, style: \"bold\" });\r\n        }\r\n        this.game.customAvatarManager.setPlayerAvatar(this.game.playerWithBall, \"🔥\", 3000);\r\n    }\r\n    handlePlayerWithBallOutsideField(room) {\r\n        const playerPos = this.game.playerWithBall.getPosition();\r\n        if (((playerPos.x > Math.abs(MapMeasures_1.default.EndZoneRed[1].x)) ||\r\n            (playerPos.x < -Math.abs(MapMeasures_1.default.EndZoneBlue[1].x)))\r\n            ||\r\n                (((playerPos.x > Math.abs(MapMeasures_1.default.RedZoneRed[1].x)) &&\r\n                    (playerPos.x < -Math.abs(MapMeasures_1.default.RedZoneBlue[1].x)))\r\n                    &&\r\n                        ((playerPos.y < -Math.abs(MapMeasures_1.default.EndZoneBlue[1].y)) ||\r\n                            (playerPos.y > Math.abs(MapMeasures_1.default.EndZoneBlue[1].y))))\r\n                    && this.mode !== this.game.down.mode) {\r\n            this.setSafety(room, this.game.playerWithBall);\r\n        }\r\n        else {\r\n            room.send({ message: `❌ ${this.game.playerWithBall.name} pisou fora de campo`, color: Global.Color.Orange, style: \"bold\" });\r\n            this.game.playerWithBallFinalPosition = this.game.playerWithBall.getPosition();\r\n            this.game.setPlayerWithBallStats();\r\n            if (!this.game.conversion) {\r\n                this.game.down.set({\r\n                    room,\r\n                    pos: StadiumUtils_1.default.getYardsFromXCoord(this.game.playerWithBall.getX()),\r\n                    forTeam: this.game.playerWithBall.getTeam(),\r\n                    countDistanceFromNewPos: this.game.mode === this.game.down.mode && !this.game.intercept\r\n                });\r\n            }\r\n            else {\r\n                this.game.resetToKickoff(room);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.LandPlay = LandPlay;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/LandPlay.ts?");

/***/ }),

/***/ "./src/modules/modes/Mode.ts":
/*!***********************************!*\
  !*** ./src/modules/modes/Mode.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Mode = void 0;\r\nconst Module_1 = __importDefault(__webpack_require__(/*! ../../core/Module */ \"./src/core/Module.ts\"));\r\nclass Mode extends Module_1.default {\r\n    game;\r\n    constructor(game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n}\r\nexports.Mode = Mode;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Mode.ts?");

/***/ }),

/***/ "./src/modules/modes/Punt.ts":
/*!***********************************!*\
  !*** ./src/modules/modes/Punt.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Punt = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Command_1 = __importDefault(__webpack_require__(/*! ../../core/Command */ \"./src/core/Command.ts\"));\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Kick_1 = __webpack_require__(/*! ./Kick */ \"./src/modules/modes/Kick.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nclass Punt extends Kick_1.Kick {\r\n    name = \"punt\";\r\n    mode = \"punt\";\r\n    playerLineLengthPuntPuntingTeam = 100;\r\n    playerLineLengthPuntReceivingTeam = 200;\r\n    playerBackDistancePunt = 100;\r\n    constructor(room, game) {\r\n        super(room, game);\r\n    }\r\n    set({ room, forTeam = this.game.teamWithBall, pos = this.game.ballPosition }) {\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        this.game.resetPlay(room);\r\n        this.game.teamWithBall = forTeam;\r\n        this.game.ballPosition = pos;\r\n        this.game.downCount = 0;\r\n        this.game.distance = 20;\r\n        room.send({ message: `🤾 Punt para o ${this.game.getTeamName(forTeam)}`, color: Global.Color.LightGreen, style: \"bold\" });\r\n        const ballPosInMap = StadiumUtils_1.default.getCoordinateFromYards(pos.team, pos.yards);\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        ball.setPosition(ballPosInMap);\r\n        this.game.setBallKickForce(room, 1.2);\r\n        let red = room.getPlayers().red();\r\n        let blue = room.getPlayers().blue();\r\n        let puntingTeam = (forTeam === Global_1.Team.Red ? red : blue);\r\n        let receivingTeam = forTeam === Global_1.Team.Red ? blue : red;\r\n        this.game.teamWithBall = forTeam;\r\n        const setPuntingTeamPositions = (team) => {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthPuntPuntingTeam }, { x: 0, y: -this.playerLineLengthPuntPuntingTeam }, team.length);\r\n            for (let i = 0; i < team.length; i++) {\r\n                const player = team[i];\r\n                player.setPosition({ x: ballPosInMap.x + (forTeam === Global_1.Team.Red ? -this.playerBackDistancePunt : this.playerBackDistancePunt), y: positions[i].y });\r\n            }\r\n        };\r\n        const setReceivingTeamPositions = (team) => {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthPuntReceivingTeam }, { x: 0, y: -this.playerLineLengthPuntReceivingTeam }, team.length);\r\n            let xPos = forTeam === Global_1.Team.Red ? MapMeasures_1.default.PuntBluePositionX : MapMeasures_1.default.PuntRedPositionX;\r\n            for (let i = 0; i < team.length; i++) {\r\n                const player = team[i];\r\n                player.setPosition({ x: xPos, y: positions[i].y });\r\n            }\r\n        };\r\n        setPuntingTeamPositions(puntingTeam);\r\n        setReceivingTeamPositions(receivingTeam);\r\n        this.setBallLine(room);\r\n        this.game.down.resetFirstDownLine(room);\r\n        this.game.blockTeam(room, this.game.invertTeam(forTeam));\r\n        this.game.mode = this.mode;\r\n    }\r\n    reset() { }\r\n    puntCommand($, room) {\r\n        if (!room.isGameInProgress()) {\r\n            $.caller.reply({ message: `⚠️ Não há um jogo em progresso!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.getTeam() === Global_1.Team.Spectators) {\r\n            $.caller.reply({ message: `⚠️ Você não está em nenhum time!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.getTeam() !== this.game.teamWithBall) {\r\n            $.caller.reply({ message: `⚠️ Seu time não está com a posse da bola!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if (this.game.mode !== this.game.down.waitingHikeMode) {\r\n            $.caller.reply({ message: `⚠️ Você não pode pedir punt agora!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        if ($.caller.distanceTo(room.getBall()) > 50) {\r\n            $.caller.reply({ message: `⚠️ Você está longe demais da bola!`, sound: 2, color: Global.Color.Tomato, style: \"bold\" });\r\n            return false;\r\n        }\r\n        room.send({ message: `🦵 ${$.caller.name} solicitou PUNT!`, color: Global.Color.Yellow, style: \"bold\" });\r\n        this.set({ room });\r\n        return false;\r\n    }\r\n}\r\n__decorate([\r\n    (0, Command_1.default)({\r\n        name: \"punt\"\r\n    })\r\n], Punt.prototype, \"puntCommand\", null);\r\nexports.Punt = Punt;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Punt.ts?");

/***/ }),

/***/ "./src/modules/modes/Safety.ts":
/*!*************************************!*\
  !*** ./src/modules/modes/Safety.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Safety = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Global = __importStar(__webpack_require__(/*! ../../Global */ \"./src/Global.ts\"));\r\nconst Kick_1 = __webpack_require__(/*! ./Kick */ \"./src/modules/modes/Kick.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ../../utils/MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nconst StadiumUtils_1 = __importDefault(__webpack_require__(/*! ../../utils/StadiumUtils */ \"./src/utils/StadiumUtils.ts\"));\r\nclass Safety extends Kick_1.Kick {\r\n    name = \"safety\";\r\n    mode = \"safety\";\r\n    playerLineLengthSafetyTeam = 100;\r\n    playerLineLengthReceivingTeam = 200;\r\n    playerBackDistanceSafety = 100;\r\n    safetyYardLine = 20;\r\n    constructor(room, game) {\r\n        super(room, game);\r\n    }\r\n    set({ room, forTeam = this.game.teamWithBall }) {\r\n        this.game.mode = null;\r\n        this.game.reset(room);\r\n        this.game.resetPlay(room);\r\n        this.game.teamWithBall = forTeam;\r\n        this.game.ballPosition = { team: this.game.teamWithBall, yards: this.safetyYardLine };\r\n        this.game.downCount = 0;\r\n        this.game.distance = 20;\r\n        room.send({ message: `🤾 Safety para o ${this.game.getTeamName(forTeam)}`, color: Global.Color.LightGreen, style: \"bold\" });\r\n        const ballPosInMap = StadiumUtils_1.default.getCoordinateFromYards(forTeam, this.safetyYardLine);\r\n        const ball = room.getBall();\r\n        ball.setVelocityX(0);\r\n        ball.setVelocityY(0);\r\n        ball.setPosition(ballPosInMap);\r\n        let red = room.getPlayers().red();\r\n        let blue = room.getPlayers().blue();\r\n        let safetyTeam = (forTeam === Global_1.Team.Red ? red : blue);\r\n        let receivingTeam = forTeam === Global_1.Team.Red ? blue : red;\r\n        this.game.teamWithBall = forTeam;\r\n        const setPuntingTeamPositions = (team) => {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthSafetyTeam }, { x: 0, y: -this.playerLineLengthSafetyTeam }, team.length);\r\n            for (let i = 0; i < team.length; i++) {\r\n                const player = team[i];\r\n                player.setPosition({ x: ballPosInMap.x + (forTeam === Global_1.Team.Red ? -this.playerBackDistanceSafety : this.playerBackDistanceSafety), y: positions[i].y });\r\n            }\r\n        };\r\n        const setReceivingTeamPositions = (team) => {\r\n            const positions = MathUtils_1.default.getPointsAlongLine({ x: 0, y: this.playerLineLengthReceivingTeam }, { x: 0, y: -this.playerLineLengthReceivingTeam }, team.length);\r\n            let xPos = forTeam === Global_1.Team.Red ? MapMeasures_1.default.PuntBluePositionX : MapMeasures_1.default.PuntRedPositionX;\r\n            for (let i = 0; i < team.length; i++) {\r\n                const player = team[i];\r\n                player.setPosition({ x: xPos, y: positions[i].y });\r\n            }\r\n        };\r\n        setPuntingTeamPositions(safetyTeam);\r\n        setReceivingTeamPositions(receivingTeam);\r\n        this.setBallLine(room);\r\n        this.game.down.resetFirstDownLine(room);\r\n        this.game.blockTeam(room, this.game.invertTeam(forTeam));\r\n        this.game.mode = this.mode;\r\n    }\r\n    reset() { }\r\n}\r\nexports.Safety = Safety;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Safety.ts?");

/***/ }),

/***/ "./src/modules/modes/Tackleable.ts":
/*!*****************************************!*\
  !*** ./src/modules/modes/Tackleable.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Tackleable = void 0;\r\nconst Global_1 = __webpack_require__(/*! ../../core/Global */ \"./src/core/Global.ts\");\r\nconst Mode_1 = __webpack_require__(/*! ./Mode */ \"./src/modules/modes/Mode.ts\");\r\nclass Tackleable extends Mode_1.Mode {\r\n    distanceToTackle = 0.5;\r\n    constructor(game) {\r\n        super(game);\r\n    }\r\n    getTackle(room, playerBeingTackled = this.game.playerWithBall) {\r\n        const teamAgainstPlayerWithBall = playerBeingTackled.getTeam() === Global_1.Team.Red ? room.getPlayers().blue() : room.getPlayers().red();\r\n        const tackles = { tackleCount: playerBeingTackled.id === this.game.playerWithBall?.id ? this.game.playerWithBallTackleCount : 0, players: [] };\r\n        for (const player of teamAgainstPlayerWithBall) {\r\n            if (playerBeingTackled.distanceTo(player) < this.distanceToTackle) {\r\n                tackles.players.push(player);\r\n                if (playerBeingTackled.id === this.game.playerWithBall?.id) {\r\n                    tackles.tackleCount = ++this.game.playerWithBallTackleCount;\r\n                }\r\n                else {\r\n                    tackles.tackleCount++;\r\n                }\r\n            }\r\n        }\r\n        return tackles;\r\n    }\r\n}\r\nexports.Tackleable = Tackleable;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/modules/modes/Tackleable.ts?");

/***/ }),

/***/ "./src/utils/MapMeasures.ts":
/*!**********************************!*\
  !*** ./src/utils/MapMeasures.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst MapMeasures = {\r\n    EndZoneRed: [\r\n        { x: -930, y: -266 },\r\n        { x: -775, y: 266 }\r\n    ],\r\n    EndZoneBlue: [\r\n        { x: 930, y: -266 },\r\n        { x: 775, y: 266 }\r\n    ],\r\n    RedZoneRed: [\r\n        { x: -775, y: -266 },\r\n        { x: -462, y: 266 }\r\n    ],\r\n    RedZoneBlue: [\r\n        { x: 775, y: 266 },\r\n        { x: 462, y: -266 }\r\n    ],\r\n    InnerField: [\r\n        { x: -775, y: -266 },\r\n        { x: 775, y: 266 }\r\n    ],\r\n    OuterField: [\r\n        { x: -930, y: -266 },\r\n        { x: 930, y: 266 }\r\n    ],\r\n    RedGoalLine: [\r\n        { x: -930, y: -60 },\r\n        { x: -930, y: 60 }\r\n    ],\r\n    BlueGoalLine: [\r\n        { x: 930, y: -60 },\r\n        { x: 930, y: 60 }\r\n    ],\r\n    HashesHeight: {\r\n        y1: -80,\r\n        y2: 80\r\n    },\r\n    SingleHashHeight: 20,\r\n    RedEndZoneStartPositionX: -775,\r\n    BlueEndZoneStartPositionX: 775,\r\n    RedEndZoneLineCenter: { x: -775, y: 0 },\r\n    BlueEndZoneLineCenter: { x: 775, y: 0 },\r\n    PuntRedPositionX: -980,\r\n    PuntBluePositionX: 980,\r\n    Yard: 15.5,\r\n    HashSubdivision: 31,\r\n    YardsBetween0MarkAndGoalLine: 10\r\n};\r\nexports[\"default\"] = MapMeasures;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/MapMeasures.ts?");

/***/ }),

/***/ "./src/utils/MathUtils.ts":
/*!********************************!*\
  !*** ./src/utils/MathUtils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass MathUtils {\r\n    static getBallSpeed(ball) {\r\n        return Math.sqrt(ball.getVelocityX() * ball.getVelocityX() + ball.getVelocityY() * ball.getVelocityY());\r\n    }\r\n    static getBallPathFromPosition(p1, p2, length) {\r\n        let ang;\r\n        let ang1 = Math.atan2(p2.y - p1.y, p2.x - p1.x) > 0 ? 1 : -1;\r\n        let ang2 = Math.atan2(p2.x - p1.x, p2.y - p1.y) > 0 ? 1 : -1;\r\n        if ((ang1 > 0 && ang2 > 0) || (ang1 < 0 && ang2 > 0))\r\n            ang = 1;\r\n        else if ((ang1 > 0 && ang2 < 0) || (ang1 < 0 && ang2 < 0))\r\n            ang = -1;\r\n        let m = (p2.y - p1.y) / (p2.x - p1.x);\r\n        let e = Math.sqrt(1 + m * m);\r\n        let c = {\r\n            x: p2.x + length / e * ang,\r\n            y: p2.y + m * (length / (e * ang))\r\n        };\r\n        return [c, p2];\r\n    }\r\n    static getDistanceBetweenPoints(p1, p2) {\r\n        const dx = p1.x - p2.x;\r\n        const dy = p1.y - p2.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    static getPointOfIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n            return false;\r\n        }\r\n        let denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n        if (denominator === 0) {\r\n            return false;\r\n        }\r\n        let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n        let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\r\n        if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n            return false;\r\n        }\r\n        let x = x1 + ua * (x2 - x1);\r\n        let y = y1 + ua * (y2 - y1);\r\n        return { x, y };\r\n    }\r\n    static getPointsAlongLine(start, end, numberOfPoints, preventZeroY = true) {\r\n        const maxY = 5;\r\n        const minY = -5;\r\n        numberOfPoints++;\r\n        let stepX = (end.x - start.x) / numberOfPoints;\r\n        let stepY = (end.y - start.y) / numberOfPoints;\r\n        let arr = [];\r\n        for (let i = 1; i < numberOfPoints; i++) {\r\n            let x = start.x + stepX * i;\r\n            let y = start.y + stepY * i;\r\n            if (preventZeroY && y == 0)\r\n                y = Math.random() * (maxY - minY) + minY;\r\n            arr.push({ x, y });\r\n        }\r\n        return arr;\r\n    }\r\n    static pointCircleCollide(point, circle, r) {\r\n        if (r === 0)\r\n            return false;\r\n        let dx = circle[0] - point[0];\r\n        let dy = circle[1] - point[1];\r\n        return dx * dx + dy * dy <= r * r;\r\n    }\r\n    static lineCircleCollide(a, b, circle, radius, nearest) {\r\n        let tmp = [0, 0];\r\n        if (this.pointCircleCollide(a, circle, radius)) {\r\n            if (nearest) {\r\n                nearest[0] = a[0];\r\n                nearest[1] = a[1];\r\n            }\r\n            return true;\r\n        }\r\n        if (this.pointCircleCollide(b, circle, radius)) {\r\n            if (nearest) {\r\n                nearest[0] = b[0];\r\n                nearest[1] = b[1];\r\n            }\r\n            return true;\r\n        }\r\n        let x1 = a[0], y1 = a[1], x2 = b[0], y2 = b[1], cx = circle[0], cy = circle[1];\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        let lcx = cx - x1;\r\n        let lcy = cy - y1;\r\n        let dLen2 = dx * dx + dy * dy;\r\n        let px = dx;\r\n        let py = dy;\r\n        if (dLen2 > 0) {\r\n            let dp = (lcx * dx + lcy * dy) / dLen2;\r\n            px *= dp;\r\n            py *= dp;\r\n        }\r\n        if (!nearest)\r\n            nearest = tmp;\r\n        nearest[0] = x1 + px;\r\n        nearest[1] = y1 + py;\r\n        let pLen2 = px * px + py * py;\r\n        return this.pointCircleCollide(nearest, circle, radius) && pLen2 <= dLen2 && (px * dx + py * dy) >= 0;\r\n    }\r\n}\r\nexports[\"default\"] = MathUtils;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/MathUtils.ts?");

/***/ }),

/***/ "./src/utils/StadiumUtils.ts":
/*!***********************************!*\
  !*** ./src/utils/StadiumUtils.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nconst MapMeasures_1 = __importDefault(__webpack_require__(/*! ./MapMeasures */ \"./src/utils/MapMeasures.ts\"));\r\nconst MathUtils_1 = __importDefault(__webpack_require__(/*! ./MathUtils */ \"./src/utils/MathUtils.ts\"));\r\nfunction getClosestNumber(arr, num) {\r\n    return arr.reduce((prev, curr) => {\r\n        return (Math.abs(curr - num) < Math.abs(prev - num) ? curr : prev);\r\n    });\r\n}\r\nclass StadiumUtils {\r\n    static addYardsToFieldPosition(pos, yards, teamAdvancing, negativeYards = false) {\r\n        const newPos = { ...pos };\r\n        if (teamAdvancing === Global_1.Team.Blue) {\r\n            newPos.yards += newPos.team === Global_1.Team.Red ? -yards : yards;\r\n        }\r\n        else {\r\n            newPos.yards += newPos.team === Global_1.Team.Red ? yards : -yards;\r\n        }\r\n        if (newPos.yards > 50) {\r\n            newPos.team = newPos.team === Global_1.Team.Red ? Global_1.Team.Blue : Global_1.Team.Red;\r\n            newPos.yards = 50 - (newPos.yards - 50);\r\n        }\r\n        if (!negativeYards && newPos.yards < 1)\r\n            newPos.yards = 1;\r\n        return newPos;\r\n    }\r\n    static getCoordinateFromYards(paramOne, paramTwo) {\r\n        const { team, yards } = typeof paramOne === \"object\" ? paramOne : { team: paramOne, yards: paramTwo };\r\n        if (team === Global_1.Team.Red) {\r\n            return { x: MapMeasures_1.default.RedEndZoneLineCenter.x + (yards * MapMeasures_1.default.Yard), y: 0 };\r\n        }\r\n        return { x: MapMeasures_1.default.BlueEndZoneLineCenter.x - (yards * MapMeasures_1.default.Yard), y: 0 };\r\n    }\r\n    static getYardDifferenceBetweenPositions(pos1, pos2, team) {\r\n        let diff = Math.abs(pos1.x - pos2.x);\r\n        if (team === Global_1.Team.Red && pos1.x > pos2.x)\r\n            diff = -diff;\r\n        return Math.round(diff / MapMeasures_1.default.Yard);\r\n    }\r\n    static getDifferenceBetweenFieldPositions(pos1, pos2, teamAdvancing) {\r\n        let yards1, yards2;\r\n        yards1 = pos1.team === Global_1.Team.Blue ? (50 - pos1.yards) + 50 : pos1.yards;\r\n        yards2 = pos2.team === Global_1.Team.Blue ? (50 - pos2.yards) + 50 : pos2.yards;\r\n        const diff = Math.abs(yards1 - yards2);\r\n        if (teamAdvancing) {\r\n            if (teamAdvancing === Global_1.Team.Red) {\r\n                if (yards1 > yards2)\r\n                    return diff;\r\n                else\r\n                    return -diff;\r\n            }\r\n            else {\r\n                if (yards1 < yards2)\r\n                    return diff;\r\n                else\r\n                    return -diff;\r\n            }\r\n        }\r\n        else {\r\n            return diff;\r\n        }\r\n    }\r\n    static isOutOfMap(pos, tolerance = 0) {\r\n        return pos.y < -Math.abs(MapMeasures_1.default.OuterField[0].y) - tolerance ||\r\n            pos.y > Math.abs(MapMeasures_1.default.OuterField[0].y) + tolerance ||\r\n            pos.x < -Math.abs(MapMeasures_1.default.OuterField[0].x) - tolerance ||\r\n            pos.x > Math.abs(MapMeasures_1.default.OuterField[0].x) + tolerance;\r\n    }\r\n    static isInRedZone(pos, team) {\r\n        const coords = this.getCoordinateFromYards(pos.team, pos.yards);\r\n        let redZone;\r\n        if (team === Global_1.Team.Red) {\r\n            redZone = MapMeasures_1.default.RedZoneRed;\r\n            return coords.x >= redZone[0].x && coords.x <= redZone[1].x && coords.y >= redZone[0].y && coords.y <= redZone[1].y;\r\n        }\r\n        else {\r\n            redZone = MapMeasures_1.default.RedZoneBlue;\r\n            return coords.x <= redZone[0].x && coords.x >= redZone[1].x && coords.y <= redZone[0].y && coords.y >= redZone[1].y;\r\n        }\r\n    }\r\n    static getYardsFromXCoord(x) {\r\n        let yards = [];\r\n        let yardCount = 1;\r\n        for (let i = MapMeasures_1.default.RedEndZoneLineCenter.x + MapMeasures_1.default.Yard; yardCount < 100; i += MapMeasures_1.default.Yard) {\r\n            yards.push({ yard: yardCount++, xPos: i });\r\n        }\r\n        let point = yards.find(z => z.xPos === getClosestNumber(yards.map(y => y.xPos), x));\r\n        if (point.yard <= 50) {\r\n            return { team: Global_1.Team.Red, yards: point.yard };\r\n        }\r\n        else {\r\n            return { team: Global_1.Team.Blue, yards: 50 - (point.yard - 50) };\r\n        }\r\n    }\r\n    static ballWithinGoalLine(ball, ofTeam) {\r\n        let goalLine;\r\n        if (ofTeam === Global_1.Team.Red) {\r\n            goalLine = MapMeasures_1.default.RedGoalLine;\r\n        }\r\n        else {\r\n            goalLine = MapMeasures_1.default.BlueGoalLine;\r\n        }\r\n        const a = [goalLine[0].x, goalLine[0].y];\r\n        const b = [goalLine[1].x, goalLine[1].y];\r\n        return MathUtils_1.default.lineCircleCollide(a, b, [ball.getX(), ball.getY()], Math.max(ball.getRadius(), ball.getVelocity()));\r\n    }\r\n}\r\nexports[\"default\"] = StadiumUtils;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/StadiumUtils.ts?");

/***/ }),

/***/ "./src/utils/Timer.ts":
/*!****************************!*\
  !*** ./src/utils/Timer.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass Timer {\r\n    callback;\r\n    timerId;\r\n    start;\r\n    remaining;\r\n    finishTime;\r\n    args;\r\n    paused = false;\r\n    constructor(callback, delay, ...args) {\r\n        this.callback = callback;\r\n        this.remaining = delay;\r\n        this.args = args;\r\n        this.finishTime = delay;\r\n        this.resume();\r\n    }\r\n    resume() {\r\n        this.paused = false;\r\n        this.start = Date.now();\r\n        this.finishTime = this.start + this.remaining;\r\n        clearTimeout(this.timerId);\r\n        this.timerId = window.setTimeout(this.callback, this.remaining, ...this.args);\r\n    }\r\n    pause() {\r\n        if (this.paused)\r\n            return;\r\n        this.paused = true;\r\n        window.clearTimeout(this.timerId);\r\n        this.remaining -= Date.now() - this.start;\r\n    }\r\n    stop() {\r\n        this.paused = false;\r\n        window.clearTimeout(this.timerId);\r\n    }\r\n    getRemainingTime() {\r\n        return Math.max(0, this.paused ? this.remaining : this.finishTime - Date.now());\r\n    }\r\n}\r\nexports[\"default\"] = Timer;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/Timer.ts?");

/***/ }),

/***/ "./src/utils/Translate.ts":
/*!********************************!*\
  !*** ./src/utils/Translate.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst pt_BR_json_1 = __importDefault(__webpack_require__(/*! ../langpacks/pt-BR.json */ \"./src/langpacks/pt-BR.json\"));\r\nfunction translate(str, ...args) {\r\n    let newStr = pt_BR_json_1.default[str];\r\n    if (!newStr) {\r\n        return `⚠️ Erro: \"${newStr}\" não encontrado`;\r\n    }\r\n    let times = (newStr.match(/\\%s/g) || []).length;\r\n    for (let i = 0; i < times; i++) {\r\n        const arg = args[i];\r\n        newStr = newStr.replace(\"%s\", arg ?? \"\");\r\n    }\r\n    return newStr;\r\n}\r\nexports[\"default\"] = translate;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/Translate.ts?");

/***/ }),

/***/ "./src/utils/Utils.ts":
/*!****************************!*\
  !*** ./src/utils/Utils.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Global_1 = __webpack_require__(/*! ../core/Global */ \"./src/core/Global.ts\");\r\nclass Utils {\r\n    static getFormattedSeconds(time) {\r\n        if (time < 60) {\r\n            return `${time} segundo${time > 1 || time < -1 ? \"s\" : \"\"}`;\r\n        }\r\n        else if (time >= 60 && time < 3600) {\r\n            return `${~~(time / 60)} minuto${time >= 120 ? \"s\" : \"\"}`;\r\n        }\r\n        else if (time >= 3600) {\r\n            return `${~~((time / 60) / 60)} hora${time >= 7200 ? \"s\" : \"\"}`;\r\n        }\r\n        else {\r\n            return time + \"\";\r\n        }\r\n    }\r\n    static fancyTimeFormat(duration) {\r\n        let hrs = ~~(duration / 3600);\r\n        let mins = ~~((duration % 3600) / 60);\r\n        let secs = ~~duration % 60;\r\n        let ret = \"\";\r\n        if (hrs > 0) {\r\n            ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\r\n        }\r\n        ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\r\n        ret += \"\" + secs;\r\n        return ret;\r\n    }\r\n    static getPlayersNames(players) {\r\n        let playersNames = players.map(p => `${p.name}`);\r\n        if (players.length > 1) {\r\n            return `${playersNames.slice(0, -1).join(\", \")} e ${playersNames.slice(-1)}`;\r\n        }\r\n        else {\r\n            return playersNames[0];\r\n        }\r\n    }\r\n    static sendSoundTeamMessage(room, message) {\r\n        room.getPlayers().forEach(p => {\r\n            if (p.getTeam() !== Global_1.Team.Spectators) {\r\n                p.reply({ ...message, sound: 2 });\r\n            }\r\n            else {\r\n                p.reply({ ...message });\r\n            }\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = Utils;\r\n\n\n//# sourceURL=webpack://bfl-bot/./src/utils/Utils.ts?");

/***/ }),

/***/ "./src/langpacks/pt-BR.json":
/*!**********************************!*\
  !*** ./src/langpacks/pt-BR.json ***!
  \**********************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"GAME_WIN\":\"🎉 Vitória do %s! Red %s • %s Blue\",\"GAME_STOPPED_BY\":\"🔚 Jogo encerrado por %s! Red %s • %s Blue\",\"OVERTIME\":\"🕒 Overtime! O primeiro time a pontuar vence\",\"LAST_PLAY\":\"🕒 Última jogada! Jogo acabará em instantes caso não ocorra uma falta defensiva\",\"CANNOT_CHANGE_MAP\":\"⚠️ Você não pode alterar o mapa!\",\"END_GAME_TIME_ADJUSTED_AFTER_PENALTY\":\"🕒 Tempo de término da partida ajustado para %s após falta defensiva\",\"RETURNED_PUNT\":\"🏈 Punt retornado por %s\",\"RETURNED_KICKOFF\":\"🏈 Kickoff retornado por %s\",\"ILLEGAL_TOUCH_SAME_TEAM\":\"❌ Toque ilegal de %s • Bola pega pelo mesmo time que a chutou\",\"RECEIVER_LEFT_IN_KICK\":\"🚪 Recebedor saiu durante o %s\",\"RECEIVER_LEFT_IN_HIKE\":\"🚪 Recebedor saiu durante a descida\",\"QUARTERBACK_LEFT_IN_HIKE\":\"🚪 QB saiu durante a descida • Repete a descida\",\"INCOMPLETE_PASS\":\"🚧 Passe incompleto • Bloqueado por %s\",\"INCOMPLETE_PASS_CONVERSION_FAILED\":\"• Conversão falhou\",\"CONVERSION_FAILED\":\"😲 CONVERSÃO DO %s FALHOU!!!\",\"NOT_ADMIN\":\"⚠️ Você não é admin!\",\"GAME_NOT_IN_PROGRESS\":\"⚠️ Não há nenhum jogo em progresso!\",\"CANNOT_USE_COMMAND_IN_PLAY\":\"⚠️ Este comando não pode ser utilizado no meio de uma jogada!\",\"INVALID_TEAM\":\"⚠️ Time inválido! Use: %ssetteam <red/blue> <time>\",\"TEAM_NOT_FOUND\":\"⚠️ Time não encontrando! Use %steamlist para ver a lista de times\",\"NOT_ON_TEAM\":\"⚠️ Você não está em nenhum time!\",\"TEAM_WITHOUT_BALL\":\"⚠️ Seu time não está com a posse da bola!\",\"CANNOT_FG_NOW\":\"⚠️ Você não pode pedir FG agora!\",\"CANNOT_FG_AT_THIS_DISTANCE\":\"⚠️ Você não pode pedir FG a essa distância da end zone!\",\"FAR_AWAY_FROM_BALL\":\"⚠️ Você está longe demais da bola!\",\"CARRIED_BALL_FG\":\"❌ Condução ilegal da bola durante o Field Goal • Perde o FG\",\"TOUCHED_BALL_FG_SAME_TEAM\":\"❌ Dois toques na bola pelo time que chutou • Ilegal • FG falhou\",\"TOUCHED_BALL_FG_DEFENSE\":\"🙌 Toque ilegal da equipe adversária durante o Field Goal • FG automático para o %s • +%s pontos • %s\",\"TOUCHED_BALL_FG_OFFENSE\":\"🙌 Toque ilegal de %s durante o Field Goal • FG falhou\",\"TACKLED_QB_FG\":\"💪 Chutador %s derrubado por %s faltando %s • FG falhou\",\"DETECTED_FAILED_FG\":\"🤖 Detectado Field Goal falho • Bola para o outro time\",\"FAILED_FG_BALL_STOPPED\":\"🥅 Errou Field Goal • Bola parou antes de chegar no gol\",\"KICKER_TOO_FAR_FROM_BALL\":\"🥅 Field Goal falho • Chutador se afastou demais da bola\",\"TOOK_TOO_LONG_FG\":\"❌ Demorou demais pra chutar, perde o field goal!\",\"SET_FG\":\"🔱 %s solicitou FG!\",\"FG\":\"🥅 Field Goal para o %s • %s para chutar o FG\",\"CHANGED_TEAM_COLORS\":\"🥋 %s alterou o uniforme do %s para %s\",\"TEAM_LIST\":\"🥋 Uniformes (%s): %s.\",\"GAME_RECORDED\":\"🎥 Esta partida foi gravada (ID: %s) e está disponível em nosso Discord!\",\"QUARTERBACK_BLITZ\":\"❌ Ultrapassagem ilegal do QB da linha de scrimmage aos %s\",\"QUARTERBACK_BLITZ_CONVERSION\":\"❌ Ultrapassagem ilegal do QB da linha de scrimmage aos %s • Perde a conversão\",\"QUARTERBACK_RUN\":\"🏃 Corrida do QB por %s\",\"QUARTERBACK_CARRIED_BALL_HIKE\":\"❌ Condução ilegal da bola pelo QB • Perde a descida\",\"QUARTERBACK_CARRIED_BALL_CONVERSION\":\"❌ Condução ilegal da bola pelo QB • Perde a conversão\",\"RUN\":\"🏃 Corrida de %s\",\"ILLEGAL_RUN_HIKE\":\"❌ Corrida ilegal de %s • Perde a descida\",\"ILLEGAL_RUN_CONVERSION\":\"❌ Corrida ilegal de %s • Perde a conversão\",\"AUTO_TOUCHDOWN_BLITZ\":\"Ultrapassagem ilegal da linha de scrimmage por %s aos %s\",\"REDZONE_BLITZ\":\"❌ Ultrapassagem ilegal da linha de scrimmage por %s aos %s na Red Zone • %s/%s para Touchdown Automático • %s jardas de penalidade\",\"BLITZ\":\"❌ Ultrapassagem ilegal da linha de scrimmage por %s aos %s • %s jardas de penalidade\",\"SACK_ATTEMPT\":\"🏃 Tentativa de sack por %s contra o QB %s\",\"INTERCEPTION_FAILED\":\"❌ Passe incompleto • Tentativa de intercepção por %s falhou • Passe bloqueado por %s\",\"GAME_PAUSED\":\"⏸️ Jogo pausado • Tempo para dar hike foi pausado\",\"GAME_RESUMED\":\"⏸️ Jogo despausado por %s • Tempo para dar hike retomado\",\"HIKE_BLOCKED_OFFENSIVE_BLITZ\":\"⚠️ Foram encontrados jogadores do %s (%s) além da linha de scrimmage, hike bloqueado!\",\"HIKE_BLOCKED_OFFENSIVE_BLITZ_PLAYER_WARNING\":\"🚨 Você não pode ficar atrás da linha da bola antes do hike!\",\"HIKED\":\"🌳 Bola em jogo! 🌳\",\"HIKE_DISABLED\":\"• Tempo para dar hike está desativado\",\"HIKE_TIME\":\"• O %s tem %s para dar hike\",\"CONVERSION_ATTEMPT\":\"*️⃣ Tentativa de conversão de 2 pontos do %s\",\"WON_20_YARDS\":\"• Conseguiram conquistar as 20 jardas\",\"FIRST_DOWN\":\"• Primeira descida do %s\",\"TURNOVER_ON_DOWNS\":\"• Fim das descidas do %s\",\"NTH_DOWN\":\"• %sª descida\",\"TOOK_TO_LONG_TO_HIKE\":\"❌ Demorou demais pra chutar, perde 1 descida!\",\"TOOK_TO_LONG_TO_KICK_CONVERSION\":\"❌ Demorou demais pra chutar, perde a conversão!\",\"BALL_RECEIVED\":\"🏈 Bola recebida por %s\",\"ILLEGAL_TOUCH_OF_AT\":\"Toque ilegal de %s aos %s\",\"ILLEGAL_TOUCH_REDZONE_OF_AT_PENALTY\":\"❌ Toque ilegal de %s na Red Zone aos %s • %s/%s para Touchdown Automático • %s jardas de penalidade\",\"ILLEGAL_TOUCH_REDZONE_OF_PENALTY\":\"❌ Toque ilegal de %s na Red Zone • %s/%s para Touchdown Automático • %s jardas de penalidade\",\"ILLEGAL_TOUCH_OF_PENALTY\":\"❌ Toque ilegal de %s • %s jardas de penalidade\",\"ILLEGAL_TOUCH_OF_AT_PENALTY\":\"❌ Toque ilegal de %s aos %s • %s jardas de penalidade\",\"ILLEGAL_TOUCH_OF\":\"❌ Toque ilegal de %s\",\"INTERCEPTION_ATTEMPT_DETECTED\":\"🤖 Foi detectado uma tentativa de interceptação por %s • Contato com a bola foi desativado\",\"COMMAND_CHT_DISABLE_ALL\":\"⚙️ %s desativou o tempo para dar hike para todas as descidas\",\"COMMAND_CHT_DISABLE_THIS\":\"⚙️ %s desativou o tempo para dar hike para esta descida\",\"COMMAND_CHT_ENABLE\":\"⚙️ %s ativou o tempo para dar hike para as próximas descidas\",\"BALL_PASSED_SCRIMMAGE_LINE\":\"❌ Bola passou ilegalmente da linha de scrimmage • Perde a descida\",\"BALL_PASSED_SCRIMMAGE_LINE_CONVERSION\":\"❌ Bola passou ilegalmente da linha de scrimmage • Perde a conversão\",\"BALL_OUTSIDE_FIELD\":\"❌ Bola fora de campo • Perde a descida\",\"BALL_OUTSIDE_FIELD_CONVERSION\":\"❌ Bola fora de campo • Perde a conversão\",\"INTERCEPTION_FAILED_SACK\":\"❌ Interceptação falhou\",\"HOLDING\":\"❌ Holding por %s • %s jardas de penalidade\",\"HOLDING_CONVERSION\":\"❌ Holding por %s • Perde a conversão\"}');\n\n//# sourceURL=webpack://bfl-bot/./src/langpacks/pt-BR.json?");

/***/ }),

/***/ "./src/maps/BFL.json":
/*!***************************!*\
  !*** ./src/maps/BFL.json ***!
  \***************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"name\":\"BFL x4\",\"canBeStored\":false,\"width\":1090,\"height\":380,\"bg\":{\"type\":\"grass\",\"width\":930,\"height\":266},\"vertexes\":[{\"x\":0,\"y\":334,\"bCoef\":0.1,\"cMask\":[\"red\",\"blue\"]},{\"x\":0,\"y\":-330,\"bCoef\":0.1,\"cMask\":[\"red\",\"blue\"]},{\"x\":-775,\"y\":-266,\"cMask\":[]},{\"x\":-775,\"y\":266,\"cMask\":[]},{\"x\":-620,\"y\":-266,\"cMask\":[]},{\"x\":-620,\"y\":266,\"cMask\":[]},{\"x\":-465,\"y\":-266,\"cMask\":[]},{\"x\":-465,\"y\":266,\"cMask\":[]},{\"x\":-310,\"y\":-266,\"cMask\":[]},{\"x\":-310,\"y\":266,\"cMask\":[]},{\"x\":-155,\"y\":-266,\"cMask\":[]},{\"x\":-155,\"y\":266,\"cMask\":[]},{\"x\":155,\"y\":-266,\"cMask\":[]},{\"x\":155,\"y\":266,\"cMask\":[]},{\"x\":310,\"y\":-266,\"cMask\":[]},{\"x\":310,\"y\":266,\"cMask\":[]},{\"x\":465,\"y\":-266,\"cMask\":[]},{\"x\":465,\"y\":266,\"cMask\":[]},{\"x\":620,\"y\":-266,\"cMask\":[]},{\"x\":620,\"y\":266,\"cMask\":[]},{\"x\":775,\"y\":-266,\"cMask\":[]},{\"x\":775,\"y\":266,\"cMask\":[]},{\"x\":-1005,\"y\":360},{\"x\":-1005,\"y\":-360},{\"x\":1005,\"y\":360},{\"x\":1005,\"y\":-360},{\"x\":-775,\"y\":-375,\"cMask\":[]},{\"x\":-775,\"y\":375,\"cMask\":[]},{\"x\":-713,\"y\":-60,\"cMask\":[]},{\"x\":-713,\"y\":-80,\"cMask\":[]},{\"x\":-744,\"y\":-60,\"cMask\":[]},{\"x\":-744,\"y\":-80,\"cMask\":[]},{\"x\":-744,\"y\":80,\"cMask\":[]},{\"x\":-744,\"y\":60,\"cMask\":[]},{\"x\":-713,\"y\":80,\"cMask\":[]},{\"x\":-713,\"y\":60,\"cMask\":[]},{\"x\":713,\"y\":80,\"cMask\":[]},{\"x\":713,\"y\":60,\"cMask\":[]},{\"x\":62,\"y\":80,\"cMask\":[]},{\"x\":62,\"y\":60,\"cMask\":[]},{\"x\":31,\"y\":80,\"cMask\":[]},{\"x\":31,\"y\":60,\"cMask\":[]},{\"x\":-93,\"y\":80,\"cMask\":[]},{\"x\":-93,\"y\":60,\"cMask\":[]},{\"x\":-124,\"y\":80,\"cMask\":[]},{\"x\":-124,\"y\":60,\"cMask\":[]},{\"x\":-248,\"y\":80,\"cMask\":[]},{\"x\":-248,\"y\":60,\"cMask\":[]},{\"x\":-279,\"y\":80,\"cMask\":[]},{\"x\":-279,\"y\":60,\"cMask\":[]},{\"x\":-403,\"y\":80,\"cMask\":[]},{\"x\":-403,\"y\":60,\"cMask\":[]},{\"x\":-434,\"y\":80,\"cMask\":[]},{\"x\":-434,\"y\":60,\"cMask\":[]},{\"x\":-558,\"y\":80,\"cMask\":[]},{\"x\":-558,\"y\":60,\"cMask\":[]},{\"x\":-589,\"y\":80,\"cMask\":[]},{\"x\":-589,\"y\":60,\"cMask\":[]},{\"x\":186,\"y\":-60,\"cMask\":[]},{\"x\":186,\"y\":-80,\"cMask\":[]},{\"x\":62,\"y\":-60,\"cMask\":[]},{\"x\":62,\"y\":-80,\"cMask\":[]},{\"x\":31,\"y\":-60,\"cMask\":[]},{\"x\":31,\"y\":-80,\"cMask\":[]},{\"x\":-93,\"y\":-60,\"cMask\":[]},{\"x\":-93,\"y\":-80,\"cMask\":[]},{\"x\":-124,\"y\":-60,\"cMask\":[]},{\"x\":-124,\"y\":-80,\"cMask\":[]},{\"x\":-248,\"y\":-60,\"cMask\":[]},{\"x\":-248,\"y\":-80,\"cMask\":[]},{\"x\":-279,\"y\":-60,\"cMask\":[]},{\"x\":-279,\"y\":-80,\"cMask\":[]},{\"x\":-403,\"y\":-60,\"cMask\":[]},{\"x\":-403,\"y\":-80,\"cMask\":[]},{\"x\":-434,\"y\":-60,\"cMask\":[]},{\"x\":-434,\"y\":-80,\"cMask\":[]},{\"x\":-558,\"y\":-60,\"cMask\":[]},{\"x\":-558,\"y\":-80,\"cMask\":[]},{\"x\":-589,\"y\":-60,\"cMask\":[]},{\"x\":-589,\"y\":-80,\"cMask\":[]},{\"x\":186,\"y\":80,\"cMask\":[]},{\"x\":186,\"y\":60,\"cMask\":[]},{\"x\":651,\"y\":-60,\"cMask\":[]},{\"x\":651,\"y\":-80,\"cMask\":[]},{\"x\":651,\"y\":80,\"cMask\":[]},{\"x\":651,\"y\":60,\"cMask\":[]},{\"x\":682,\"y\":80,\"cMask\":[]},{\"x\":682,\"y\":60,\"cMask\":[]},{\"x\":682,\"y\":-60,\"cMask\":[]},{\"x\":682,\"y\":-80,\"cMask\":[]},{\"x\":527,\"y\":-60,\"cMask\":[]},{\"x\":527,\"y\":-80,\"cMask\":[]},{\"x\":527,\"y\":80,\"cMask\":[]},{\"x\":527,\"y\":60,\"cMask\":[]},{\"x\":496,\"y\":80,\"cMask\":[]},{\"x\":496,\"y\":60,\"cMask\":[]},{\"x\":496,\"y\":-60,\"cMask\":[]},{\"x\":496,\"y\":-80,\"cMask\":[]},{\"x\":372,\"y\":-60,\"cMask\":[]},{\"x\":372,\"y\":-80,\"cMask\":[]},{\"x\":403,\"y\":80,\"cMask\":[]},{\"x\":403,\"y\":60,\"cMask\":[]},{\"x\":372,\"y\":80,\"cMask\":[]},{\"x\":372,\"y\":60,\"cMask\":[]},{\"x\":341,\"y\":-60,\"cMask\":[]},{\"x\":341,\"y\":-80,\"cMask\":[]},{\"x\":217,\"y\":-60,\"cMask\":[]},{\"x\":217,\"y\":-80,\"cMask\":[]},{\"x\":217,\"y\":80,\"cMask\":[]},{\"x\":217,\"y\":60,\"cMask\":[]},{\"x\":1005,\"y\":25,\"cMask\":[]},{\"x\":1005,\"y\":-25,\"cMask\":[]},{\"x\":-682,\"y\":-60,\"cMask\":[]},{\"x\":-682,\"y\":-80,\"cMask\":[]},{\"x\":-682,\"y\":80,\"cMask\":[]},{\"x\":-682,\"y\":60,\"cMask\":[]},{\"x\":-651,\"y\":80,\"cMask\":[]},{\"x\":-651,\"y\":60,\"cMask\":[]},{\"x\":-651,\"y\":-60,\"cMask\":[]},{\"x\":-651,\"y\":-80,\"cMask\":[]},{\"x\":-527,\"y\":80,\"cMask\":[]},{\"x\":-527,\"y\":60,\"cMask\":[]},{\"x\":-527,\"y\":-60,\"cMask\":[]},{\"x\":-527,\"y\":-80,\"cMask\":[]},{\"x\":-496,\"y\":-60,\"cMask\":[]},{\"x\":-496,\"y\":-80,\"cMask\":[]},{\"x\":-496,\"y\":80,\"cMask\":[]},{\"x\":-496,\"y\":60,\"cMask\":[]},{\"x\":-372,\"y\":-60,\"cMask\":[]},{\"x\":-372,\"y\":-80,\"cMask\":[]},{\"x\":-372,\"y\":80,\"cMask\":[]},{\"x\":-372,\"y\":60,\"cMask\":[]},{\"x\":-341,\"y\":80,\"cMask\":[]},{\"x\":-341,\"y\":60,\"cMask\":[]},{\"x\":-341,\"y\":-60,\"cMask\":[]},{\"x\":-341,\"y\":-80,\"cMask\":[]},{\"x\":-217,\"y\":80,\"cMask\":[]},{\"x\":-217,\"y\":60,\"cMask\":[]},{\"x\":-186,\"y\":80,\"cMask\":[]},{\"x\":-186,\"y\":60,\"cMask\":[]},{\"x\":-217,\"y\":-60,\"cMask\":[]},{\"x\":-217,\"y\":-80,\"cMask\":[]},{\"x\":-186,\"y\":-60,\"cMask\":[]},{\"x\":-186,\"y\":-80,\"cMask\":[]},{\"x\":-62,\"y\":80,\"cMask\":[]},{\"x\":-62,\"y\":60,\"cMask\":[]},{\"x\":-31,\"y\":80,\"cMask\":[]},{\"x\":-31,\"y\":60,\"cMask\":[]},{\"x\":-62,\"y\":-60,\"cMask\":[]},{\"x\":-62,\"y\":-80,\"cMask\":[]},{\"x\":-31,\"y\":-60,\"cMask\":[]},{\"x\":-31,\"y\":-80,\"cMask\":[]},{\"x\":93,\"y\":-60,\"cMask\":[]},{\"x\":93,\"y\":-80,\"cMask\":[]},{\"x\":93,\"y\":80,\"cMask\":[]},{\"x\":93,\"y\":60,\"cMask\":[]},{\"x\":124,\"y\":80,\"cMask\":[]},{\"x\":124,\"y\":60,\"cMask\":[]},{\"x\":124,\"y\":-60,\"cMask\":[]},{\"x\":124,\"y\":-80,\"cMask\":[]},{\"x\":248,\"y\":80,\"cMask\":[]},{\"x\":248,\"y\":60,\"cMask\":[]},{\"x\":248,\"y\":-60,\"cMask\":[]},{\"x\":248,\"y\":-80,\"cMask\":[]},{\"x\":279,\"y\":-60,\"cMask\":[]},{\"x\":279,\"y\":-80,\"cMask\":[]},{\"x\":279,\"y\":80,\"cMask\":[]},{\"x\":279,\"y\":60,\"cMask\":[]},{\"x\":341,\"y\":80,\"cMask\":[]},{\"x\":341,\"y\":60,\"cMask\":[]},{\"x\":403,\"y\":-60,\"cMask\":[]},{\"x\":403,\"y\":-80,\"cMask\":[]},{\"x\":434,\"y\":-60,\"cMask\":[]},{\"x\":434,\"y\":-80,\"cMask\":[]},{\"x\":434,\"y\":80,\"cMask\":[]},{\"x\":434,\"y\":60,\"cMask\":[]},{\"x\":558,\"y\":80,\"cMask\":[]},{\"x\":558,\"y\":60,\"cMask\":[]},{\"x\":558,\"y\":-60,\"cMask\":[]},{\"x\":558,\"y\":-80,\"cMask\":[]},{\"x\":589,\"y\":-60,\"cMask\":[]},{\"x\":589,\"y\":-80,\"cMask\":[]},{\"x\":589,\"y\":80,\"cMask\":[]},{\"x\":589,\"y\":60,\"cMask\":[]},{\"x\":713,\"y\":-60,\"cMask\":[]},{\"x\":713,\"y\":-80,\"cMask\":[]},{\"x\":744,\"y\":-60,\"cMask\":[]},{\"x\":744,\"y\":-80,\"cMask\":[]},{\"x\":744,\"y\":80,\"cMask\":[]},{\"x\":744,\"y\":60,\"cMask\":[]},{\"x\":-697.5,\"y\":266,\"cMask\":[]},{\"x\":-697.5,\"y\":246,\"cMask\":[]},{\"x\":-542.5,\"y\":266,\"cMask\":[]},{\"x\":-542.5,\"y\":246,\"cMask\":[]},{\"x\":-387.5,\"y\":266,\"cMask\":[]},{\"x\":-387.5,\"y\":246,\"cMask\":[]},{\"x\":-232.5,\"y\":266,\"cMask\":[]},{\"x\":-232.5,\"y\":246,\"cMask\":[]},{\"x\":-77.5,\"y\":266,\"cMask\":[]},{\"x\":-77.5,\"y\":246,\"cMask\":[]},{\"x\":77.5,\"y\":266,\"cMask\":[]},{\"x\":77.5,\"y\":246,\"cMask\":[]},{\"x\":232.5,\"y\":266,\"cMask\":[]},{\"x\":232.5,\"y\":246,\"cMask\":[]},{\"x\":387.5,\"y\":266,\"cMask\":[]},{\"x\":387.5,\"y\":246,\"cMask\":[]},{\"x\":387.5,\"y\":-246,\"cMask\":[]},{\"x\":387.5,\"y\":-266,\"cMask\":[]},{\"x\":232.5,\"y\":-246,\"cMask\":[]},{\"x\":232.5,\"y\":-266,\"cMask\":[]},{\"x\":77.5,\"y\":-246,\"cMask\":[]},{\"x\":77.5,\"y\":-266,\"cMask\":[]},{\"x\":542.5,\"y\":-246,\"cMask\":[]},{\"x\":542.5,\"y\":-266,\"cMask\":[]},{\"x\":697.5,\"y\":-246,\"cMask\":[]},{\"x\":697.5,\"y\":-266,\"cMask\":[]},{\"x\":-77.5,\"y\":-246,\"cMask\":[]},{\"x\":-77.5,\"y\":-266,\"cMask\":[]},{\"x\":-232.5,\"y\":-246,\"cMask\":[]},{\"x\":-232.5,\"y\":-266,\"cMask\":[]},{\"x\":-387.5,\"y\":-246,\"cMask\":[]},{\"x\":-387.5,\"y\":-266,\"cMask\":[]},{\"x\":-542.5,\"y\":-246,\"cMask\":[]},{\"x\":-542.5,\"y\":-266,\"cMask\":[]},{\"x\":-697.5,\"y\":-246,\"cMask\":[]},{\"x\":-697.5,\"y\":-266,\"cMask\":[]},{\"x\":930,\"y\":-60,\"cMask\":[]},{\"x\":930,\"y\":60,\"cMask\":[]},{\"x\":930,\"y\":-60,\"cMask\":[]},{\"x\":980,\"y\":-130,\"cMask\":[]},{\"x\":990,\"y\":-10,\"cMask\":[]},{\"x\":0,\"y\":-266,\"cMask\":[]},{\"x\":0,\"y\":266,\"cMask\":[]},{\"x\":775,\"y\":-375,\"cMask\":[]},{\"x\":775,\"y\":375,\"cMask\":[]},{\"x\":542.5,\"y\":266,\"cMask\":[]},{\"x\":542.5,\"y\":246,\"cMask\":[]},{\"x\":697.5,\"y\":266,\"cMask\":[]},{\"x\":697.5,\"y\":246,\"cMask\":[]},{\"x\":-930,\"y\":-60,\"cMask\":[]},{\"x\":-980,\"y\":-130,\"cMask\":[]},{\"x\":-930,\"y\":60,\"cMask\":[]},{\"x\":-990,\"y\":-10,\"cMask\":[]},{\"x\":930,\"y\":-266,\"cMask\":[]},{\"x\":-930,\"y\":-266,\"cMask\":[]},{\"x\":-930,\"y\":266,\"cMask\":[]},{\"x\":930,\"y\":266,\"cMask\":[]}],\"segments\":[{\"v0\":0,\"v1\":1,\"vis\":false,\"bCoef\":0.1,\"cMask\":[\"red\",\"blue\"],\"cGroup\":[]},{\"v0\":2,\"v1\":3,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":4,\"v1\":5,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":6,\"v1\":7,\"color\":\"FF0000\",\"cMask\":[]},{\"v0\":8,\"v1\":9,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":10,\"v1\":11,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":12,\"v1\":13,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":14,\"v1\":15,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":16,\"v1\":17,\"color\":\"FF0000\",\"cMask\":[]},{\"v0\":18,\"v1\":19,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":20,\"v1\":21,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":22,\"v1\":23,\"vis\":false,\"color\":\"FF\",\"cMask\":[\"ball\"]},{\"v0\":24,\"v1\":25,\"vis\":false,\"color\":\"FF0000\",\"cMask\":[\"ball\"]},{\"v0\":26,\"v1\":27,\"vis\":false,\"color\":\"ffea00\",\"bCoef\":0.1,\"cMask\":[\"red\",\"blue\"],\"cGroup\":[]},{\"v0\":28,\"v1\":29,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":30,\"v1\":31,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":32,\"v1\":33,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":34,\"v1\":35,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":36,\"v1\":37,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":38,\"v1\":39,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":40,\"v1\":41,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":42,\"v1\":43,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":44,\"v1\":45,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":46,\"v1\":47,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":48,\"v1\":49,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":50,\"v1\":51,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":52,\"v1\":53,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":54,\"v1\":55,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":56,\"v1\":57,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":58,\"v1\":59,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":60,\"v1\":61,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":62,\"v1\":63,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":64,\"v1\":65,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":66,\"v1\":67,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":68,\"v1\":69,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":70,\"v1\":71,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":72,\"v1\":73,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":74,\"v1\":75,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":76,\"v1\":77,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":78,\"v1\":79,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":80,\"v1\":81,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":82,\"v1\":83,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":84,\"v1\":85,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":86,\"v1\":87,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":88,\"v1\":89,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":90,\"v1\":91,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":92,\"v1\":93,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":94,\"v1\":95,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":96,\"v1\":97,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":98,\"v1\":99,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":100,\"v1\":101,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":102,\"v1\":103,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":104,\"v1\":105,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":106,\"v1\":107,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":108,\"v1\":109,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":112,\"v1\":113,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":114,\"v1\":115,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":116,\"v1\":117,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":118,\"v1\":119,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":120,\"v1\":121,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":122,\"v1\":123,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":124,\"v1\":125,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":126,\"v1\":127,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":128,\"v1\":129,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":130,\"v1\":131,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":132,\"v1\":133,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":134,\"v1\":135,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":136,\"v1\":137,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":138,\"v1\":139,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":140,\"v1\":141,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":142,\"v1\":143,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":144,\"v1\":145,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":146,\"v1\":147,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":148,\"v1\":149,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":150,\"v1\":151,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":152,\"v1\":153,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":154,\"v1\":155,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":156,\"v1\":157,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":158,\"v1\":159,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":160,\"v1\":161,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":162,\"v1\":163,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":164,\"v1\":165,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":166,\"v1\":167,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":168,\"v1\":169,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":170,\"v1\":171,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":172,\"v1\":173,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":174,\"v1\":175,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":176,\"v1\":177,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":178,\"v1\":179,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":180,\"v1\":181,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":182,\"v1\":183,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":184,\"v1\":185,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":186,\"v1\":187,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":188,\"v1\":189,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":190,\"v1\":191,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":192,\"v1\":193,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":194,\"v1\":195,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":196,\"v1\":197,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":198,\"v1\":199,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":200,\"v1\":201,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":202,\"v1\":203,\"color\":\"C7E6BD\",\"cMask\":[]},{\"v0\":204,\"v1\":205,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":206,\"v1\":207,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":208,\"v1\":209,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":210,\"v1\":211,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":212,\"v1\":213,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":214,\"v1\":215,\"color\":\"C7E6BD\",\"cMask\":[]},{\"v0\":216,\"v1\":217,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":218,\"v1\":219,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":220,\"v1\":221,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":222,\"v1\":223,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":224,\"v1\":225,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":231,\"v1\":232,\"color\":\"4FF\",\"cMask\":[]},{\"v0\":233,\"v1\":234,\"vis\":false,\"color\":\"ffea00\",\"bCoef\":0.1,\"cMask\":[\"red\",\"blue\"],\"cGroup\":[]},{\"v0\":235,\"v1\":236,\"color\":\"C7E6BD\",\"cMask\":[]},{\"v0\":237,\"v1\":238,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":228,\"v1\":229,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":227,\"v1\":230,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":239,\"v1\":240,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":241,\"v1\":242,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":243,\"v1\":244,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":245,\"v1\":246,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":244,\"v1\":245,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":246,\"v1\":243,\"color\":\"FFFFFF\",\"cMask\":[]},{\"v0\":228,\"v1\":227,\"color\":\"ffea00\",\"cMask\":[]},{\"v0\":239,\"v1\":241,\"color\":\"ffea00\",\"cMask\":[]}],\"planes\":[{\"normal\":[0,1],\"dist\":-350,\"cMask\":[\"ball\"]},{\"normal\":[0,-1],\"dist\":-350,\"cMask\":[\"ball\"]},{\"normal\":[1,0],\"dist\":-1065,\"cMask\":[\"ball\"]},{\"normal\":[-1,0],\"dist\":-1065,\"cMask\":[\"ball\"]},{\"normal\":[0,1],\"dist\":-375,\"bCoef\":0.9},{\"normal\":[0,-1],\"dist\":-375,\"bCoef\":0.9},{\"normal\":[1,0],\"dist\":-1090,\"bCoef\":0.9},{\"normal\":[-1,0],\"dist\":-1090,\"bCoef\":0.9},{\"normal\":[-1,0],\"dist\":775,\"cMask\":[\"c0\"]},{\"normal\":[1,0],\"dist\":775,\"cMask\":[\"c1\"]},{\"normal\":[-1,0],\"dist\":0,\"cMask\":[\"c2\"]},{\"normal\":[1,0],\"dist\":0,\"cMask\":[\"c3\"]}],\"goals\":[{\"p0\":[-1065,0],\"p1\":[-1005,0],\"team\":\"blue\"},{\"p0\":[1006.9833374023,1.6000061035156],\"p1\":[1063.9833374023,1.6000061035156],\"team\":\"red\"}],\"discs\":[{\"radius\":4,\"invMass\":0,\"pos\":[930,-60],\"color\":\"FFFF00\"},{\"radius\":4,\"invMass\":0,\"pos\":[-930,-60],\"color\":\"FFFF00\"},{\"radius\":4,\"invMass\":0,\"pos\":[-930,60],\"color\":\"FFFF00\"},{\"radius\":4,\"invMass\":0,\"pos\":[930,60],\"color\":\"FFFF00\"},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"FF0000\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"FF0000\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"FF0000\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"FF0000\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":0,\"invMass\":1,\"pos\":[0,0],\"color\":\"transparent\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"f5f5f5\",\"cGroup\":[]},{\"radius\":1,\"invMass\":1,\"pos\":[9999,9999],\"color\":\"f5f5f5\",\"cGroup\":[]}],\"playerPhysics\":{\"bCoef\":0.5,\"invMass\":1e+26,\"kickStrength\":7},\"ballPhysics\":{\"radius\":7.125,\"bCoef\":0.5,\"cMask\":[\"red\",\"blue\",\"wall\"],\"color\":\"631515\",\"cGroup\":[\"ball\",\"kick\",\"score\"]},\"cameraFollow\":\"player\",\"spawnDistance\":980,\"traits\":{},\"joints\":[{\"d0\":5,\"d1\":6,\"color\":\"ffa200\",\"length\":[0,99999]},{\"d0\":7,\"d1\":8,\"color\":\"acde97\",\"length\":[0,99999]},{\"d0\":9,\"d1\":10,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":11,\"d1\":12,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":13,\"d1\":14,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":15,\"d1\":16,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":17,\"d1\":18,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":19,\"d1\":20,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":21,\"d1\":22,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":23,\"d1\":24,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":25,\"d1\":26,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":27,\"d1\":28,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":29,\"d1\":30,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":31,\"d1\":32,\"color\":\"FF0000\",\"length\":[0,99999]},{\"d0\":37,\"d1\":38,\"color\":\"f5f5f5\",\"length\":[0,99999]},{\"d0\":39,\"d1\":40,\"color\":\"f5f5f5\",\"length\":[0,99999]},{\"d0\":41,\"d1\":42,\"color\":\"f5f5f5\",\"length\":[0,99999]},{\"d0\":43,\"d1\":44,\"color\":\"f5f5f5\",\"length\":[0,99999]},{\"d0\":45,\"d1\":46,\"color\":\"f5f5f5\",\"length\":[0,99999]},{\"d0\":47,\"d1\":48,\"color\":\"f5f5f5\",\"length\":[0,99999]}],\"redSpawnPoints\":[],\"blueSpawnPoints\":[]}');\n\n//# sourceURL=webpack://bfl-bot/./src/maps/BFL.json?");

/***/ }),

/***/ "./src/teams.json":
/*!************************!*\
  !*** ./src/teams.json ***!
  \************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"Buccaneers\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFFFFF D50A0A C20B0B 34302B\"},\"Steelers\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF 131D26 101820 FFB612\"},\"Eagles\":{\"category\":\"GREEN\",\"color\":\"/colors red 60 FFFFFF 04753E 046A38 B2D6C0\"},\"Broncos\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFFFFF FB4F14 D64311 002244\"},\"Patriots\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF C60C30 002244 002244\"},\"Dolphins\":{\"category\":\"LIGHT\",\"color\":\"/colors red 60 FFFFFF FC4C02 008E97 BCCED1\"},\"Bears\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFFFFF D93D03 C83803 DBB781\"},\"Browns\":{\"category\":\"DARK\",\"color\":\"/colors red 60 ED8D39 FF3C00 311D00 382100\"},\"Rams\":{\"category\":\"BLUE\",\"color\":\"/colors red 60 FFD70F 003AA3 003594 FFA300\"},\"Falcons\":{\"category\":\"DARK\",\"color\":\"/colors red 60 EDEDED A71930 000000 121212\"},\"Panthers\":{\"category\":\"DARK\",\"color\":\"/colors red 60 EDEDED 0085CA 101820 141F29\"},\"Saints\":{\"category\":\"LIGHT\",\"color\":\"/colors red 60 9C7B1C D3BC8D FFFFFF EDEDED\"},\"Chiefs\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFFFFF BD142D E31837 F2EBEB\"},\"Bills\":{\"category\":\"BLUE\",\"color\":\"/colors red 60 FFFFFF 003AA1 00338D C6D4F5\"},\"Jets\":{\"category\":\"GREEN\",\"color\":\"/colors red 60 FFFFFF 146147 125740 B5F2D6\"},\"Texans\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF A71930 03202F 042A3D\"},\"Jaguars\":{\"category\":\"GREEN\",\"color\":\"/colors red 60 C7F8FF 007487 006778 000000\"},\"Colts\":{\"category\":\"DARK\",\"color\":\"/colors red 60 EBF3FF 003573 002C5F C9DAFF\"},\"Chargers\":{\"category\":\"BLUE\",\"color\":\"/colors red 60 FCFDFF 0087D1 0080C6 FFC20E\"},\"Bengals\":{\"category\":\"DARK\",\"color\":\"/colors red 60 F7EEE8 FB4F14 000000 141414\"},\"Raiders\":{\"category\":\"DARK\",\"color\":\"/colors red 60 F5F5F5 141414 000000 A5ACAF\"},\"Cowboys\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF 062C61 041E42 C9C9C9\"},\"49ers\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFF0F0 BA0000 AA0000 B3995D\"},\"Ravens\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF 291A82 241773 CACBE8\"},\"Vikings\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFC62F 5E2D9C 4F2683 452173\"},\"Packers\":{\"category\":\"GREEN\",\"color\":\"/colors red 60 E6B22A FFB612 203731 27423B\"},\"Titans\":{\"category\":\"BLUE\",\"color\":\"/colors red 60 08182B 52A0F0 4B92DB 0C2340\"},\"Cardinals\":{\"category\":\"RED\",\"color\":\"/colors red 60 FFFFFF 97233F 97233F FFD6DE\"},\"Giants\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFFFFF 0F2D87 0B2265 DCE8F7\"},\"Seahawks\":{\"category\":\"DARK\",\"color\":\"/colors red 60 69BE28 002B57 002244 001C38\"},\"Lions\":{\"category\":\"LIGHT\",\"color\":\"/colors red 60 EDEDED 007FC4 0076B6 B0B7BC\"},\"Commanders\":{\"category\":\"DARK\",\"color\":\"/colors red 60 FFB612 6B1818 5A1414 471010\"}}');\n\n//# sourceURL=webpack://bfl-bot/./src/teams.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Bot.ts");
/******/ 	
/******/ })()
;